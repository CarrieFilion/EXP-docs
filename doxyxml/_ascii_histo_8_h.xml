<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_ascii_histo_8_h" kind="file" language="C++">
    <compoundname>AsciiHisto.H</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">vector</includes>
    <includes local="no">memory</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/include/AsciiHisto.H</label>
        <link refid="_ascii_histo_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>iomanip</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_ascii_histo" prot="public">AsciiHisto</innerclass>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_ascii_histo_8_h_1a089603d2f53c242ffa927b5c7dca85df" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_ascii_histo" kindref="compound">AsciiHisto</ref>&lt; double &gt; &gt;</type>
        <definition>typedef std::shared_ptr&lt; AsciiHisto&lt;double &gt; &gt; ahistoDPtr</definition>
        <argsstring></argsstring>
        <name>ahistoDPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/AsciiHisto.H" line="142" column="25" bodyfile="/home/weinberg/Projects/EXP/include/AsciiHisto.H" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_ascii_histo_8_h_1a9a5321ff5c1106950441354b86e778ce" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_ascii_histo" kindref="compound">AsciiHisto</ref>&lt; int &gt; &gt;</type>
        <definition>typedef std::shared_ptr&lt; AsciiHisto&lt;int &gt; &gt; ahistoIPtr</definition>
        <argsstring></argsstring>
        <name>ahistoIPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/AsciiHisto.H" line="143" column="25" bodyfile="/home/weinberg/Projects/EXP/include/AsciiHisto.H" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_ascii_histo_8_h_1abef8efd01b2f7ddf3d56e612829d8392" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_ascii_histo" kindref="compound">AsciiHisto</ref>&lt; unsigned &gt; &gt;</type>
        <definition>typedef std::shared_ptr&lt; AsciiHisto&lt;unsigned&gt; &gt; ahistoUPtr</definition>
        <argsstring></argsstring>
        <name>ahistoUPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/AsciiHisto.H" line="141" column="25" bodyfile="/home/weinberg/Projects/EXP/include/AsciiHisto.H" bodystart="141" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_AsciiHisto_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_AsciiHisto_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="12" refid="class_ascii_histo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ascii_histo" kindref="compound">AsciiHisto</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_ascii_histo_1a7c8bbea752a7f0588fbfb5b9fc646c2a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;unsigned&gt;<sp/><ref refid="class_ascii_histo_1a7c8bbea752a7f0588fbfb5b9fc646c2a" kindref="member">bins</ref>;</highlight></codeline>
<codeline lineno="17" refid="class_ascii_histo_1a68a4d018360a5688218bd4779626dcec" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_ascii_histo_1a68a4d018360a5688218bd4779626dcec" kindref="member">beg</ref>,<sp/><ref refid="class_ascii_histo_1afe22d53db3542c836de31ea1eb533511" kindref="member">end</ref>,<sp/><ref refid="class_ascii_histo_1a6f5388a2e71d21b017bd6acc86ebd24d" kindref="member">dx</ref>;</highlight></codeline>
<codeline lineno="18" refid="class_ascii_histo_1ae7d420d32a094780f7d327a30c6d648b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ascii_histo_1ae7d420d32a094780f7d327a30c6d648b" kindref="member">logH</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_ascii_histo_1a627028cf3e16f0c952d97cbee143a53d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ascii_histo_1a627028cf3e16f0c952d97cbee143a53d" kindref="member">makeBins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbins)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d.size())<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ascii_histo_1a68a4d018360a5688218bd4779626dcec" kindref="member">beg</ref><sp/>=<sp/>*std::min_element(d.begin(),<sp/>d.end());</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ascii_histo_1afe22d53db3542c836de31ea1eb533511" kindref="member">end</ref><sp/>=<sp/>*std::max_element(d.begin(),<sp/>d.end());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ascii_histo_1a68a4d018360a5688218bd4779626dcec" kindref="member">beg</ref>&lt;=0.0)<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ascii_histo_1ae7d420d32a094780f7d327a30c6d648b" kindref="member">logH</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ascii_histo_1ae7d420d32a094780f7d327a30c6d648b" kindref="member">logH</ref>)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ascii_histo_1a68a4d018360a5688218bd4779626dcec" kindref="member">beg</ref><sp/>=<sp/>log(<ref refid="class_ascii_histo_1a68a4d018360a5688218bd4779626dcec" kindref="member">beg</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ascii_histo_1afe22d53db3542c836de31ea1eb533511" kindref="member">end</ref><sp/>=<sp/>log(<ref refid="class_ascii_histo_1afe22d53db3542c836de31ea1eb533511" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbins==0)<sp/>nbins<sp/>=<sp/>floor(sqrt(d.size()));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ascii_histo_1a6f5388a2e71d21b017bd6acc86ebd24d" kindref="member">dx</ref><sp/><sp/>=<sp/>(<ref refid="class_ascii_histo_1afe22d53db3542c836de31ea1eb533511" kindref="member">end</ref><sp/>-<sp/><ref refid="class_ascii_histo_1a68a4d018360a5688218bd4779626dcec" kindref="member">beg</ref>)/nbins;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ascii_histo_1a6f5388a2e71d21b017bd6acc86ebd24d" kindref="member">dx</ref>==0)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbins<sp/>=<sp/><ref refid="class_ascii_histo_1afe22d53db3542c836de31ea1eb533511" kindref="member">end</ref><sp/>-<sp/><ref refid="class_ascii_histo_1a68a4d018360a5688218bd4779626dcec" kindref="member">beg</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ascii_histo_1a6f5388a2e71d21b017bd6acc86ebd24d" kindref="member">dx</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ascii_histo_1a7c8bbea752a7f0588fbfb5b9fc646c2a" kindref="member">bins</ref>.resize(nbins,<sp/>0);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>:<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>std::isnan(v)<sp/>and<sp/>not<sp/>std::isinf(v))<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ascii_histo_1ae7d420d32a094780f7d327a30c6d648b" kindref="member">logH</ref>)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v&lt;=0.0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>log(v);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indx<sp/>=<sp/>floor(<sp/>(v<sp/>-<sp/><ref refid="class_ascii_histo_1a68a4d018360a5688218bd4779626dcec" kindref="member">beg</ref>)/<ref refid="class_ascii_histo_1a6f5388a2e71d21b017bd6acc86ebd24d" kindref="member">dx</ref><sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indx&gt;=0<sp/>and<sp/>indx<sp/>&lt;<sp/>nbins)<sp/><ref refid="class_ascii_histo_1a7c8bbea752a7f0588fbfb5b9fc646c2a" kindref="member">bins</ref>[floor(<sp/>(v<sp/>-<sp/><ref refid="class_ascii_histo_1a68a4d018360a5688218bd4779626dcec" kindref="member">beg</ref>)/<ref refid="class_ascii_histo_1a6f5388a2e71d21b017bd6acc86ebd24d" kindref="member">dx</ref><sp/>)]++;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="class_ascii_histo_1ab82f12138ede22ad250ec4c7a8675385" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_ascii_histo_1ab82f12138ede22ad250ec4c7a8675385" kindref="member">AsciiHisto</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbins,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_sutils_8_h_1a6ef734356291c638e5787a6c668192d4" kindref="member">trim</ref>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logV=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="class_ascii_histo_1ae7d420d32a094780f7d327a30c6d648b" kindref="member">logH</ref>(logV)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_sutils_8_h_1a6ef734356291c638e5787a6c668192d4" kindref="member">trim</ref>&gt;0.0)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>d(data);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(d.begin(),<sp/>d.end());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>lower<sp/>=<sp/>floor(<ref refid="_sutils_8_h_1a6ef734356291c638e5787a6c668192d4" kindref="member">trim</ref>*d.size());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>upper<sp/>=<sp/>floor((1.0-<ref refid="_sutils_8_h_1a6ef734356291c638e5787a6c668192d4" kindref="member">trim</ref>)*d.size());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.erase(d.begin()+upper,<sp/>d.end());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.erase(d.begin(),<sp/>d.begin()+lower);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ascii_histo_1a627028cf3e16f0c952d97cbee143a53d" kindref="member">makeBins</ref>(d,<sp/>nbins);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ascii_histo_1a627028cf3e16f0c952d97cbee143a53d" kindref="member">makeBins</ref>(data,<sp/>nbins);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="class_ascii_histo_1aab7726dca5cfda84a824c94a99ac412c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_ascii_histo_1aab7726dca5cfda84a824c94a99ac412c" kindref="member">AsciiHisto</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbins=0,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logV=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="class_ascii_histo_1ae7d420d32a094780f7d327a30c6d648b" kindref="member">logH</ref>(logV)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ascii_histo_1a627028cf3e16f0c952d97cbee143a53d" kindref="member">makeBins</ref>(d,<sp/>nbins);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_ascii_histo_1ad835bd7dc4e56681ecf4408883f56bfb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_ascii_histo_1ad835bd7dc4e56681ecf4408883f56bfb" kindref="member">AsciiHisto</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned&gt;&amp;<sp/>inbins,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>inBeg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>inEnd,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logV=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="class_ascii_histo_1ae7d420d32a094780f7d327a30c6d648b" kindref="member">logH</ref>(logV)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ascii_histo_1a7c8bbea752a7f0588fbfb5b9fc646c2a" kindref="member">bins</ref><sp/>=<sp/>inbins;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ascii_histo_1a68a4d018360a5688218bd4779626dcec" kindref="member">beg</ref><sp/><sp/>=<sp/>inBeg;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ascii_histo_1afe22d53db3542c836de31ea1eb533511" kindref="member">end</ref><sp/><sp/>=<sp/>inEnd;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ascii_histo_1a6f5388a2e71d21b017bd6acc86ebd24d" kindref="member">dx</ref><sp/><sp/><sp/>=<sp/>(<ref refid="class_ascii_histo_1afe22d53db3542c836de31ea1eb533511" kindref="member">end</ref><sp/>-<sp/><ref refid="class_ascii_histo_1a68a4d018360a5688218bd4779626dcec" kindref="member">beg</ref>)/<ref refid="class_ascii_histo_1a7c8bbea752a7f0588fbfb5b9fc646c2a" kindref="member">bins</ref>.size();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_ascii_histo_1ae482bd51c52a4e335b85aeca75749ee8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ascii_histo_1ae482bd51c52a4e335b85aeca75749ee8" kindref="member">operator()</ref>(std::ostream<sp/>&amp;out,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>hwid=60)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ascii_histo_1a7c8bbea752a7f0588fbfb5b9fc646c2a" kindref="member">bins</ref>.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>wid<sp/><sp/>=<sp/><ref refid="class_ascii_histo_1ae7d420d32a094780f7d327a30c6d648b" kindref="member">logH</ref><sp/>?<sp/>16<sp/>:<sp/>12;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>maxb<sp/>=<sp/>*std::max_element(<ref refid="class_ascii_histo_1a7c8bbea752a7f0588fbfb5b9fc646c2a" kindref="member">bins</ref>.begin(),<sp/><ref refid="class_ascii_histo_1a7c8bbea752a7f0588fbfb5b9fc646c2a" kindref="member">bins</ref>.end());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>hscl<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(hwid)/maxb;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sep(</highlight><highlight class="stringliteral">&quot;<sp/>|<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="src_2tipsydefs_8h_1a6349b18097d9888f9071e823186391e9" kindref="member">header</ref>(2*wid<sp/>+<sp/>4<sp/>+<sp/>2*sep.size()<sp/>+<sp/>hwid<sp/>+<sp/>10,<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(wid)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;bin<sp/>low&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(wid)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;bin<sp/>high&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(2*sep.size()<sp/>+<sp/>hwid)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::left</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(10)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Counts&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/><ref refid="src_2tipsydefs_8h_1a6349b18097d9888f9071e823186391e9" kindref="member">header</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;<ref refid="class_ascii_histo_1a7c8bbea752a7f0588fbfb5b9fc646c2a" kindref="member">bins</ref>.size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>sout;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>lower<sp/>=<sp/><ref refid="class_ascii_histo_1a68a4d018360a5688218bd4779626dcec" kindref="member">beg</ref><sp/>+<sp/><ref refid="class_ascii_histo_1a6f5388a2e71d21b017bd6acc86ebd24d" kindref="member">dx</ref>*(j+0);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>upper<sp/>=<sp/><ref refid="class_ascii_histo_1a68a4d018360a5688218bd4779626dcec" kindref="member">beg</ref><sp/>+<sp/><ref refid="class_ascii_histo_1a6f5388a2e71d21b017bd6acc86ebd24d" kindref="member">dx</ref>*(j+1);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ascii_histo_1ae7d420d32a094780f7d327a30c6d648b" kindref="member">logH</ref>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>out<sp/>decimal<sp/>bin<sp/>edges<sp/>for<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower<sp/>=<sp/>exp(lower);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scaled<sp/>bins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/>exp(upper);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(wid)<sp/>&lt;&lt;<sp/>lower<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(wid)<sp/>&lt;&lt;<sp/>upper<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sep;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>floor(hscl*<ref refid="class_ascii_histo_1a7c8bbea752a7f0588fbfb5b9fc646c2a" kindref="member">bins</ref>[j]);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>sout.str()<sp/>&lt;&lt;<sp/>std::setw(hwid)<sp/>&lt;&lt;<sp/>std::string(cnt,<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>sep<sp/>&lt;&lt;<sp/>std::setw(10)<sp/>&lt;&lt;<sp/><ref refid="class_ascii_histo_1a7c8bbea752a7f0588fbfb5b9fc646c2a" kindref="member">bins</ref>[j]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/><ref refid="src_2tipsydefs_8h_1a6349b18097d9888f9071e823186391e9" kindref="member">header</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="_ascii_histo_8_h_1abef8efd01b2f7ddf3d56e612829d8392" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;<sp/>AsciiHisto&lt;unsigned&gt;<sp/>&gt;<sp/><ref refid="_ascii_histo_8_h_1abef8efd01b2f7ddf3d56e612829d8392" kindref="member">ahistoUPtr</ref>;</highlight></codeline>
<codeline lineno="142" refid="_ascii_histo_8_h_1a089603d2f53c242ffa927b5c7dca85df" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;<sp/>AsciiHisto&lt;double<sp/><sp/>&gt;<sp/>&gt;<sp/><ref refid="_ascii_histo_8_h_1a089603d2f53c242ffa927b5c7dca85df" kindref="member">ahistoDPtr</ref>;</highlight></codeline>
<codeline lineno="143" refid="_ascii_histo_8_h_1a9a5321ff5c1106950441354b86e778ce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;<sp/>AsciiHisto&lt;int<sp/><sp/><sp/><sp/><sp/>&gt;<sp/>&gt;<sp/><ref refid="_ascii_histo_8_h_1a9a5321ff5c1106950441354b86e778ce" kindref="member">ahistoIPtr</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/weinberg/Projects/EXP/include/AsciiHisto.H"/>
  </compounddef>
</doxygen>
