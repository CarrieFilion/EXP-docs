<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_circular_8_h" kind="file" language="C++">
    <compoundname>Circular.H</compoundname>
    <includes local="no">vector</includes>
    <includedby refid="_component_8_h" local="no">/home/weinberg/Projects/EXP/src/Component.H</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/include/Circular.H</label>
        <link refid="_circular_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/include/Circular.H</label>
        <link refid="_circular_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/weinberg/Projects/EXP/src/Component.H</label>
        <link refid="_component_8_h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/weinberg/Projects/EXP/src/ComponentContainer.H</label>
        <link refid="_component_container_8_h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/home/weinberg/Projects/EXP/src/CylEXP.H</label>
        <link refid="_cyl_e_x_p_8_h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/weinberg/Projects/EXP/src/CylTwoD.H</label>
        <link refid="_cyl_two_d_8_h"/>
      </node>
      <node id="16">
        <label>/home/weinberg/Projects/EXP/src/Cylinder.H</label>
        <link refid="_cylinder_8_h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/home/weinberg/Projects/EXP/src/EJcom.H</label>
        <link refid="_e_jcom_8_h"/>
      </node>
      <node id="4">
        <label>/home/weinberg/Projects/EXP/src/ExternalCollection.H</label>
        <link refid="_external_collection_8_h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/weinberg/Projects/EXP/src/ExternalForce.H</label>
        <link refid="_external_force_8_h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/home/weinberg/Projects/EXP/src/HaloBulge.H</label>
        <link refid="_halo_bulge_8_h"/>
      </node>
      <node id="19">
        <label>/home/weinberg/Projects/EXP/src/MixtureBasis.H</label>
        <link refid="_mixture_basis_8_h"/>
      </node>
      <node id="25">
        <label>/home/weinberg/Projects/EXP/src/OutAscii.H</label>
        <link refid="_out_ascii_8_h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/weinberg/Projects/EXP/src/OutCalbr.H</label>
        <link refid="_out_calbr_8_h"/>
      </node>
      <node id="27">
        <label>/home/weinberg/Projects/EXP/src/OutFrac.H</label>
        <link refid="_out_frac_8_h"/>
      </node>
      <node id="28">
        <label>/home/weinberg/Projects/EXP/src/OutVel.H</label>
        <link refid="_out_vel_8_h"/>
      </node>
      <node id="5">
        <label>/home/weinberg/Projects/EXP/src/PeriodicBC.H</label>
        <link refid="_periodic_b_c_8_h"/>
      </node>
      <node id="23">
        <label>/home/weinberg/Projects/EXP/src/ScatterMFP.H</label>
        <link refid="_scatter_m_f_p_8_h"/>
      </node>
      <node id="20">
        <label>/home/weinberg/Projects/EXP/src/Shells.H</label>
        <link refid="_shells_8_h"/>
      </node>
      <node id="17">
        <label>/home/weinberg/Projects/EXP/src/TwoCenter.H</label>
        <link refid="_two_center_8_h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/weinberg/Projects/EXP/src/expand.H</label>
        <link refid="expand_8_h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/weinberg/Projects/EXP/src/user/UserBar.H</label>
        <link refid="_user_bar_8_h"/>
      </node>
      <node id="7">
        <label>/home/weinberg/Projects/EXP/src/user/UserDisk.H</label>
        <link refid="_user_disk_8_h"/>
      </node>
      <node id="8">
        <label>/home/weinberg/Projects/EXP/src/user/UserHalo.H</label>
        <link refid="_user_halo_8_h"/>
      </node>
      <node id="9">
        <label>/home/weinberg/Projects/EXP/src/user/UserLogPot.H</label>
        <link refid="_user_log_pot_8_h"/>
      </node>
      <node id="10">
        <label>/home/weinberg/Projects/EXP/src/user/UserMNdisk.H</label>
        <link refid="_user_m_ndisk_8_h"/>
      </node>
      <node id="11">
        <label>/home/weinberg/Projects/EXP/src/user/UserMW.H</label>
        <link refid="_user_m_w_8_h"/>
      </node>
      <node id="12">
        <label>/home/weinberg/Projects/EXP/src/user/UserTest.H</label>
        <link refid="_user_test_8_h"/>
      </node>
      <node id="24">
        <label>/home/weinberg/Projects/EXP/src/user/UserTestCuda.H</label>
        <link refid="_user_test_cuda_8_h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_cyclic_iterator" prot="public">CyclicIterator</innerclass>
    <innerclass refid="class_ring_iterator" prot="public">RingIterator</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_CIRCULAR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CIRCULAR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container<sp/>=<sp/>std::vector&lt;T&gt;,</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container::iterator&gt;</highlight></codeline>
<codeline lineno="8" refid="class_ring_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ring_iterator" kindref="compound">RingIterator</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10" refid="class_ring_iterator_1adf02a88bf9d690e0966556ebff6ea3eb" refkind="member"><highlight class="normal"><sp/><sp/>Container&amp;<sp/><ref refid="class_ring_iterator_1adf02a88bf9d690e0966556ebff6ea3eb" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12" refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref><sp/><sp/><sp/><ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref>;</highlight></codeline>
<codeline lineno="13" refid="class_ring_iterator_1a2f5b3b9ab9c063edf48854870358035e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref><sp/><sp/><sp/><ref refid="class_ring_iterator_1a2f5b3b9ab9c063edf48854870358035e" kindref="member">begin</ref>;</highlight></codeline>
<codeline lineno="14" refid="class_ring_iterator_1ae298e97dc73d45278bfdeceabf23c8db" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref><sp/><sp/><sp/><ref refid="class_ring_iterator_1ae298e97dc73d45278bfdeceabf23c8db" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_ring_iterator_1ac49a5e2521cbc023a3da64469b695381" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_ring_iterator_1ac49a5e2521cbc023a3da64469b695381" kindref="member">iterator_category</ref><sp/>=<sp/>std::bidirectional_iterator_tag;</highlight></codeline>
<codeline lineno="20" refid="class_ring_iterator_1a93c857cfb2880488146cd6cb9a500813" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_ring_iterator_1a93c857cfb2880488146cd6cb9a500813" kindref="member">value_type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="21" refid="class_ring_iterator_1aa56768696f64d6226c4c04c8631bca67" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_ring_iterator_1aa56768696f64d6226c4c04c8631bca67" kindref="member">difference_type</ref><sp/><sp/><sp/>=<sp/>std::ptrdiff_t;</highlight></codeline>
<codeline lineno="22" refid="class_ring_iterator_1ad378b21b5c3dcf41c9aaefd857d5327c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_ring_iterator_1ad378b21b5c3dcf41c9aaefd857d5327c" kindref="member">pointer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T*;</highlight></codeline>
<codeline lineno="23" refid="class_ring_iterator_1a4c8c168322f82bda3bef534515d2e15b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_ring_iterator_1a4c8c168322f82bda3bef534515d2e15b" kindref="member">reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T&amp;;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="29" refid="class_ring_iterator_1a8221f1f69f05955630d4168f0dae47fa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_ring_iterator_1a8221f1f69f05955630d4168f0dae47fa" kindref="member">RingIterator</ref><sp/>(Container&amp;<sp/>v)<sp/>:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ring_iterator_1adf02a88bf9d690e0966556ebff6ea3eb" kindref="member">data</ref>(v),<sp/><ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref>(v.<ref refid="class_ring_iterator_1a2f5b3b9ab9c063edf48854870358035e" kindref="member">begin</ref>()),<sp/><ref refid="class_ring_iterator_1a2f5b3b9ab9c063edf48854870358035e" kindref="member">begin</ref>(v.<ref refid="class_ring_iterator_1a2f5b3b9ab9c063edf48854870358035e" kindref="member">begin</ref>()),<sp/><ref refid="class_ring_iterator_1ae298e97dc73d45278bfdeceabf23c8db" kindref="member">end</ref>(v.<ref refid="class_ring_iterator_1ae298e97dc73d45278bfdeceabf23c8db" kindref="member">end</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="33" refid="class_ring_iterator_1acc7c90da362983763e792a910e6e45d5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_ring_iterator_1acc7c90da362983763e792a910e6e45d5" kindref="member">RingIterator</ref><sp/>(Container&amp;<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref>&amp;<sp/>i)<sp/>:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ring_iterator_1adf02a88bf9d690e0966556ebff6ea3eb" kindref="member">data</ref>(v),<sp/><ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref>(i),<sp/><ref refid="class_ring_iterator_1a2f5b3b9ab9c063edf48854870358035e" kindref="member">begin</ref>(v.<ref refid="class_ring_iterator_1a2f5b3b9ab9c063edf48854870358035e" kindref="member">begin</ref>()),<sp/><ref refid="class_ring_iterator_1ae298e97dc73d45278bfdeceabf23c8db" kindref="member">end</ref>(v.<ref refid="class_ring_iterator_1ae298e97dc73d45278bfdeceabf23c8db" kindref="member">end</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_ring_iterator_1a8712aceaf5984862579f0a23c7b253bc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_ring_iterator_1a8712aceaf5984862579f0a23c7b253bc" kindref="member">RingIterator</ref><sp/>(Container&amp;<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref>&amp;<sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref>&amp;<sp/>j)<sp/>:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ring_iterator_1adf02a88bf9d690e0966556ebff6ea3eb" kindref="member">data</ref>(v),<sp/><ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref>(i),<sp/><ref refid="class_ring_iterator_1a2f5b3b9ab9c063edf48854870358035e" kindref="member">begin</ref>(i),<sp/><ref refid="class_ring_iterator_1ae298e97dc73d45278bfdeceabf23c8db" kindref="member">end</ref>(j)<sp/>{}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_ring_iterator_1ad537892d5b5d58ba26e0aca4d7ceb608" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_ring_iterator_1ad537892d5b5d58ba26e0aca4d7ceb608" kindref="member">RingIterator</ref><sp/>(Container&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ring_iterator_1adf02a88bf9d690e0966556ebff6ea3eb" kindref="member">data</ref>(v),<sp/><ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref>(v.<ref refid="class_ring_iterator_1a2f5b3b9ab9c063edf48854870358035e" kindref="member">begin</ref>()<sp/>+<sp/>i<sp/>%<sp/>v.size()),<sp/><ref refid="class_ring_iterator_1a2f5b3b9ab9c063edf48854870358035e" kindref="member">begin</ref>(v.<ref refid="class_ring_iterator_1a2f5b3b9ab9c063edf48854870358035e" kindref="member">begin</ref>()),<sp/><ref refid="class_ring_iterator_1ae298e97dc73d45278bfdeceabf23c8db" kindref="member">end</ref>(v.<ref refid="class_ring_iterator_1ae298e97dc73d45278bfdeceabf23c8db" kindref="member">end</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_ring_iterator_1a0ac243d97d7568233aa27f1b065de960" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ring_iterator_1a0ac243d97d7568233aa27f1b065de960" kindref="member">operator == </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ring_iterator" kindref="compound">RingIterator</ref>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref><sp/>==<sp/>x.<ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref>;<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="51" refid="class_ring_iterator_1a27a92b4feb984bcf9cdc6ad170d99448" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ring_iterator_1a27a92b4feb984bcf9cdc6ad170d99448" kindref="member">operator != </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ring_iterator" kindref="compound">RingIterator</ref>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>x);<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="class_ring_iterator_1a1c0937fc0eba4a174a83f426d4d45339" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_ring_iterator_1a1c0937fc0eba4a174a83f426d4d45339" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref>;<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="class_ring_iterator_1a9452810131d236d9fd5be1aaa1542871" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref><sp/><ref refid="class_ring_iterator_1a9452810131d236d9fd5be1aaa1542871" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref>;<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="69" refid="class_ring_iterator_1a6f8f6f1863544e91fc6f9e99cbf0e5e1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_ring_iterator" kindref="compound">RingIterator</ref>&amp;<sp/><ref refid="class_ring_iterator_1a6f8f6f1863544e91fc6f9e99cbf0e5e1" kindref="member">operator++</ref>()<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref><sp/>==<sp/><ref refid="class_ring_iterator_1ae298e97dc73d45278bfdeceabf23c8db" kindref="member">end</ref>)<sp/><ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref><sp/>=<sp/><ref refid="class_ring_iterator_1a2f5b3b9ab9c063edf48854870358035e" kindref="member">begin</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="class_ring_iterator_1ae3deef3e4d5bdd5a69c70338f4084744" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_ring_iterator" kindref="compound">RingIterator</ref><sp/><ref refid="class_ring_iterator_1ae3deef3e4d5bdd5a69c70338f4084744" kindref="member">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ring_iterator" kindref="compound">RingIterator</ref><sp/>ring<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>++*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ring;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_ring_iterator_1ac42ba90c6e63d42524fd0486258ee68e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_ring_iterator" kindref="compound">RingIterator</ref>&amp;<sp/><ref refid="class_ring_iterator_1ac42ba90c6e63d42524fd0486258ee68e" kindref="member">operator--</ref>()<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref><sp/>==<sp/><ref refid="class_ring_iterator_1a2f5b3b9ab9c063edf48854870358035e" kindref="member">begin</ref>)<sp/><ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref><sp/>=<sp/><ref refid="class_ring_iterator_1ae298e97dc73d45278bfdeceabf23c8db" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>--<ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="class_ring_iterator_1a539146f25b901da7cd60879593a6e298" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_ring_iterator" kindref="compound">RingIterator</ref><sp/><ref refid="class_ring_iterator_1a539146f25b901da7cd60879593a6e298" kindref="member">operator--</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ring_iterator" kindref="compound">RingIterator</ref><sp/>ring<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>--*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ring;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_ring_iterator_1a8accd267e289db7968db2d050987df4b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_ring_iterator" kindref="compound">RingIterator</ref><sp/><ref refid="class_ring_iterator_1a8accd267e289db7968db2d050987df4b" kindref="member">insert</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>x)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ring_iterator" kindref="compound">RingIterator</ref><sp/>(<ref refid="class_ring_iterator_1adf02a88bf9d690e0966556ebff6ea3eb" kindref="member">data</ref>,<sp/><ref refid="class_ring_iterator_1adf02a88bf9d690e0966556ebff6ea3eb" kindref="member">data</ref>.insert<sp/>(<ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref>,<sp/>x));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="class_ring_iterator_1a86fb027f699663c7fc14759010fecfea" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_ring_iterator" kindref="compound">RingIterator</ref><sp/><ref refid="class_ring_iterator_1a86fb027f699663c7fc14759010fecfea" kindref="member">erase</ref>()<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ring_iterator" kindref="compound">RingIterator</ref><sp/>(<ref refid="class_ring_iterator_1adf02a88bf9d690e0966556ebff6ea3eb" kindref="member">data</ref>,<sp/><ref refid="class_ring_iterator_1adf02a88bf9d690e0966556ebff6ea3eb" kindref="member">data</ref>.erase<sp/>(<ref refid="class_ring_iterator_1a5540dbc176b644a8d2249a875e943f3d" kindref="member">cursor</ref>));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="114" refid="class_cyclic_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cyclic_iterator" kindref="compound">CyclicIterator</ref></highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116" refid="class_cyclic_iterator_1aca44ee8d0d1e00ffceca047b937fa96a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref><sp/><sp/><sp/><ref refid="class_cyclic_iterator_1aca44ee8d0d1e00ffceca047b937fa96a" kindref="member">cursor</ref>;</highlight></codeline>
<codeline lineno="117" refid="class_cyclic_iterator_1ae7c36f9132643194593496ec2e456465" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref><sp/><sp/><sp/><ref refid="class_cyclic_iterator_1ae7c36f9132643194593496ec2e456465" kindref="member">begin</ref>;</highlight></codeline>
<codeline lineno="118" refid="class_cyclic_iterator_1a4ca3488adf3ac149f356bcb8b8209602" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref><sp/><sp/><sp/><ref refid="class_cyclic_iterator_1a4ca3488adf3ac149f356bcb8b8209602" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_cyclic_iterator_1a915e4d17415d5729a42c8b33c2253920" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_cyclic_iterator_1a915e4d17415d5729a42c8b33c2253920" kindref="member">iterator_category</ref><sp/>=<sp/>std::bidirectional_iterator_tag;</highlight></codeline>
<codeline lineno="125" refid="class_cyclic_iterator_1ae369ce6761d18e2185a0afb442148064" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_cyclic_iterator_1ae369ce6761d18e2185a0afb442148064" kindref="member">value_type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="126" refid="class_cyclic_iterator_1a53dbb2393d4aa6a36a3c37be1abf0d72" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_cyclic_iterator_1a53dbb2393d4aa6a36a3c37be1abf0d72" kindref="member">difference_type</ref><sp/><sp/><sp/>=<sp/>std::ptrdiff_t;</highlight></codeline>
<codeline lineno="127" refid="class_cyclic_iterator_1a56c990ef53c0037188c0c63e621ce064" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_cyclic_iterator_1a56c990ef53c0037188c0c63e621ce064" kindref="member">pointer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T*;</highlight></codeline>
<codeline lineno="128" refid="class_cyclic_iterator_1abd9e0277d2c7649df2f85440d2621f14" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_cyclic_iterator_1abd9e0277d2c7649df2f85440d2621f14" kindref="member">reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T&amp;;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="class_cyclic_iterator_1ae5cab8fc82d7966529c5a89cec7d04da" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_cyclic_iterator_1ae5cab8fc82d7966529c5a89cec7d04da" kindref="member">CyclicIterator</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref>&amp;<sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref>&amp;<sp/>j)<sp/>:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cyclic_iterator_1aca44ee8d0d1e00ffceca047b937fa96a" kindref="member">cursor</ref>(i),<sp/><ref refid="class_cyclic_iterator_1ae7c36f9132643194593496ec2e456465" kindref="member">begin</ref>(i),<sp/><ref refid="class_cyclic_iterator_1a4ca3488adf3ac149f356bcb8b8209602" kindref="member">end</ref>(j)<sp/>{}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="138" refid="class_cyclic_iterator_1af2121d68a2bfb7fed15bc4ec0475e7d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_cyclic_iterator_1af2121d68a2bfb7fed15bc4ec0475e7d8" kindref="member">operator == </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_cyclic_iterator" kindref="compound">CyclicIterator</ref>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_cyclic_iterator_1aca44ee8d0d1e00ffceca047b937fa96a" kindref="member">cursor</ref><sp/>==<sp/>x.<ref refid="class_cyclic_iterator_1aca44ee8d0d1e00ffceca047b937fa96a" kindref="member">cursor</ref>;<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="class_cyclic_iterator_1aaf23b5edf31d9d04d31ad91f83bf6eef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_cyclic_iterator_1aaf23b5edf31d9d04d31ad91f83bf6eef" kindref="member">operator != </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_cyclic_iterator" kindref="compound">CyclicIterator</ref>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>x);<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="150" refid="class_cyclic_iterator_1ae6c344f50a1c32ac6369949a7b7331b7" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_cyclic_iterator_1ae6c344f50a1c32ac6369949a7b7331b7" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="class_cyclic_iterator_1aca44ee8d0d1e00ffceca047b937fa96a" kindref="member">cursor</ref>;<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="class_cyclic_iterator_1adfafc479107c21a4d1b3253d065407a4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref><sp/><ref refid="class_cyclic_iterator_1adfafc479107c21a4d1b3253d065407a4" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_cyclic_iterator_1aca44ee8d0d1e00ffceca047b937fa96a" kindref="member">cursor</ref>;<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="class_cyclic_iterator_1a3c33c1aa0c006c38c616b11e94b40db7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_cyclic_iterator" kindref="compound">CyclicIterator</ref>&amp;<sp/><ref refid="class_cyclic_iterator_1a3c33c1aa0c006c38c616b11e94b40db7" kindref="member">operator++</ref>()<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="class_cyclic_iterator_1aca44ee8d0d1e00ffceca047b937fa96a" kindref="member">cursor</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_cyclic_iterator_1aca44ee8d0d1e00ffceca047b937fa96a" kindref="member">cursor</ref><sp/>==<sp/><ref refid="class_cyclic_iterator_1a4ca3488adf3ac149f356bcb8b8209602" kindref="member">end</ref>)<sp/><ref refid="class_cyclic_iterator_1aca44ee8d0d1e00ffceca047b937fa96a" kindref="member">cursor</ref><sp/>=<sp/><ref refid="class_cyclic_iterator_1ae7c36f9132643194593496ec2e456465" kindref="member">begin</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="class_cyclic_iterator_1ab953a354bc675ca18e49f5b9bd95b599" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_cyclic_iterator" kindref="compound">CyclicIterator</ref><sp/><ref refid="class_cyclic_iterator_1ab953a354bc675ca18e49f5b9bd95b599" kindref="member">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cyclic_iterator" kindref="compound">CyclicIterator</ref><sp/>ring<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>++*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ring;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="178" refid="class_cyclic_iterator_1a980526229cd5f4299c62969cac3f54f0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_cyclic_iterator" kindref="compound">CyclicIterator</ref>&amp;<sp/><ref refid="class_cyclic_iterator_1a980526229cd5f4299c62969cac3f54f0" kindref="member">operator--</ref>()<sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_cyclic_iterator_1aca44ee8d0d1e00ffceca047b937fa96a" kindref="member">cursor</ref><sp/>==<sp/><ref refid="class_cyclic_iterator_1ae7c36f9132643194593496ec2e456465" kindref="member">begin</ref>)<sp/><ref refid="class_cyclic_iterator_1aca44ee8d0d1e00ffceca047b937fa96a" kindref="member">cursor</ref><sp/>=<sp/><ref refid="class_cyclic_iterator_1a4ca3488adf3ac149f356bcb8b8209602" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>--<ref refid="class_cyclic_iterator_1aca44ee8d0d1e00ffceca047b937fa96a" kindref="member">cursor</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="186" refid="class_cyclic_iterator_1af53d9b3a7ba0e191130bfffb8e484bbd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_cyclic_iterator" kindref="compound">CyclicIterator</ref><sp/><ref refid="class_cyclic_iterator_1af53d9b3a7ba0e191130bfffb8e484bbd" kindref="member">operator--</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cyclic_iterator" kindref="compound">CyclicIterator</ref><sp/>ring<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>--*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ring;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/weinberg/Projects/EXP/include/Circular.H"/>
  </compounddef>
</doxygen>
