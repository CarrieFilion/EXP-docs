<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_cube_8_h" kind="file" language="C++">
    <compoundname>Cube.H</compoundname>
    <includes local="no">complex</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">set</includes>
    <includes local="no">Eigen/Eigen</includes>
    <includes local="no">unsupported/Eigen/CXX11/Tensor</includes>
    <includes local="no">Coefficients.H</includes>
    <includes refid="_pot_accel_8_h" local="no">PotAccel.H</includes>
    <incdepgraph>
      <node id="17">
        <label>StringTok.H</label>
        <link refid="_string_tok_8_h"/>
      </node>
      <node id="18">
        <label>YamlCheck.H</label>
        <link refid="_yaml_check_8_h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/src/Cube.H</label>
        <link refid="_cube_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>PotAccel.H</label>
        <link refid="_pot_accel_8_h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Coefficients.H</label>
      </node>
      <node id="6">
        <label>Eigen/Eigen</label>
      </node>
      <node id="16">
        <label>Particle.H</label>
      </node>
      <node id="11">
        <label>chrono</label>
      </node>
      <node id="2">
        <label>complex</label>
      </node>
      <node id="19">
        <label>config_exp.h</label>
      </node>
      <node id="10">
        <label>cstdlib</label>
      </node>
      <node id="12">
        <label>list</label>
      </node>
      <node id="13">
        <label>map</label>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
      <node id="5">
        <label>set</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="7">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="15">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_cube" prot="public">Cube</innerclass>
    <innerclass refid="class_cube_1_1exe_timer" prot="private">Cube::exeTimer</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_Cube_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Cube_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;complex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Eigen&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unsupported/Eigen/CXX11/Tensor&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Coefficients.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_pot_accel_8_h" kindref="compound">PotAccel.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_LIBCUDA==1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrust/complex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cudaParticle.cuH&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cudaMappingConstants.cuH&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_cube" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cube" kindref="compound">Cube</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_pot_accel" kindref="compound">PotAccel</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_cube_1ad68c65cb1f4f5e3abcfa61e5b320ebae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_cube_1ad68c65cb1f4f5e3abcfa61e5b320ebae" kindref="member">coefType</ref><sp/>=<sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,<sp/>3&gt;;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_cube_1adb1e1b037b2b5209bfef71b5949aba98" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;coefType&gt;<sp/><ref refid="class_cube_1adb1e1b037b2b5209bfef71b5949aba98" kindref="member">expcoef</ref>,<sp/><ref refid="class_cube_1a170ce6cbd756a9102cb759cb50b30024" kindref="member">expcoefP</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_cube_1a2cd78e3d60cfc5cedd8586dacd8a1705" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cube_1a2cd78e3d60cfc5cedd8586dacd8a1705" kindref="member">imx</ref>,<sp/><ref refid="class_cube_1a436392598e00a0ebadfc47c7b5db0af2" kindref="member">imy</ref>,<sp/><ref refid="class_cube_1a3c009587307aec93ec80154f80c115db" kindref="member">imz</ref>,<sp/><ref refid="class_cube_1a068cd3dac6557341ed528b0c7420b314" kindref="member">osize</ref>;</highlight></codeline>
<codeline lineno="36" refid="class_cube_1a0fa11ac46e1eb6cdb946d26dd8617cca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cube_1a81c93879fae311863874fc1cb419d43f" kindref="member">use1</ref>,<sp/><ref refid="class_cube_1a0fa11ac46e1eb6cdb946d26dd8617cca" kindref="member">use0</ref>;</highlight></codeline>
<codeline lineno="37" refid="class_cube_1a1c8a7a7aeb99d41dc2e5142534ba5196" refkind="member"><highlight class="normal"><sp/><sp/>std::complex&lt;double&gt;<sp/><ref refid="class_cube_1a1c8a7a7aeb99d41dc2e5142534ba5196" kindref="member">kfac</ref>;</highlight></codeline>
<codeline lineno="38" refid="class_cube_1ac6bf2eb17382cbb151e7e4ffa7bcccd2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><ref refid="class_cube_1ac6bf2eb17382cbb151e7e4ffa7bcccd2" kindref="member">dfac</ref>;</highlight></codeline>
<codeline lineno="40"></codeline>
<codeline lineno="42" refid="class_cube_1ad8775386b95dbf5ea4cb6995d69df1aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;<sp/><ref refid="class_cube_1ad8775386b95dbf5ea4cb6995d69df1aa" kindref="member">valid_keys</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_LIBCUDA==1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>determine_coefficients_cuda();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>determine_acceleration_cuda();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multistep_update_cuda();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>thrust::host_vector&lt;thrust::complex&lt;cuFP_t&gt;&gt;<sp/>host_coefs;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>thrust::device_vector&lt;thrust::complex&lt;cuFP_t&gt;&gt;<sp/>dev_coefs;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HtoD_coefs();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DtoH_coefs(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialize_constants();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroy_cuda();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cudaStorage</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::device_vector&lt;thrust::complex&lt;cuFP_t&gt;&gt;<sp/>dN_coef;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::device_vector&lt;thrust::complex&lt;cuFP_t&gt;&gt;<sp/>dc_coef;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::device_vector&lt;thrust::complex&lt;cuFP_t&gt;&gt;<sp/>dw_coef;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::device_vector&lt;thrust::complex&lt;cuFP_t&gt;&gt;<sp/>df_coef;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize_coefs(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>osize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gridSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>cudaStorage<sp/>cuS;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialize_cuda_cube;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cuda_initialize();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cuda_zero_coefs();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="class_cube_1a4cecb0c2cf57731c90a85233bcc55501" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_cube_1a4cecb0c2cf57731c90a85233bcc55501" kindref="member">byPlanes</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_cube_1a1952c8a09a2ce4e3c0a576705e52330c" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_cube_1a1952c8a09a2ce4e3c0a576705e52330c" kindref="member">cuMethod</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_cube_1_1exe_timer" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cube_1_1exe_timer" kindref="compound">exeTimer</ref></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102" refid="class_cube_1_1exe_timer_1a8ee9c2b5b0033d0663b3a3358d142478" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cube" kindref="compound">Cube</ref><sp/>*<sp/><ref refid="class_cube_1_1exe_timer_1a8ee9c2b5b0033d0663b3a3358d142478" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="103" refid="class_cube_1_1exe_timer_1ae5447a56086a32e3f0c17443ad03ee62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_cube_1_1exe_timer_1ae5447a56086a32e3f0c17443ad03ee62" kindref="member">routine</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::high_resolution_clock::time_point</highlight></codeline>
<codeline lineno="105" refid="class_cube_1_1exe_timer_1ac54d024847fbbfad3cfc98b9b61d65f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cube_1_1exe_timer_1a65f0d33b3297fc7d72a2e7cd62d95329" kindref="member">start0</ref>,<sp/><ref refid="class_cube_1_1exe_timer_1a3db6c8cb1caefed4d49908b951d576e3" kindref="member">start1</ref>,<sp/><ref refid="class_cube_1_1exe_timer_1ac54d024847fbbfad3cfc98b9b61d65f8" kindref="member">finish0</ref>,<sp/><ref refid="class_cube_1_1exe_timer_1ac02cd3123cf78ad4d0d01dfa73999490" kindref="member">finish1</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="class_cube_1_1exe_timer_1a71bc0c181bc3ca2fc336af81e6cd7485" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cube_1_1exe_timer_1a71bc0c181bc3ca2fc336af81e6cd7485" kindref="member">exeTimer</ref>(<ref refid="class_cube" kindref="compound">Cube</ref>*<sp/><ref refid="class_cube_1_1exe_timer_1a8ee9c2b5b0033d0663b3a3358d142478" kindref="member">c</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>:<sp/><ref refid="class_cube_1_1exe_timer_1a8ee9c2b5b0033d0663b3a3358d142478" kindref="member">c</ref>(<ref refid="class_cube_1_1exe_timer_1a8ee9c2b5b0033d0663b3a3358d142478" kindref="member">c</ref>),<sp/><ref refid="class_cube_1_1exe_timer_1ae5447a56086a32e3f0c17443ad03ee62" kindref="member">routine</ref>(name)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cube_1_1exe_timer_1a65f0d33b3297fc7d72a2e7cd62d95329" kindref="member">start0</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class_cube_1_1exe_timer_1a8bed7415b7e9474ebc72e49959700b67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cube_1_1exe_timer_1a8bed7415b7e9474ebc72e49959700b67" kindref="member">Start1</ref>()</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cube_1_1exe_timer_1a3db6c8cb1caefed4d49908b951d576e3" kindref="member">start1</ref><sp/><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119" refid="class_cube_1_1exe_timer_1a298d580d7263eaf66d9b16715ee8da4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cube_1_1exe_timer_1a298d580d7263eaf66d9b16715ee8da4e" kindref="member">Stop1</ref>()</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cube_1_1exe_timer_1ac02cd3123cf78ad4d0d01dfa73999490" kindref="member">finish1</ref><sp/><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124" refid="class_cube_1_1exe_timer_1a6a72d798de758a187cdc1efe342cf444" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cube_1_1exe_timer_1a6a72d798de758a187cdc1efe342cf444" kindref="member">~exeTimer</ref>()</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_cube_1_1exe_timer_1a8ee9c2b5b0033d0663b3a3358d142478" kindref="member">c</ref>-&gt;<ref refid="class_pot_accel_1aa6d9bde455e08dc9fead4f152357cb15" kindref="member">component</ref>-&gt;<ref refid="class_component_1aa298ed953eaeb6430159adae676173f5" kindref="member">timers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cube_1_1exe_timer_1ac54d024847fbbfad3cfc98b9b61d65f8" kindref="member">finish0</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::duration&lt;double&gt;<sp/>duration0<sp/>=<sp/><ref refid="class_cube_1_1exe_timer_1ac54d024847fbbfad3cfc98b9b61d65f8" kindref="member">finish0</ref><sp/>-<sp/><ref refid="class_cube_1_1exe_timer_1a65f0d33b3297fc7d72a2e7cd62d95329" kindref="member">start0</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::duration&lt;double&gt;<sp/>duration1<sp/>=<sp/><ref refid="class_cube_1_1exe_timer_1ac02cd3123cf78ad4d0d01dfa73999490" kindref="member">finish1</ref><sp/>-<sp/><ref refid="class_cube_1_1exe_timer_1a3db6c8cb1caefed4d49908b951d576e3" kindref="member">start1</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::string(60,<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_cube_1_1exe_timer_1ae5447a56086a32e3f0c17443ad03ee62" kindref="member">routine</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>evaluation<sp/>[Cube::&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_cube_1_1exe_timer_1a8ee9c2b5b0033d0663b3a3358d142478" kindref="member">c</ref>-&gt;<ref refid="class_pot_accel_1afa2cd3b0bf51e23d8bfc54aac73ef010" kindref="member">cC</ref>-&gt;<ref refid="class_component_1a46343549452bda5ee9752f7a9bc15efb" kindref="member">name</ref></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>level=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_cube_1_1exe_timer_1a8ee9c2b5b0033d0663b3a3358d142478" kindref="member">c</ref>-&gt;<ref refid="class_pot_accel_1ad9ff6c9f431ad2f8ad2e5895c222ede8" kindref="member">mlevel</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::string(60,<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Time<sp/>in<sp/>CPU:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>duration0.count()-duration1.count()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_LIBCUDA==1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_cube_1_1exe_timer_1a8ee9c2b5b0033d0663b3a3358d142478" kindref="member">c</ref>-&gt;<ref refid="class_pot_accel_1afa2cd3b0bf51e23d8bfc54aac73ef010" kindref="member">cC</ref>-&gt;cudaDevice&gt;=0)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Time<sp/>in<sp/>GPU:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>duration1.count()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::string(60,<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="class_cube_1a0a8bd4c474818c42bb797035d86ac553" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cube_1a0a8bd4c474818c42bb797035d86ac553" kindref="member">compute_multistep_coefficients</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"></codeline>
<codeline lineno="156" refid="class_cube_1aa78d482c8b6a1fe126851f734541d977" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;coefType&gt;<sp/>&gt;<sp/><ref refid="class_cube_1aa78d482c8b6a1fe126851f734541d977" kindref="member">differ1</ref>;</highlight></codeline>
<codeline lineno="157" refid="class_cube_1a18041085eb33036c41e1fe0e11bd940a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::complex&lt;double&gt;<sp/>&gt;<sp/><ref refid="class_cube_1a18041085eb33036c41e1fe0e11bd940a" kindref="member">pack</ref>,<sp/><ref refid="class_cube_1a26c844f3663104af25a4489fc85da63d" kindref="member">unpack</ref>;</highlight></codeline>
<codeline lineno="159"></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="class_cube_1ab742d871c9099dec61532a45fca95c76" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_cube_1ab742d871c9099dec61532a45fca95c76" kindref="member">coefTypePtr</ref><sp/>=<sp/>std::shared_ptr&lt;coefType&gt;;</highlight></codeline>
<codeline lineno="163" refid="class_cube_1a400e9540de9a77489f86adf61089a726" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;coefTypePtr&gt;<sp/><ref refid="class_cube_1a400e9540de9a77489f86adf61089a726" kindref="member">expcoefN</ref>;</highlight></codeline>
<codeline lineno="164" refid="class_cube_1a998df89b8e78ad060a8d8db6ca14436a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;coefTypePtr&gt;<sp/><ref refid="class_cube_1a998df89b8e78ad060a8d8db6ca14436a" kindref="member">expcoefL</ref>;</highlight></codeline>
<codeline lineno="166"></codeline>
<codeline lineno="172" refid="class_cube_1a53955c4fa1ad731cc63b614db11b51ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cube_1a53955c4fa1ad731cc63b614db11b51ec" kindref="member">multistep_update_begin</ref>();</highlight></codeline>
<codeline lineno="173" refid="class_cube_1a03b09ee07d08268915b8b451b92da758" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cube_1a03b09ee07d08268915b8b451b92da758" kindref="member">multistep_update</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cur,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next,<sp/><ref refid="class_component" kindref="compound">Component</ref>*<sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174" refid="class_cube_1ae914dcb2011835bb35b556b614c1aa8c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cube_1ae914dcb2011835bb35b556b614c1aa8c" kindref="member">multistep_update_finish</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="class_cube_1a4889dfcc0b07a325577d3a632ab167d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cube_1a4889dfcc0b07a325577d3a632ab167d3" kindref="member">initialize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"></codeline>
<codeline lineno="184" refid="class_cube_1a8bb5e673c54cdd4e06f03e5ade58834b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cube_1a8bb5e673c54cdd4e06f03e5ade58834b" kindref="member">nmaxx</ref>,<sp/><ref refid="class_cube_1aa0e2b466612e4eb7cc4ee1d7d13f03cf" kindref="member">nmaxy</ref>,<sp/><ref refid="class_cube_1a093c4f102752c66a4d6324e7174ddfa7" kindref="member">nmaxz</ref>;</highlight></codeline>
<codeline lineno="186"></codeline>
<codeline lineno="188"></codeline>
<codeline lineno="189" refid="class_cube_1aba2bbc797f9ff22d84b717020d2d453e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cube_1aba2bbc797f9ff22d84b717020d2d453e" kindref="member">nminx</ref>,<sp/><ref refid="class_cube_1ae65b9fa67c184819f59b2cbfd573d6da" kindref="member">nminy</ref>,<sp/><ref refid="class_cube_1afaac06a8562dc7ebca3cf369ec78aa29" kindref="member">nminz</ref>;</highlight></codeline>
<codeline lineno="191"></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="class_cube_1a3defa1a8f6b8fe67fa353632c0c9635a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_cube_1a3defa1a8f6b8fe67fa353632c0c9635a" kindref="member">determine_coefficients_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg);</highlight></codeline>
<codeline lineno="195" refid="class_cube_1aa2a95971c28f6143b7521bd0d2087662" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_cube_1aa2a95971c28f6143b7521bd0d2087662" kindref="member">determine_acceleration_and_potential_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg);</highlight></codeline>
<codeline lineno="197"></codeline>
<codeline lineno="199" refid="class_cube_1ae2f7fd3450813c7533430a43a016cdf5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cube_1ae2f7fd3450813c7533430a43a016cdf5" kindref="member">determine_acceleration_and_potential</ref>();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="class_cube_1aa8c977869ddc1963a8256a08e7969541" refkind="member"><highlight class="normal"><sp/><sp/>CoefClasses::CubeCoefs<sp/><ref refid="class_cube_1aa8c977869ddc1963a8256a08e7969541" kindref="member">cubeCoefs</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="class_cube_1a0006a93a3ebb09ca12697b2ad22342df" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cube_1a0006a93a3ebb09ca12697b2ad22342df" kindref="member">swap_coefs</ref>(std::vector&lt;coefType&gt;&amp;<sp/>from,<sp/>std::vector&lt;coefType&gt;&amp;<sp/>to)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from.size()<sp/>!=<sp/>to.size())<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>sout;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;swap_coefs:<sp/>size(from)=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>from.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>!=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;size(to)=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>to.size();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(sout.str());</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;coefType&gt;<sp/>tmp(from);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>from<sp/>=<sp/>to;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>to<sp/><sp/><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="class_cube_1a2b54b44a2c8891108ccaf1cf456e1a1f" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_cube_1a2b54b44a2c8891108ccaf1cf456e1a1f" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="class_cube_1aaa5cf11dc360df81d3ee631168853ade" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_cube_1aaa5cf11dc360df81d3ee631168853ade" kindref="member">Cube</ref>(<ref refid="class_component" kindref="compound">Component</ref>*<sp/>c0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YAML::Node&amp;<sp/><ref refid="class_pot_accel_1ab682d4480d7d2946a7bef7f93ac0c6a0" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="class_cube_1a600d629a60344171d18ae77b3fb43912" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_cube_1a600d629a60344171d18ae77b3fb43912" kindref="member">~Cube</ref>();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="class_cube_1a6da6df3f255795b3e3765bc72af8ea76" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cube_1a6da6df3f255795b3e3765bc72af8ea76" kindref="member">determine_coefficients</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="class_cube_1a8477225cbb41bff514d27192542d7155" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cube_1a8477225cbb41bff514d27192542d7155" kindref="member">get_acceleration_and_potential</ref>(<ref refid="class_component" kindref="compound">Component</ref>*);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="class_cube_1ad41166930efa0c9005e1190ea95c98e0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cube_1ad41166930efa0c9005e1190ea95c98e0" kindref="member">dump_coefs_h5</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="model3d_8_h_1ab6fca3418c4b6179d83a8991a8b2f63cab4e367fba14b5eae38519a2823aca793" kindref="member">file</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">};</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/weinberg/Projects/EXP/src/Cube.H"/>
  </compounddef>
</doxygen>
