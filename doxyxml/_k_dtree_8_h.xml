<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_k_dtree_8_h" kind="file" language="C++">
    <compoundname>KDtree.H</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">random</includes>
    <includes local="no">vector</includes>
    <includes local="no">array</includes>
    <includes local="no">cmath</includes>
    <includes local="no">tuple</includes>
    <includes local="no">map</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/include/KDtree.H</label>
        <link refid="_k_dtree_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="5">
        <label>array</label>
      </node>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="3">
        <label>random</label>
      </node>
      <node id="7">
        <label>tuple</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_cache" prot="public">Cache</innerclass>
    <innerclass refid="classkdtree" prot="public">kdtree</innerclass>
    <innerclass refid="structkdtree_1_1node" prot="private">kdtree::node</innerclass>
    <innerclass refid="structkdtree_1_1node__cmp" prot="private">kdtree::node_cmp</innerclass>
    <innerclass refid="classpoint" prot="public">point</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="_k_dtree_8_h_1a1e7c97ef3018c057fadf0a340f1a9926" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename coordinate_type</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>dimensions</declname>
            <defname>dimensions</defname>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const point&lt; coordinate_type, dimensions &gt; &amp;pt)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classpoint" kindref="compound">point</ref>&lt; coordinate_type, dimensions &gt; &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>For iostream printing of points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="149" column="1" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="149" bodyend="159"/>
        <references refid="classpoint_1ad627b50ee8e9fcfc20f24323aa4ab88d" compoundref="_k_dtree_8_h" startline="84" endline="87">point&lt; coordinate_type, dimensions &gt;::get</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>key_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_t&gt;</highlight></codeline>
<codeline lineno="11" refid="class_cache" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cache" kindref="compound">Cache</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::map&lt;key_t,<sp/>value_t&gt;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14" refid="class_cache_1aa2648acc78a8a801a945573179cb790d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_cache_1aa2648acc78a8a801a945573179cb790d" kindref="member">Cache</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N=1)<sp/>:<sp/><ref refid="class_cache_1a7e97d69dea026c1fe39e03289cdfa13f" kindref="member">max_size</ref>(N)<sp/>{}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_cache_1a84441f6bf856724536f4ac9d761b7b0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cache_1a84441f6bf856724536f4ac9d761b7b0c" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N)<sp/>{<sp/><ref refid="class_cache_1a7e97d69dea026c1fe39e03289cdfa13f" kindref="member">max_size</ref><sp/>=<sp/>N;<sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_cache_1acd8416dbfe32aae19cf49f4c6319e017" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cache_1acd8416dbfe32aae19cf49f4c6319e017" kindref="member">add</ref>(<sp/>key_t<sp/>key,<sp/>value_t<sp/>value<sp/>)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this)[key]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;size()<sp/>&gt;<sp/><ref refid="class_cache_1a7e97d69dea026c1fe39e03289cdfa13f" kindref="member">max_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;erase(--(*this).end());</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27" refid="class_cache_1a7e97d69dea026c1fe39e03289cdfa13f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cache_1a7e97d69dea026c1fe39e03289cdfa13f" kindref="member">max_size</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>coordinate_type,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimensions&gt;</highlight></codeline>
<codeline lineno="36" refid="classpoint" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpoint" kindref="compound">point</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40" refid="classpoint_1ad3b5efcf98938ef924c4327d326cfcea" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classpoint_1ad3b5efcf98938ef924c4327d326cfcea" kindref="member">point</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="classpoint_1aff297261244c3e43350540d6ad85bad6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classpoint_1aff297261244c3e43350540d6ad85bad6" kindref="member">point</ref>(std::array&lt;coordinate_type,<sp/>dimensions&gt;<sp/>c,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m=1,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classpoint_1a86195891679194ca05b34f6faac13565" kindref="member">indx</ref>=0)<sp/>:<sp/><ref refid="classpoint_1a967abf581716d86a2735631f2118e862" kindref="member">coords_</ref>(c),<sp/><ref refid="classpoint_1ae1068b5e7923dc70aaed56ad1d6367d5" kindref="member">mass_</ref>(m),<sp/><ref refid="classpoint_1ae824cc54b89e72f66da9ea8f511ccf9e" kindref="member">indx_</ref>(<ref refid="classpoint_1a86195891679194ca05b34f6faac13565" kindref="member">indx</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="classpoint_1a550f6c3e161e9e306ed7aa0e9af6e9d8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classpoint_1a550f6c3e161e9e306ed7aa0e9af6e9d8" kindref="member">point</ref>(std::array&lt;coordinate_type,<sp/>dimensions&gt;<sp/>c,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;coordinate_type,<sp/>dimensions&gt;<sp/>v,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m=1,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classpoint_1a86195891679194ca05b34f6faac13565" kindref="member">indx</ref>=0)<sp/>:<sp/><ref refid="classpoint_1a967abf581716d86a2735631f2118e862" kindref="member">coords_</ref>(c),<sp/><ref refid="classpoint_1a0625f733ec0a1009327ab24908275288" kindref="member">vels_</ref>(v),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpoint_1ae1068b5e7923dc70aaed56ad1d6367d5" kindref="member">mass_</ref>(m),<sp/><ref refid="classpoint_1ae824cc54b89e72f66da9ea8f511ccf9e" kindref="member">indx_</ref>(<ref refid="classpoint_1a86195891679194ca05b34f6faac13565" kindref="member">indx</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="classpoint_1a005057666b39892bc6392b844c052759" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classpoint_1a005057666b39892bc6392b844c052759" kindref="member">point</ref>(std::initializer_list&lt;coordinate_type&gt;<sp/>list,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m=1,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classpoint_1a86195891679194ca05b34f6faac13565" kindref="member">indx</ref>=0)<sp/>:<sp/><ref refid="classpoint_1ae1068b5e7923dc70aaed56ad1d6367d5" kindref="member">mass_</ref>(m),<sp/><ref refid="classpoint_1ae824cc54b89e72f66da9ea8f511ccf9e" kindref="member">indx_</ref>(<ref refid="classpoint_1a86195891679194ca05b34f6faac13565" kindref="member">indx</ref>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>std::min(dimensions,<sp/>list.size());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy_n(list.begin(),<sp/>n,<sp/><ref refid="classpoint_1a967abf581716d86a2735631f2118e862" kindref="member">coords_</ref>.begin());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classpoint_1a6b813bbe705ed9998a921ad93ad984b9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classpoint_1a6b813bbe705ed9998a921ad93ad984b9" kindref="member">point</ref>(std::initializer_list&lt;coordinate_type&gt;<sp/>list,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::initializer_list&lt;coordinate_type&gt;<sp/>vlst,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m=1,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classpoint_1a86195891679194ca05b34f6faac13565" kindref="member">indx</ref>=0)<sp/>:<sp/><ref refid="classpoint_1ae1068b5e7923dc70aaed56ad1d6367d5" kindref="member">mass_</ref>(m),<sp/><ref refid="classpoint_1ae824cc54b89e72f66da9ea8f511ccf9e" kindref="member">indx_</ref>(<ref refid="classpoint_1a86195891679194ca05b34f6faac13565" kindref="member">indx</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>std::min(dimensions,<sp/>list.size());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy_n(list.begin(),<sp/>n,<sp/><ref refid="classpoint_1a967abf581716d86a2735631f2118e862" kindref="member">coords_</ref>.begin());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy_n(vlst.begin(),<sp/>n,<sp/><ref refid="classpoint_1a0625f733ec0a1009327ab24908275288" kindref="member">vels_</ref>.begin());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classpoint_1ab4833f4b76ea7e3c3d9d12e3b041f083" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classpoint_1ab4833f4b76ea7e3c3d9d12e3b041f083" kindref="member">point</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpoint" kindref="compound">point</ref>&amp;<sp/>p)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n=0;<sp/>n&lt;dimensions;<sp/>n++)<sp/><ref refid="classpoint_1a967abf581716d86a2735631f2118e862" kindref="member">coords_</ref>[n]<sp/>=<sp/>p.<ref refid="classpoint_1a967abf581716d86a2735631f2118e862" kindref="member">coords_</ref>[n];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n=0;<sp/>n&lt;dimensions;<sp/>n++)<sp/><ref refid="classpoint_1a0625f733ec0a1009327ab24908275288" kindref="member">vels_</ref><sp/><sp/>[n]<sp/>=<sp/>p.<ref refid="classpoint_1a0625f733ec0a1009327ab24908275288" kindref="member">vels_</ref><sp/><sp/>[n];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpoint_1ae1068b5e7923dc70aaed56ad1d6367d5" kindref="member">mass_</ref><sp/>=<sp/>p.<ref refid="classpoint_1ae1068b5e7923dc70aaed56ad1d6367d5" kindref="member">mass_</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpoint_1ae824cc54b89e72f66da9ea8f511ccf9e" kindref="member">indx_</ref><sp/>=<sp/>p.<ref refid="classpoint_1ae824cc54b89e72f66da9ea8f511ccf9e" kindref="member">indx_</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classpoint_1ad627b50ee8e9fcfc20f24323aa4ab88d" refkind="member"><highlight class="normal"><sp/><sp/>coordinate_type<sp/><ref refid="classpoint_1ad627b50ee8e9fcfc20f24323aa4ab88d" kindref="member">get</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="85"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpoint_1a967abf581716d86a2735631f2118e862" kindref="member">coords_</ref>[index];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="89" refid="classpoint_1a19abd532544ccb2dd71217003eb8e199" refkind="member"><highlight class="normal"><sp/><sp/>coordinate_type<sp/><ref refid="classpoint_1a19abd532544ccb2dd71217003eb8e199" kindref="member">vel</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="90"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpoint_1a0625f733ec0a1009327ab24908275288" kindref="member">vels_</ref>[index];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="101" refid="classpoint_1a42a090ade88ea5811f0f5a5b9071affb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpoint_1a42a090ade88ea5811f0f5a5b9071affb" kindref="member">distance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpoint" kindref="compound">point</ref>&amp;<sp/>pt)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="102"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dimensions;<sp/>++i)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="classpoint_1ad627b50ee8e9fcfc20f24323aa4ab88d" kindref="member">get</ref>(i)<sp/>-<sp/>pt.<ref refid="classpoint_1ad627b50ee8e9fcfc20f24323aa4ab88d" kindref="member">get</ref>(i);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>+=<sp/>d<sp/>*<sp/>d;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dist;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classpoint_1a10d144f75d6de522d18a100d6b5ce8ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpoint_1a10d144f75d6de522d18a100d6b5ce8ef" kindref="member">speed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpoint" kindref="compound">point</ref>&amp;<sp/>pt)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="120"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rvel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dimensions;<sp/>++i)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="classpoint_1a19abd532544ccb2dd71217003eb8e199" kindref="member">vel</ref>(i)<sp/>-<sp/>pt.<ref refid="classpoint_1a19abd532544ccb2dd71217003eb8e199" kindref="member">vel</ref>(i);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rvel<sp/>+=<sp/>d<sp/>*<sp/>d;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rvel;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classpoint_1adc4a3633a65cbbbbae136c2f2e5b1323" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpoint_1adc4a3633a65cbbbbae136c2f2e5b1323" kindref="member">mass</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="131"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpoint_1ae1068b5e7923dc70aaed56ad1d6367d5" kindref="member">mass_</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classpoint_1a86195891679194ca05b34f6faac13565" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classpoint_1a86195891679194ca05b34f6faac13565" kindref="member">indx</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="136"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpoint_1ae824cc54b89e72f66da9ea8f511ccf9e" kindref="member">indx_</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141" refid="classpoint_1a967abf581716d86a2735631f2118e862" refkind="member"><highlight class="normal"><sp/><sp/>std::array&lt;coordinate_type,<sp/>dimensions&gt;<sp/><ref refid="classpoint_1a967abf581716d86a2735631f2118e862" kindref="member">coords_</ref>;</highlight></codeline>
<codeline lineno="142" refid="classpoint_1a0625f733ec0a1009327ab24908275288" refkind="member"><highlight class="normal"><sp/><sp/>std::array&lt;coordinate_type,<sp/>dimensions&gt;<sp/><ref refid="classpoint_1a0625f733ec0a1009327ab24908275288" kindref="member">vels_</ref>;</highlight></codeline>
<codeline lineno="143" refid="classpoint_1ae1068b5e7923dc70aaed56ad1d6367d5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpoint_1ae1068b5e7923dc70aaed56ad1d6367d5" kindref="member">mass_</ref>;</highlight></codeline>
<codeline lineno="144" refid="classpoint_1ae824cc54b89e72f66da9ea8f511ccf9e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classpoint_1ae824cc54b89e72f66da9ea8f511ccf9e" kindref="member">indx_</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>coordinate_type,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimensions&gt;</highlight></codeline>
<codeline lineno="149" refid="_k_dtree_8_h_1a1e7c97ef3018c057fadf0a340f1a9926" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="_k_dtree_8_h_1a1e7c97ef3018c057fadf0a340f1a9926" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpoint" kindref="compound">point&lt;coordinate_type, dimensions&gt;</ref>&amp;<sp/>pt)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dimensions;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)<sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>pt.<ref refid="classpoint_1ad627b50ee8e9fcfc20f24323aa4ab88d" kindref="member">get</ref>(i);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>coordinate_type,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimensions&gt;</highlight></codeline>
<codeline lineno="163" refid="classkdtree" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classkdtree" kindref="compound">kdtree</ref></highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="166" refid="classkdtree_1a65952573e13fbddf5da4dd6468cf0d56" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classpoint" kindref="compound">point&lt;coordinate_type, dimensions&gt;</ref><sp/><ref refid="classkdtree_1a65952573e13fbddf5da4dd6468cf0d56" kindref="member">point_type</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="169" refid="structkdtree_1_1node" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structkdtree_1_1node" kindref="compound">node</ref></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="171" refid="structkdtree_1_1node_1a01fb03948f51fe16c8dc80b47dac2c2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkdtree_1_1node_1a01fb03948f51fe16c8dc80b47dac2c2e" kindref="member">node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpoint" kindref="compound">point_type</ref>&amp;<sp/>pt)<sp/>:<sp/><ref refid="structkdtree_1_1node_1af92e2b3cebf01d832da26e995d3be7c9" kindref="member">point_</ref>(pt),<sp/><ref refid="structkdtree_1_1node_1a7568fecffbfa6341bc93910fe5f47d71" kindref="member">left_</ref>(nullptr),<sp/><ref refid="structkdtree_1_1node_1a3194e5a72c284c67f2dc66b323f13bf4" kindref="member">right_</ref>(nullptr)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175" refid="structkdtree_1_1node_1a7b27330dc074cbdba7811f7c01e59f55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>coordinate_type<sp/><ref refid="structkdtree_1_1node_1a7b27330dc074cbdba7811f7c01e59f55" kindref="member">get</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="176"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structkdtree_1_1node_1af92e2b3cebf01d832da26e995d3be7c9" kindref="member">point_</ref>.<ref refid="classpoint_1ad627b50ee8e9fcfc20f24323aa4ab88d" kindref="member">get</ref>(index);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180" refid="structkdtree_1_1node_1ace33495c2e0c094b3335b84c929d0af9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structkdtree_1_1node_1ace33495c2e0c094b3335b84c929d0af9" kindref="member">distance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpoint" kindref="compound">point_type</ref>&amp;<sp/>pt)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="181"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structkdtree_1_1node_1af92e2b3cebf01d832da26e995d3be7c9" kindref="member">point_</ref>.<ref refid="classpoint_1a42a090ade88ea5811f0f5a5b9071affb" kindref="member">distance</ref>(pt);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184" refid="structkdtree_1_1node_1af92e2b3cebf01d832da26e995d3be7c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpoint" kindref="compound">point_type</ref><sp/><ref refid="structkdtree_1_1node_1af92e2b3cebf01d832da26e995d3be7c9" kindref="member">point_</ref>;</highlight></codeline>
<codeline lineno="185" refid="structkdtree_1_1node_1a7568fecffbfa6341bc93910fe5f47d71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkdtree_1_1node" kindref="compound">node</ref>*<sp/><ref refid="structkdtree_1_1node_1a7568fecffbfa6341bc93910fe5f47d71" kindref="member">left_</ref>;</highlight></codeline>
<codeline lineno="186" refid="structkdtree_1_1node_1a3194e5a72c284c67f2dc66b323f13bf4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkdtree_1_1node" kindref="compound">node</ref>*<sp/><ref refid="structkdtree_1_1node_1a3194e5a72c284c67f2dc66b323f13bf4" kindref="member">right_</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classkdtree_1a014a9c4289f5d991781376974c540351" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structkdtree_1_1node" kindref="compound">node</ref>*<sp/><ref refid="classkdtree_1a014a9c4289f5d991781376974c540351" kindref="member">root_</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classkdtree_1a40498943803799971278a34d7c12e262" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_cache" kindref="compound">Cache&lt;double, node*&gt;</ref><sp/><ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classkdtree_1a0a89c07e4ad621a76bcf5a3222f8a09c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classkdtree_1a0a89c07e4ad621a76bcf5a3222f8a09c" kindref="member">visited_</ref>;</highlight></codeline>
<codeline lineno="194" refid="classkdtree_1a926ea253eccd6721ea00c76f6ea360f0" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;node&gt;<sp/><ref refid="classkdtree_1a926ea253eccd6721ea00c76f6ea360f0" kindref="member">nodes_</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="196" refid="structkdtree_1_1node__cmp" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structkdtree_1_1node__cmp" kindref="compound">node_cmp</ref></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="198" refid="structkdtree_1_1node__cmp_1ae996c25376282fa4463c2421b61c4494" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkdtree_1_1node__cmp_1ae996c25376282fa4463c2421b61c4494" kindref="member">node_cmp</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)<sp/>:<sp/><ref refid="structkdtree_1_1node__cmp_1a1185b87729d504fb512d10aca62e30a4" kindref="member">index_</ref>(index)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="structkdtree_1_1node__cmp_1abd166d70d778298c793fa1af33cef2be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structkdtree_1_1node__cmp_1abd166d70d778298c793fa1af33cef2be" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structkdtree_1_1node" kindref="compound">node</ref>&amp;<sp/>n1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structkdtree_1_1node" kindref="compound">node</ref>&amp;<sp/>n2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="203"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n1.<ref refid="structkdtree_1_1node_1af92e2b3cebf01d832da26e995d3be7c9" kindref="member">point_</ref>.<ref refid="classpoint_1ad627b50ee8e9fcfc20f24323aa4ab88d" kindref="member">get</ref>(<ref refid="structkdtree_1_1node__cmp_1a1185b87729d504fb512d10aca62e30a4" kindref="member">index_</ref>)<sp/>&lt;<sp/>n2.<ref refid="structkdtree_1_1node_1af92e2b3cebf01d832da26e995d3be7c9" kindref="member">point_</ref>.<ref refid="classpoint_1ad627b50ee8e9fcfc20f24323aa4ab88d" kindref="member">get</ref>(<ref refid="structkdtree_1_1node__cmp_1a1185b87729d504fb512d10aca62e30a4" kindref="member">index_</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206" refid="structkdtree_1_1node__cmp_1a1185b87729d504fb512d10aca62e30a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structkdtree_1_1node__cmp_1a1185b87729d504fb512d10aca62e30a4" kindref="member">index_</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="209" refid="classkdtree_1a0025ccd7ffb2b1e6a4f6b8a3c652a0bf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structkdtree_1_1node" kindref="compound">node</ref>*<sp/><ref refid="classkdtree_1a0025ccd7ffb2b1e6a4f6b8a3c652a0bf" kindref="member">make_tree</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>end,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>&lt;=<sp/>begin)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>begin<sp/>+<sp/>(end<sp/>-<sp/>begin)/2;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>std::nth_element(&amp;<ref refid="classkdtree_1a926ea253eccd6721ea00c76f6ea360f0" kindref="member">nodes_</ref>[begin],<sp/>&amp;<ref refid="classkdtree_1a926ea253eccd6721ea00c76f6ea360f0" kindref="member">nodes_</ref>[n],<sp/>&amp;<ref refid="classkdtree_1a926ea253eccd6721ea00c76f6ea360f0" kindref="member">nodes_</ref>[end],<sp/><ref refid="structkdtree_1_1node__cmp" kindref="compound">node_cmp</ref>(index));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(index<sp/>+<sp/>1)<sp/>%<sp/>dimensions;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a926ea253eccd6721ea00c76f6ea360f0" kindref="member">nodes_</ref>[n].left_<sp/><sp/>=<sp/><ref refid="classkdtree_1a0025ccd7ffb2b1e6a4f6b8a3c652a0bf" kindref="member">make_tree</ref>(begin,<sp/>n,<sp/>index);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a926ea253eccd6721ea00c76f6ea360f0" kindref="member">nodes_</ref>[n].right_<sp/>=<sp/><ref refid="classkdtree_1a0025ccd7ffb2b1e6a4f6b8a3c652a0bf" kindref="member">make_tree</ref>(n<sp/>+<sp/>1,<sp/>end,<sp/>index);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="classkdtree_1a926ea253eccd6721ea00c76f6ea360f0" kindref="member">nodes_</ref>[n];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="220" refid="classkdtree_1abc92f4a3965e484862bc5b8c2e96e3a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classkdtree_1abc92f4a3965e484862bc5b8c2e96e3a6" kindref="member">nearestN</ref>(<ref refid="structkdtree_1_1node" kindref="compound">node</ref>*<sp/>root,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpoint" kindref="compound">point_type</ref>&amp;<sp/><ref refid="classpoint" kindref="compound">point</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="classkdtree_1a0a89c07e4ad621a76bcf5a3222f8a09c" kindref="member">visited_</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>root-&gt;<ref refid="structkdtree_1_1node_1ace33495c2e0c094b3335b84c929d0af9" kindref="member">distance</ref>(<ref refid="classpoint" kindref="compound">point</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.size()&lt;N<sp/>||<sp/>d<sp/>&lt;<sp/><ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.rbegin()-&gt;first)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.add(d,<sp/>root);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>only<sp/>correct<sp/>if<sp/>the<sp/>test<sp/>point<sp/>is<sp/>never<sp/>in<sp/>the<sp/>data<sp/>set<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(best_.begin()-&gt;first<sp/>==<sp/>0)<sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>root-&gt;<ref refid="structkdtree_1_1node_1a7b27330dc074cbdba7811f7c01e59f55" kindref="member">get</ref>(index)<sp/>-<sp/><ref refid="classpoint" kindref="compound">point</ref>.<ref refid="classpoint_1ad627b50ee8e9fcfc20f24323aa4ab88d" kindref="member">get</ref>(index);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(index<sp/>+<sp/>1)<sp/>%<sp/>dimensions;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1abc92f4a3965e484862bc5b8c2e96e3a6" kindref="member">nearestN</ref>(dx<sp/>&gt;<sp/>0<sp/>?<sp/>root-&gt;<ref refid="structkdtree_1_1node_1a7568fecffbfa6341bc93910fe5f47d71" kindref="member">left_</ref><sp/><sp/>:<sp/>root-&gt;<ref refid="structkdtree_1_1node_1a3194e5a72c284c67f2dc66b323f13bf4" kindref="member">right_</ref>,<sp/><ref refid="classpoint" kindref="compound">point</ref>,<sp/>index,<sp/>N);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.size()&gt;=N<sp/>and<sp/>dx<sp/>*<sp/>dx<sp/>&gt;=<sp/><ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.rbegin()-&gt;first)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1abc92f4a3965e484862bc5b8c2e96e3a6" kindref="member">nearestN</ref>(dx<sp/>&gt;<sp/>0<sp/>?<sp/>root-&gt;<ref refid="structkdtree_1_1node_1a3194e5a72c284c67f2dc66b323f13bf4" kindref="member">right_</ref><sp/>:<sp/>root-&gt;<ref refid="structkdtree_1_1node_1a7568fecffbfa6341bc93910fe5f47d71" kindref="member">left_</ref>,<sp/><sp/><ref refid="classpoint" kindref="compound">point</ref>,<sp/>index,<sp/>N);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classkdtree_1a239be0ab1dc217108956f8657003a3f3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classkdtree_1a239be0ab1dc217108956f8657003a3f3" kindref="member">kdtree</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classkdtree" kindref="compound">kdtree</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247" refid="classkdtree_1aca7199af6149fdb94fa8cdc5024d345b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classkdtree" kindref="compound">kdtree</ref>&amp;<sp/><ref refid="classkdtree_1aca7199af6149fdb94fa8cdc5024d345b" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classkdtree" kindref="compound">kdtree</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iterator&gt;</highlight></codeline>
<codeline lineno="258" refid="classkdtree_1af81d819fc31a308bbfa24797da951f42" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classkdtree_1af81d819fc31a308bbfa24797da951f42" kindref="member">kdtree</ref>(iterator<sp/>begin,<sp/>iterator<sp/>end)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.resize(1);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a0a89c07e4ad621a76bcf5a3222f8a09c" kindref="member">visited_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a926ea253eccd6721ea00c76f6ea360f0" kindref="member">nodes_</ref>.reserve(std::distance(begin,<sp/>end));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>begin;<sp/>i<sp/>!=<sp/>end;<sp/>++i)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a926ea253eccd6721ea00c76f6ea360f0" kindref="member">nodes_</ref>.emplace_back(*i);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a014a9c4289f5d991781376974c540351" kindref="member">root_</ref><sp/>=<sp/><ref refid="classkdtree_1a0025ccd7ffb2b1e6a4f6b8a3c652a0bf" kindref="member">make_tree</ref>(0,<sp/><ref refid="classkdtree_1a926ea253eccd6721ea00c76f6ea360f0" kindref="member">nodes_</ref>.size(),<sp/>0);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>func&gt;</highlight></codeline>
<codeline lineno="277" refid="classkdtree_1a23b773415b5f9d273166786a4152c1df" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classkdtree_1a23b773415b5f9d273166786a4152c1df" kindref="member">kdtree</ref>(func&amp;&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.resize(1);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a0a89c07e4ad621a76bcf5a3222f8a09c" kindref="member">visited_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a926ea253eccd6721ea00c76f6ea360f0" kindref="member">nodes_</ref>.reserve(n);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a926ea253eccd6721ea00c76f6ea360f0" kindref="member">nodes_</ref>.emplace_back(f());</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a014a9c4289f5d991781376974c540351" kindref="member">root_</ref><sp/>=<sp/><ref refid="classkdtree_1a0025ccd7ffb2b1e6a4f6b8a3c652a0bf" kindref="member">make_tree</ref>(0,<sp/><ref refid="classkdtree_1a926ea253eccd6721ea00c76f6ea360f0" kindref="member">nodes_</ref>.size(),<sp/>0);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="290" refid="classkdtree_1aefd25b527afcce143759b77853ce198f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classkdtree_1aefd25b527afcce143759b77853ce198f" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="291"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classkdtree_1a926ea253eccd6721ea00c76f6ea360f0" kindref="member">nodes_</ref>.empty();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="299" refid="classkdtree_1a2c19e2011f2f139b34c7feacccf8cb2a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classkdtree_1a2c19e2011f2f139b34c7feacccf8cb2a" kindref="member">visited</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="300"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classkdtree_1a0a89c07e4ad621a76bcf5a3222f8a09c" kindref="member">visited_</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="308" refid="classkdtree_1ac7105581fdfa27eff43b84795bbe4079" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classkdtree_1ac7105581fdfa27eff43b84795bbe4079" kindref="member">distance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="309"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(<ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.begin()-&gt;first);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>std::tuple&lt;point_type,<sp/>double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="324" refid="classkdtree_1ad2394e7a648855812b72a46d4788792f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classkdtree_1ad2394e7a648855812b72a46d4788792f" kindref="member">nearestN</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpoint" kindref="compound">point_type</ref>&amp;<sp/>pt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classkdtree_1a014a9c4289f5d991781376974c540351" kindref="member">root_</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;tree<sp/>is<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.clear();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.resize(N);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a0a89c07e4ad621a76bcf5a3222f8a09c" kindref="member">visited_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1abc92f4a3965e484862bc5b8c2e96e3a6" kindref="member">nearestN</ref>(<ref refid="classkdtree_1a014a9c4289f5d991781376974c540351" kindref="member">root_</ref>,<sp/>pt,<sp/>0,<sp/>N);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wgt<sp/>=<sp/>0.0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sum<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>b<sp/>:<sp/><ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>)<sp/>wgt<sp/>+=<sp/>b.second-&gt;point_.mass();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__GNUC__<sp/>&gt;<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.begin()-&gt;second-&gt;point_,<sp/>wgt,<sp/>std::sqrt(<ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.rbegin()-&gt;first)};</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tuple&lt;point_type,<sp/>double,<sp/>double&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>std::get&lt;0&gt;(ret)<sp/>=<sp/><ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.begin()-&gt;second-&gt;point_;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>std::get&lt;1&gt;(ret)<sp/>=<sp/>wgt;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>std::get&lt;2&gt;(ret)<sp/>=<sp/>std::sqrt(<ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.rbegin()-&gt;first);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>std::tuple&lt;std::vector&lt;point_type&gt;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="357" refid="classkdtree_1a80d99a07f74d96efb06a76787ef1d029" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classkdtree_1a80d99a07f74d96efb06a76787ef1d029" kindref="member">nearestList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpoint" kindref="compound">point_type</ref>&amp;<sp/>pt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classkdtree_1a014a9c4289f5d991781376974c540351" kindref="member">root_</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;tree<sp/>is<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.clear();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.resize(N);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1a0a89c07e4ad621a76bcf5a3222f8a09c" kindref="member">visited_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkdtree_1abc92f4a3965e484862bc5b8c2e96e3a6" kindref="member">nearestN</ref>(<ref refid="classkdtree_1a014a9c4289f5d991781376974c540351" kindref="member">root_</ref>,<sp/>pt,<sp/>0,<sp/>N);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;point_type&gt;<sp/>pts;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>returned<sp/>point<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>b<sp/>:<sp/><ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>)<sp/>pts.push_back(b.second-&gt;point_);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__GNUC__<sp/>&gt;<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{pts,<sp/>std::sqrt(<ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.rbegin()-&gt;first)};</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tuple&lt;std::vector&lt;point_type&gt;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>std::get&lt;0&gt;(ret)<sp/>=<sp/>pts;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>std::get&lt;1&gt;(ret)<sp/>=<sp/>std::sqrt(<ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>.rbegin()-&gt;first);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="classkdtree_1aa6c3e72813575db619b49f8c9d6a5f7f" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classkdtree_1aa6c3e72813575db619b49f8c9d6a5f7f" kindref="member">getDist</ref>()</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>:<sp/><ref refid="classkdtree_1a40498943803799971278a34d7c12e262" kindref="member">best_</ref>)<sp/>ret.push_back(v.first);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal">};</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/weinberg/Projects/EXP/include/KDtree.H"/>
  </compounddef>
</doxygen>
