<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_pot_r_z_8_h" kind="file" language="C++">
    <compoundname>PotRZ.H</compoundname>
    <includes refid="_q_d_h_t_8_h" local="no">QDHT.H</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="9">
        <label>EXPmath.H</label>
        <link refid="_e_x_pmath_8_h"/>
      </node>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/include/PotRZ.H</label>
        <link refid="_pot_r_z_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>QDHT.H</label>
        <link refid="_q_d_h_t_8_h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Eigen/Eigen</label>
      </node>
      <node id="4">
        <label>algorithm</label>
      </node>
      <node id="5">
        <label>chrono</label>
      </node>
      <node id="7">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>functional</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_pot_r_z" prot="public">PotRZ</innerclass>
    <innerclass refid="class_pot_r_z_1_1_sk" prot="protected">PotRZ::Sk</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_PotRZ_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PotRZ_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_q_d_h_t_8_h" kindref="compound">QDHT.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="class_pot_r_z" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_pot_r_z" kindref="compound">PotRZ</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15" refid="class_pot_r_z_1ac9418a8a416f340d0e6374ebd21dfde4" refkind="member"><highlight class="normal"><sp/><sp/>std::function&lt;double(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)&gt;<sp/><ref refid="class_pot_r_z_1ac9418a8a416f340d0e6374ebd21dfde4" kindref="member">mass</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="18" refid="class_pot_r_z_1_1_sk" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_pot_r_z_1_1_sk" kindref="compound">Sk</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_pot_r_z_1_1_sk_1a87eef3d6d03e29318c04d6d3301d6bbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pot_r_z_1_1_sk_1a87eef3d6d03e29318c04d6d3301d6bbb" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="23" refid="class_pot_r_z_1_1_sk_1ace4a27a09732f4554a56a450b3e77275" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_d_h_t" kindref="compound">QDHT</ref><sp/><ref refid="class_pot_r_z_1_1_sk_1ace4a27a09732f4554a56a450b3e77275" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28" refid="class_pot_r_z_1_1_sk_1a9b29e6af601361c3725faa652a6069e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pot_r_z_1_1_sk_1a9b29e6af601361c3725faa652a6069e0" kindref="member">Sk</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_pot_r_z_1_1_sk_1a1a01e40c1096829cbd337c6d89a14267" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pot_r_z_1_1_sk_1a1a01e40c1096829cbd337c6d89a14267" kindref="member">Sk</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pot_r_z_1_1_sk_1a87eef3d6d03e29318c04d6d3301d6bbb" kindref="member">N</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" kindref="member">M</ref>)<sp/>:<sp/><ref refid="class_pot_r_z_1_1_sk_1a87eef3d6d03e29318c04d6d3301d6bbb" kindref="member">N</ref>(<ref refid="class_pot_r_z_1_1_sk_1a87eef3d6d03e29318c04d6d3301d6bbb" kindref="member">N</ref>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pot_r_z_1_1_sk_1ace4a27a09732f4554a56a450b3e77275" kindref="member">v</ref><sp/>=<sp/><ref refid="class_q_d_h_t" kindref="compound">QDHT</ref>(<ref refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" kindref="member">M</ref>,<sp/><ref refid="class_pot_r_z_1_1_sk_1a87eef3d6d03e29318c04d6d3301d6bbb" kindref="member">N</ref>,<sp/>R);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tuple&lt;Eigen::VectorXd,<sp/>Eigen::VectorXd&gt;</highlight></codeline>
<codeline lineno="39" refid="class_pot_r_z_1_1_sk_1afde061a179f038a2394ff2135f523d91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pot_r_z_1_1_sk_1afde061a179f038a2394ff2135f523d91" kindref="member">operator()</ref>(std::function&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)&gt;<sp/>dens)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="class_pot_r_z_1_1_sk_1ace4a27a09732f4554a56a450b3e77275" kindref="member">v</ref>.<ref refid="class_q_d_h_t_1a3698a331a45c81e36acc1b23e8e51861" kindref="member">getR</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>f(<ref refid="class_pot_r_z_1_1_sk_1a87eef3d6d03e29318c04d6d3301d6bbb" kindref="member">N</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_pot_r_z_1_1_sk_1a87eef3d6d03e29318c04d6d3301d6bbb" kindref="member">N</ref>;<sp/>i++)<sp/>f[i]<sp/>=<sp/>dens(r[i]);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="class_pot_r_z_1_1_sk_1ace4a27a09732f4554a56a450b3e77275" kindref="member">v</ref>.<ref refid="class_q_d_h_t_1a544bb6c7f92c9b89b14e77893a384a3b" kindref="member">getK</ref>(),<sp/><ref refid="class_pot_r_z_1_1_sk_1ace4a27a09732f4554a56a450b3e77275" kindref="member">v</ref>(f)};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_pot_r_z_1aff5ef98880da3485610bf74720f00eee" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_d_h_t" kindref="compound">QDHT</ref><sp/><ref refid="class_pot_r_z_1aff5ef98880da3485610bf74720f00eee" kindref="member">v</ref>,<sp/><ref refid="class_pot_r_z_1aadafff4888fc29771c1a19a960c7efdd" kindref="member">vm</ref>,<sp/><ref refid="class_pot_r_z_1a0ca5eb32496b6da272e1991446fa005f" kindref="member">vp</ref>;</highlight></codeline>
<codeline lineno="52" refid="class_pot_r_z_1a0173a3ff4d68cb063489211fe95c1d85" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_pot_r_z_1_1_sk" kindref="compound">Sk</ref><sp/><sp/><sp/><ref refid="class_pot_r_z_1a0173a3ff4d68cb063489211fe95c1d85" kindref="member">u</ref>;</highlight></codeline>
<codeline lineno="53" refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" kindref="member">M</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="class_pot_r_z_1a6b7d396bb83407d96f2581b71d6ac8d8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_pot_r_z_1a6b7d396bb83407d96f2581b71d6ac8d8" kindref="member">PotRZ</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" kindref="member">M</ref>)<sp/>:<sp/><ref refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" kindref="member">M</ref>(<ref refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" kindref="member">M</ref>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pot_r_z_1aff5ef98880da3485610bf74720f00eee" kindref="member">v</ref><sp/>=<sp/><ref refid="class_q_d_h_t" kindref="compound">QDHT</ref>(<ref refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" kindref="member">M</ref>,<sp/>N,<sp/>R);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pot_r_z_1a0173a3ff4d68cb063489211fe95c1d85" kindref="member">u</ref><sp/>=<sp/><ref refid="class_pot_r_z_1_1_sk" kindref="compound">Sk</ref>(R,<sp/>N,<sp/><ref refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" kindref="member">M</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" kindref="member">M</ref>&gt;0)<sp/><ref refid="class_pot_r_z_1aadafff4888fc29771c1a19a960c7efdd" kindref="member">vm</ref><sp/>=<sp/><ref refid="class_q_d_h_t" kindref="compound">QDHT</ref>(<ref refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" kindref="member">M</ref>-1,<sp/>N,<sp/>R);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pot_r_z_1a0ca5eb32496b6da272e1991446fa005f" kindref="member">vp</ref><sp/>=<sp/><ref refid="class_q_d_h_t" kindref="compound">QDHT</ref>(<ref refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" kindref="member">M</ref>+1,<sp/>N,<sp/>R);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49" kindref="member">Field</ref><sp/>{<sp/><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49ad6614b55766ec7598b66c763af368a86" kindref="member">potential</ref>,<sp/><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a0412371a6f379b32238a840927f69a59" kindref="member">rforce</ref>,<sp/><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a7d99b11816e890714319466b5641071e" kindref="member">zforce</ref><sp/>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_pot_r_z_1a7b01917cb94ccc4e139f831f85f1cded" refkind="member"><highlight class="normal"><sp/><sp/>std::tuple&lt;Eigen::VectorXd,<sp/>Eigen::VectorXd&gt;<sp/>operator()</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,<sp/>std::function&lt;double(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)&gt;<sp/>dens,<sp/><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49" kindref="member">Field</ref><sp/>f=<ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49ad6614b55766ec7598b66c763af368a86" kindref="member">Field::potential</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>k,<sp/>S,<sp/>Sm,<sp/>Sp;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tie(k,<sp/>S)<sp/>=<sp/><ref refid="class_pot_r_z_1a0173a3ff4d68cb063489211fe95c1d85" kindref="member">u</ref>(dens);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>==<sp/><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a0412371a6f379b32238a840927f69a59" kindref="member">Field::rforce</ref>)<sp/>{<sp/>Sm.resize(k.size());<sp/>Sp.resize(k.size());<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>the<sp/>transform<sp/>for<sp/>the<sp/>desired<sp/>output<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;k.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(f)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49ad6614b55766ec7598b66c763af368a86" kindref="member">Field::potential</ref>:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S[i]<sp/>=<sp/>exp(-k[i]*fabs(z))/k[i]<sp/>*<sp/>S[i]<sp/>*<sp/>2.0*M_PI;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a7d99b11816e890714319466b5641071e" kindref="member">Field::zforce</ref>:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z&gt;=0)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S[i]<sp/>=<sp/><sp/>exp(-k[i]*z)<sp/>*<sp/>S[i]<sp/>*<sp/>2.0*M_PI;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S[i]<sp/>=<sp/>-exp(<sp/>k[i]*z)<sp/>*<sp/>S[i]<sp/>*<sp/>2.0*M_PI;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a0412371a6f379b32238a840927f69a59" kindref="member">Field::rforce</ref>:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" kindref="member">M</ref>&gt;0)<sp/>Sm[i]<sp/>=<sp/>-exp(-k[i]*fabs(z))<sp/>*<sp/>S[i]<sp/>*<sp/>2.0*M_PI;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sp[i]<sp/>=<sp/>-exp(-k[i]*fabs(z))<sp/>*<sp/>S[i]<sp/>*<sp/>2.0*M_PI;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>inverse<sp/>transform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f==<ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49ad6614b55766ec7598b66c763af368a86" kindref="member">Field::potential</ref><sp/>or<sp/>f==<ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a7d99b11816e890714319466b5641071e" kindref="member">Field::zforce</ref>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Potential<sp/>or<sp/>zforce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="class_pot_r_z_1aff5ef98880da3485610bf74720f00eee" kindref="member">v</ref>.<ref refid="class_q_d_h_t_1a3698a331a45c81e36acc1b23e8e51861" kindref="member">getR</ref>(),<sp/><ref refid="class_pot_r_z_1aff5ef98880da3485610bf74720f00eee" kindref="member">v</ref>(S,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Derivative<sp/>recursion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" kindref="member">M</ref>==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="class_pot_r_z_1aff5ef98880da3485610bf74720f00eee" kindref="member">v</ref>.<ref refid="class_q_d_h_t_1a3698a331a45c81e36acc1b23e8e51861" kindref="member">getR</ref>(),<sp/>-<ref refid="class_pot_r_z_1a0ca5eb32496b6da272e1991446fa005f" kindref="member">vp</ref>(Sp,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="class_pot_r_z_1aff5ef98880da3485610bf74720f00eee" kindref="member">v</ref>.<ref refid="class_q_d_h_t_1a3698a331a45c81e36acc1b23e8e51861" kindref="member">getR</ref>(),<sp/>(<ref refid="class_pot_r_z_1aadafff4888fc29771c1a19a960c7efdd" kindref="member">vm</ref>(Sm,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>-<sp/><ref refid="class_pot_r_z_1a0ca5eb32496b6da272e1991446fa005f" kindref="member">vp</ref>(Sp,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))*0.5};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class_pot_r_z_1aa605b2c0e95c83b100b9a151cf665ae6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>operator()</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,<sp/>std::function&lt;double(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)&gt;<sp/>dens,<sp/><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49" kindref="member">Field</ref><sp/>f=<ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49ad6614b55766ec7598b66c763af368a86" kindref="member">Field::potential</ref>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>k,<sp/>S,<sp/>Sm,<sp/>Sp;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tie(k,<sp/>S)<sp/>=<sp/><ref refid="class_pot_r_z_1a0173a3ff4d68cb063489211fe95c1d85" kindref="member">u</ref>(dens);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>==<sp/><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a0412371a6f379b32238a840927f69a59" kindref="member">Field::rforce</ref>)<sp/>{<sp/>Sm.resize(k.size());<sp/>Sp.resize(k.size());<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>the<sp/>transform<sp/>for<sp/>the<sp/>desired<sp/>output<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;k.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(f)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49ad6614b55766ec7598b66c763af368a86" kindref="member">Field::potential</ref>:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S[i]<sp/>=<sp/>exp(-k[i]*fabs(z))/k[i]<sp/>*<sp/>S[i]<sp/>*<sp/>2.0*M_PI;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a7d99b11816e890714319466b5641071e" kindref="member">Field::zforce</ref>:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&gt;=<sp/>0.0)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S[i]<sp/>=<sp/><sp/>exp(-k[i]*z)<sp/>*<sp/>S[i]<sp/>*<sp/>2.0*M_PI;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S[i]<sp/>=<sp/>-exp(<sp/>k[i]*z)<sp/>*<sp/>S[i]<sp/>*<sp/>2.0*M_PI;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a0412371a6f379b32238a840927f69a59" kindref="member">Field::rforce</ref>:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" kindref="member">M</ref>&gt;0)<sp/>Sm[i]<sp/>=<sp/>-exp(-k[i]*fabs(z))<sp/>*<sp/>S[i]<sp/>*<sp/>2.0*M_PI;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sp[i]<sp/>=<sp/>-exp(-k[i]*fabs(z))<sp/>*<sp/>S[i]<sp/>*<sp/>2.0*M_PI;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>the<sp/>inverse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f==<ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49ad6614b55766ec7598b66c763af368a86" kindref="member">Field::potential</ref><sp/>or<sp/>f==<ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a7d99b11816e890714319466b5641071e" kindref="member">Field::zforce</ref>)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Potential<sp/>or<sp/>zforce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pot_r_z_1aff5ef98880da3485610bf74720f00eee" kindref="member">v</ref>(r,<sp/>S);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Derivative<sp/>recursion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" kindref="member">M</ref>==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="class_pot_r_z_1a0ca5eb32496b6da272e1991446fa005f" kindref="member">vp</ref>(r,<sp/>Sp);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_pot_r_z_1aadafff4888fc29771c1a19a960c7efdd" kindref="member">vm</ref>(r,<sp/>Sm)<sp/>-<sp/><ref refid="class_pot_r_z_1a0ca5eb32496b6da272e1991446fa005f" kindref="member">vp</ref>(r,<sp/>Sp))*0.5;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>std::tuple&lt;Eigen::VectorXd,<sp/>Eigen::VectorXd&gt;</highlight></codeline>
<codeline lineno="156" refid="class_pot_r_z_1a946c0104998195fd35f0a87a19171b59" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_pot_r_z_1a946c0104998195fd35f0a87a19171b59" kindref="member">getKT</ref>(std::function&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)&gt;<sp/>func)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pot_r_z_1a0173a3ff4d68cb063489211fe95c1d85" kindref="member">u</ref>(func);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/weinberg/Projects/EXP/include/PotRZ.H"/>
  </compounddef>
</doxygen>
