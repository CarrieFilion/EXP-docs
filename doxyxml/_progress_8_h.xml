<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_progress_8_h" kind="file" language="C++">
    <compoundname>Progress.H</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/include/Progress.H</label>
        <link refid="_progress_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
    </incdepgraph>
    <innerclass refid="classprogress_1_1progress__display" prot="public">progress::progress_display</innerclass>
    <innernamespace refid="namespaceprogress">progress</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>Copyright<sp/>Beman<sp/>Dawes<sp/>1994-99.<sp/><sp/>Distributed<sp/>under<sp/>the<sp/>Boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>See<sp/>http://www.boost.org/libs/timer<sp/>for<sp/>documentation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Revision<sp/>History</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1<sp/>Dec<sp/>01<sp/><sp/>Add<sp/>leading<sp/>progress<sp/>display<sp/>strings<sp/>(suggested<sp/>by<sp/>Toon<sp/>Knapen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>20<sp/>May<sp/>01<sp/><sp/>Introduce<sp/>several<sp/>static_casts&lt;&gt;<sp/>to<sp/>eliminate<sp/>warning<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Fixed<sp/>by<sp/>Beman,<sp/>reported<sp/>by<sp/>Herve<sp/>Bronnimann)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>12<sp/>Jan<sp/>01<sp/><sp/>Change<sp/>to<sp/>inline<sp/>implementation<sp/>to<sp/>allow<sp/>use<sp/>without<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builds.<sp/>See<sp/>docs<sp/>for<sp/>more<sp/>rationale.<sp/>(Beman<sp/>Dawes)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>22<sp/>Jul<sp/>99<sp/><sp/>Name<sp/>changed<sp/>to<sp/>.hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>16<sp/>Jul<sp/>99<sp/><sp/>Second<sp/>beta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>6<sp/>Jul<sp/>99<sp/><sp/>Initial<sp/>boost<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>15<sp/>Nov<sp/>20<sp/><sp/>Stripped<sp/>from<sp/>boost<sp/>with<sp/>timer<sp/>removed<sp/>by<sp/>MDW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PROGRESS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROGRESS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>ostream,<sp/>cout,<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespaceprogress" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceprogress" kindref="compound">progress</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>progress_display<sp/><sp/>--------------------------------------------------------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>progress_display<sp/>displays<sp/>an<sp/>appropriate<sp/>indication<sp/>of<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>progress<sp/>at<sp/>an<sp/>appropriate<sp/>place<sp/>in<sp/>an<sp/>appropriate<sp/>form.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>(Jan<sp/>12,<sp/>2001)<sp/>Tried<sp/>to<sp/>change<sp/>unsigned<sp/>long<sp/>to<sp/>boost::uintmax_t,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>some<sp/>compilers<sp/>couldn&apos;t<sp/>handle<sp/>the<sp/>required<sp/>conversion<sp/>to<sp/>double.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reverted<sp/>to<sp/>unsigned<sp/>long<sp/>until<sp/>the<sp/>compilers<sp/>catch<sp/>up.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classprogress_1_1progress__display" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classprogress_1_1progress__display" kindref="compound">progress_display</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39" refid="classprogress_1_1progress__display_1a0c5dbbd210b906fea6360f7f4f29a07a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classprogress_1_1progress__display_1a0c5dbbd210b906fea6360f7f4f29a07a" kindref="member">progress_display</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>expected_count_,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;<sp/>os<sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>s1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//leading<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>s2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>s3<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>os<sp/>is<sp/>hint;<sp/>implementation<sp/>may<sp/>ignore,<sp/>particularly<sp/>in<sp/>embedded<sp/>systems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>:<sp/><ref refid="classprogress_1_1progress__display_1af4d647b3bca28ef06e058f050fca85ad" kindref="member">m_os</ref>(os),<sp/><ref refid="classprogress_1_1progress__display_1a7edcb2af956a49221fd23af72ab11e68" kindref="member">m_s1</ref>(s1),<sp/><ref refid="classprogress_1_1progress__display_1ab543eb5ce132702f32ee7742312c6348" kindref="member">m_s2</ref>(s2),<sp/><ref refid="classprogress_1_1progress__display_1a23ec7365f5ae0e412a22678e3ee40e57" kindref="member">m_s3</ref>(s3)<sp/>{<sp/><ref refid="global_8_h_1a8649fdfafe4f3ed5fa96bb5261379247" kindref="member">restart</ref>(expected_count_);<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classprogress_1_1progress__display_1a69ad1829f9bc76cec1d350741b33e178" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classprogress_1_1progress__display_1a69ad1829f9bc76cec1d350741b33e178" kindref="member">restart</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>expected_count_<sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Effects:<sp/>display<sp/>appropriate<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Postconditions:<sp/>count()==0,<sp/>expected_count()==expected_count_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>_count<sp/>=<sp/>_next_tic_count<sp/>=<sp/>_tic<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>_expected_count<sp/>=<sp/>expected_count_;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classprogress_1_1progress__display_1af4d647b3bca28ef06e058f050fca85ad" kindref="member">m_os</ref><sp/>&lt;&lt;<sp/><ref refid="classprogress_1_1progress__display_1a7edcb2af956a49221fd23af72ab11e68" kindref="member">m_s1</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0%<sp/><sp/><sp/>10<sp/><sp/><sp/>20<sp/><sp/><sp/>30<sp/><sp/><sp/>40<sp/><sp/><sp/>50<sp/><sp/><sp/>60<sp/><sp/><sp/>70<sp/><sp/><sp/>80<sp/><sp/><sp/>90<sp/><sp/><sp/>100%\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classprogress_1_1progress__display_1ab543eb5ce132702f32ee7742312c6348" kindref="member">m_s2</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|----|----|----|----|----|----|----|----|----|----|&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl<sp/><sp/></highlight><highlight class="comment">//<sp/>endl<sp/>implies<sp/>flush,<sp/>which<sp/>ensures<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classprogress_1_1progress__display_1a23ec7365f5ae0e412a22678e3ee40e57" kindref="member">m_s3</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!_expected_count<sp/>)<sp/>_expected_count<sp/>=<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>prevent<sp/>divide<sp/>by<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>restart</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classprogress_1_1progress__display_1aa3f9ebb82e22846077ff5e3e88fa7e6f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><ref refid="classprogress_1_1progress__display_1aa3f9ebb82e22846077ff5e3e88fa7e6f" kindref="member">operator+=</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>increment<sp/>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Effects:<sp/>Display<sp/>appropriate<sp/>progress<sp/>tic<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Postconditions:<sp/>count()==<sp/>original<sp/>count()<sp/>+<sp/>increment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Returns:<sp/>count().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(_count<sp/>+=<sp/>increment)<sp/>&gt;=<sp/>_next_tic_count<sp/>)<sp/>{<sp/><ref refid="classprogress_1_1progress__display_1a1b352d5465ddf82dc4d2b01025e33724" kindref="member">display_tic</ref>();<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_count;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classprogress_1_1progress__display_1ad92df6f2d073c297c89f8789bcd324ad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><ref refid="classprogress_1_1progress__display_1ad92df6f2d073c297c89f8789bcd324ad" kindref="member">operator++</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classprogress_1_1progress__display_1aa3f9ebb82e22846077ff5e3e88fa7e6f" kindref="member">operator+=</ref>(<sp/>1<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="71" refid="classprogress_1_1progress__display_1ae6a11677ddfd7b26dbb70de89468e1f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><ref refid="classprogress_1_1progress__display_1ae6a11677ddfd7b26dbb70de89468e1f8" kindref="member">count</ref>()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_count;<sp/>}</highlight></codeline>
<codeline lineno="72" refid="classprogress_1_1progress__display_1a82fc14223fe78d11d5b6192ffcbc3998" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><ref refid="classprogress_1_1progress__display_1a82fc14223fe78d11d5b6192ffcbc3998" kindref="member">expected_count</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_expected_count;<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75" refid="classprogress_1_1progress__display_1af4d647b3bca28ef06e058f050fca85ad" refkind="member"><highlight class="normal"><sp/><sp/>std::ostream<sp/>&amp;<sp/><sp/><sp/><sp/><sp/><ref refid="classprogress_1_1progress__display_1af4d647b3bca28ef06e058f050fca85ad" kindref="member">m_os</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>be<sp/>present<sp/>in<sp/>all<sp/>imps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classprogress_1_1progress__display_1a7edcb2af956a49221fd23af72ab11e68" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><sp/><ref refid="classprogress_1_1progress__display_1a7edcb2af956a49221fd23af72ab11e68" kindref="member">m_s1</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>string<sp/>is<sp/>more<sp/>general,<sp/>safer<sp/>than<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classprogress_1_1progress__display_1ab543eb5ce132702f32ee7742312c6348" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><sp/><ref refid="classprogress_1_1progress__display_1ab543eb5ce132702f32ee7742312c6348" kindref="member">m_s2</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>const<sp/>char<sp/>*,<sp/>and<sp/>efficiency<sp/>or<sp/>size<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classprogress_1_1progress__display_1a23ec7365f5ae0e412a22678e3ee40e57" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><sp/><ref refid="classprogress_1_1progress__display_1a23ec7365f5ae0e412a22678e3ee40e57" kindref="member">m_s3</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>not<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>_count,<sp/>_expected_count,<sp/>_next_tic_count;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>_tic;</highlight></codeline>
<codeline lineno="82" refid="classprogress_1_1progress__display_1a1b352d5465ddf82dc4d2b01025e33724" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classprogress_1_1progress__display_1a1b352d5465ddf82dc4d2b01025e33724" kindref="member">display_tic</ref>()</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>of<sp/>floating<sp/>point<sp/>ensures<sp/>that<sp/>both<sp/>large<sp/>and<sp/>small<sp/>counts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>work<sp/>correctly.<sp/><sp/>static_cast&lt;&gt;()<sp/>is<sp/>also<sp/>used<sp/>several<sp/>places</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>suppress<sp/>spurious<sp/>compiler<sp/>warnings.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tics_needed<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_count)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_expected_count))<sp/>*<sp/>50.0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{<sp/><ref refid="classprogress_1_1progress__display_1af4d647b3bca28ef06e058f050fca85ad" kindref="member">m_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::flush;<sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>++_tic<sp/>&lt;<sp/>tics_needed<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>_next_tic_count<sp/>=<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((_tic/50.0)<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_expected_count));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>_count<sp/>==<sp/>_expected_count<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>_tic<sp/>&lt;<sp/>51<sp/>)<sp/><ref refid="classprogress_1_1progress__display_1af4d647b3bca28ef06e058f050fca85ad" kindref="member">m_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classprogress_1_1progress__display_1af4d647b3bca28ef06e058f050fca85ad" kindref="member">m_os</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>display_tic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>PROGRESS_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/weinberg/Projects/EXP/include/Progress.H"/>
  </compounddef>
</doxygen>
