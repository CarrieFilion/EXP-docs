<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_biorth_cube" kind="class" language="C++" prot="public">
    <compoundname>BiorthCube</compoundname>
    <includes refid="_biorth_cube_8_h" local="no">BiorthCube.H</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_biorth_cube_1a068cf3cab9677dae5e9017496e008c18" prot="public" static="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 3 &gt;</type>
        <definition>using BiorthCube::coefType =  Eigen::Tensor&lt;std::complex&lt;double&gt;, 3&gt;</definition>
        <argsstring></argsstring>
        <name>coefType</name>
        <qualifiedname>BiorthCube::coefType</qualifiedname>
        <briefdescription>
<para>Coefficient type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="60" column="3" bodyfile="/home/weinberg/Projects/EXP/include/BiorthCube.H" bodystart="60" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_biorth_cube_1acd4e1cabf750b18970d5c50aa5defcaf" prot="protected" static="no" mutable="no">
        <type>YAML::Node</type>
        <definition>YAML::Node BiorthCube::conf</definition>
        <argsstring></argsstring>
        <name>conf</name>
        <qualifiedname>BiorthCube::conf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="44" column="14" bodyfile="/home/weinberg/Projects/EXP/include/BiorthCube.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_biorth_cube_1a3658240f83a2aaf0226f4ec600e332f4" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BiorthCube::forceID</definition>
        <argsstring></argsstring>
        <name>forceID</name>
        <qualifiedname>BiorthCube::forceID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="46" column="24" bodyfile="/home/weinberg/Projects/EXP/include/BiorthCube.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_biorth_cube_1aad695296bfbfaccff6108fece786b756" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BiorthCube::geometry</definition>
        <argsstring></argsstring>
        <name>geometry</name>
        <qualifiedname>BiorthCube::geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="46" column="15" bodyfile="/home/weinberg/Projects/EXP/include/BiorthCube.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_biorth_cube_1a07ff54b4f2e2c78544ba952ab1a6f0a1" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int BiorthCube::knots</definition>
        <argsstring></argsstring>
        <name>knots</name>
        <qualifiedname>BiorthCube::knots</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="50" column="7" bodyfile="/home/weinberg/Projects/EXP/include/BiorthCube.H" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_biorth_cube_1a0bea64d4b0761c2422973f3a96e73925" prot="protected" static="no" mutable="no">
        <type>Eigen::Vector3i</type>
        <definition>Eigen::Vector3i BiorthCube::nmax</definition>
        <argsstring></argsstring>
        <name>nmax</name>
        <qualifiedname>BiorthCube::nmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="48" column="24" bodyfile="/home/weinberg/Projects/EXP/include/BiorthCube.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_biorth_cube_1af0c19291bcb3acb96b1599ce478b92f7" prot="protected" static="no" mutable="no">
        <type>Eigen::Vector3i</type>
        <definition>Eigen::Vector3i BiorthCube::nmin</definition>
        <argsstring></argsstring>
        <name>nmin</name>
        <qualifiedname>BiorthCube::nmin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="48" column="19" bodyfile="/home/weinberg/Projects/EXP/include/BiorthCube.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_biorth_cube_1add0c259622a277a9647d37caf48d0886" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BiorthCube::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <qualifiedname>BiorthCube::verbose</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="52" column="8" bodyfile="/home/weinberg/Projects/EXP/include/BiorthCube.H" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_biorth_cube_1a3665301c5caa23d01b575bfd2bc2efd2" prot="protected" static="yes" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double BiorthCube::dfac</definition>
        <argsstring></argsstring>
        <name>dfac</name>
        <qualifiedname>BiorthCube::dfac</qualifiedname>
        <initializer>= 2.0*M_PI</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="54" column="27" bodyfile="/home/weinberg/Projects/EXP/include/BiorthCube.H" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_biorth_cube_1a040d3d6a5b1f935b72bb40ff3e56bf4e" prot="protected" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::complex&lt; double &gt;</type>
        <definition>constexpr std::complex&lt;double&gt; BiorthCube::kfac</definition>
        <argsstring></argsstring>
        <name>kfac</name>
        <qualifiedname>BiorthCube::kfac</qualifiedname>
        <initializer>{0.0, <ref refid="class_biorth_cube_1a3665301c5caa23d01b575bfd2bc2efd2" kindref="member">dfac</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="55" column="33" bodyfile="/home/weinberg/Projects/EXP/include/BiorthCube.H" bodystart="55" bodyend="55"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_biorth_cube_1aa591d0c9bcdb8a7327bbad9b94809945" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int BiorthCube::mpi</definition>
        <argsstring></argsstring>
        <name>mpi</name>
        <qualifiedname>BiorthCube::mpi</qualifiedname>
        <briefdescription>
<para>Flag for MPI enabled (default: 0=off) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="63" column="14" bodyfile="/home/weinberg/Projects/EXP/include/BiorthCube.H" bodystart="63" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_biorth_cube_1a6c46abed8126eb133f6af269f0532a3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BiorthCube::BiorthCube</definition>
        <argsstring>(const YAML::Node &amp;conf)</argsstring>
        <name>BiorthCube</name>
        <qualifiedname>BiorthCube::BiorthCube</qualifiedname>
        <param>
          <type>const YAML::Node &amp;</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="66" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_biorth_cube_1a2266a8e7e3af1f1b573079d5d3bb67f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::complex&lt; double &gt;</type>
        <definition>std::complex&lt; double &gt; BiorthCube::dens</definition>
        <argsstring>(Eigen::Vector3d x, Eigen::Vector3i n)</argsstring>
        <name>dens</name>
        <qualifiedname>BiorthCube::dens</qualifiedname>
        <param>
          <type>Eigen::Vector3d</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Eigen::Vector3i</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get density for dimensionless coord with harmonic order l and radial orer n <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="75" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_biorth_cube_1aba90ca6c14cfe914f7f928fe26942924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector3cd</type>
        <definition>Eigen::Vector3cd BiorthCube::force</definition>
        <argsstring>(Eigen::Vector3d x, Eigen::Vector3i n)</argsstring>
        <name>force</name>
        <qualifiedname>BiorthCube::force</qualifiedname>
        <param>
          <type>Eigen::Vector3d</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Eigen::Vector3i</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get radial force for dimensionless coord with harmonic order l and radial orer n. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="78" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_biorth_cube_1a45152e8a43f0a3832c57cbae1b0d6803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::complex&lt; double &gt;</type>
        <definition>std::complex&lt; double &gt; BiorthCube::get_dens</definition>
        <argsstring>(const coefType &amp;c, Eigen::Vector3d x)</argsstring>
        <name>get_dens</name>
        <qualifiedname>BiorthCube::get_dens</qualifiedname>
        <param>
          <type>const <ref refid="class_biorth_cube_1a068cf3cab9677dae5e9017496e008c18" kindref="member">coefType</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>Eigen::Vector3d</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Get density for dimensionless coord with harmonic order l and radial orer n <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="84" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_biorth_cube_1a164c49351a8f572c581aac3a8d33c212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector3cd</type>
        <definition>Eigen::Vector3cd BiorthCube::get_force</definition>
        <argsstring>(const coefType &amp;c, Eigen::Vector3d x)</argsstring>
        <name>get_force</name>
        <qualifiedname>BiorthCube::get_force</qualifiedname>
        <param>
          <type>const <ref refid="class_biorth_cube_1a068cf3cab9677dae5e9017496e008c18" kindref="member">coefType</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>Eigen::Vector3d</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Get radial force for dimensionless coord with harmonic order l and radial orer n. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="87" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_biorth_cube_1a9112d07edabc3d5fe2fd9aed9907bf59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::complex&lt; double &gt;</type>
        <definition>std::complex&lt; double &gt; BiorthCube::get_pot</definition>
        <argsstring>(const coefType &amp;c, Eigen::Vector3d x)</argsstring>
        <name>get_pot</name>
        <qualifiedname>BiorthCube::get_pot</qualifiedname>
        <param>
          <type>const <ref refid="class_biorth_cube_1a068cf3cab9677dae5e9017496e008c18" kindref="member">coefType</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>Eigen::Vector3d</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Get potential for dimensionless coord with harmonic order m and radial orer n. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="81" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_biorth_cube_1a83f2f3c93e5d6fa2b75edca1b1e43739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::MatrixXcd</type>
        <definition>Eigen::MatrixXcd BiorthCube::orthoCheck</definition>
        <argsstring>()</argsstring>
        <name>orthoCheck</name>
        <qualifiedname>BiorthCube::orthoCheck</qualifiedname>
        <briefdescription>
<para>For pyEXP. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="90" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_biorth_cube_1a485ee9a9592263401e41973a390fa0b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::complex&lt; double &gt;</type>
        <definition>std::complex&lt; double &gt; BiorthCube::pot</definition>
        <argsstring>(Eigen::Vector3d x, Eigen::Vector3i n)</argsstring>
        <name>pot</name>
        <qualifiedname>BiorthCube::pot</qualifiedname>
        <param>
          <type>Eigen::Vector3d</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Eigen::Vector3i</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get potential for dimensionless coord with harmonic order m and radial orer n. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="72" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_biorth_cube_1a5626e1a8872fdae3515207c17949ab6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual BiorthCube::~BiorthCube</definition>
        <argsstring>()</argsstring>
        <name>~BiorthCube</name>
        <qualifiedname>BiorthCube::~BiorthCube</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="69" column="11" bodyfile="/home/weinberg/Projects/EXP/include/BiorthCube.H" bodystart="69" bodyend="69"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>! <ref refid="class_biorth_cube" kindref="compound">BiorthCube</ref> grid class </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/weinberg/Projects/EXP/include/BiorthCube.H" line="39" column="1" bodyfile="/home/weinberg/Projects/EXP/include/BiorthCube.H" bodystart="40" bodyend="92"/>
    <listofallmembers>
      <member refid="class_biorth_cube_1a6c46abed8126eb133f6af269f0532a3b" prot="public" virt="non-virtual"><scope>BiorthCube</scope><name>BiorthCube</name></member>
      <member refid="class_biorth_cube_1a068cf3cab9677dae5e9017496e008c18" prot="public" virt="non-virtual"><scope>BiorthCube</scope><name>coefType</name></member>
      <member refid="class_biorth_cube_1acd4e1cabf750b18970d5c50aa5defcaf" prot="protected" virt="non-virtual"><scope>BiorthCube</scope><name>conf</name></member>
      <member refid="class_biorth_cube_1a2266a8e7e3af1f1b573079d5d3bb67f0" prot="public" virt="non-virtual"><scope>BiorthCube</scope><name>dens</name></member>
      <member refid="class_biorth_cube_1a3665301c5caa23d01b575bfd2bc2efd2" prot="protected" virt="non-virtual"><scope>BiorthCube</scope><name>dfac</name></member>
      <member refid="class_biorth_cube_1aba90ca6c14cfe914f7f928fe26942924" prot="public" virt="non-virtual"><scope>BiorthCube</scope><name>force</name></member>
      <member refid="class_biorth_cube_1a3658240f83a2aaf0226f4ec600e332f4" prot="protected" virt="non-virtual"><scope>BiorthCube</scope><name>forceID</name></member>
      <member refid="class_biorth_cube_1aad695296bfbfaccff6108fece786b756" prot="protected" virt="non-virtual"><scope>BiorthCube</scope><name>geometry</name></member>
      <member refid="class_biorth_cube_1a45152e8a43f0a3832c57cbae1b0d6803" prot="public" virt="non-virtual"><scope>BiorthCube</scope><name>get_dens</name></member>
      <member refid="class_biorth_cube_1a164c49351a8f572c581aac3a8d33c212" prot="public" virt="non-virtual"><scope>BiorthCube</scope><name>get_force</name></member>
      <member refid="class_biorth_cube_1a9112d07edabc3d5fe2fd9aed9907bf59" prot="public" virt="non-virtual"><scope>BiorthCube</scope><name>get_pot</name></member>
      <member refid="class_biorth_cube_1a040d3d6a5b1f935b72bb40ff3e56bf4e" prot="protected" virt="non-virtual"><scope>BiorthCube</scope><name>kfac</name></member>
      <member refid="class_biorth_cube_1a07ff54b4f2e2c78544ba952ab1a6f0a1" prot="protected" virt="non-virtual"><scope>BiorthCube</scope><name>knots</name></member>
      <member refid="class_biorth_cube_1aa591d0c9bcdb8a7327bbad9b94809945" prot="public" virt="non-virtual"><scope>BiorthCube</scope><name>mpi</name></member>
      <member refid="class_biorth_cube_1a0bea64d4b0761c2422973f3a96e73925" prot="protected" virt="non-virtual"><scope>BiorthCube</scope><name>nmax</name></member>
      <member refid="class_biorth_cube_1af0c19291bcb3acb96b1599ce478b92f7" prot="protected" virt="non-virtual"><scope>BiorthCube</scope><name>nmin</name></member>
      <member refid="class_biorth_cube_1a83f2f3c93e5d6fa2b75edca1b1e43739" prot="public" virt="non-virtual"><scope>BiorthCube</scope><name>orthoCheck</name></member>
      <member refid="class_biorth_cube_1a485ee9a9592263401e41973a390fa0b4" prot="public" virt="non-virtual"><scope>BiorthCube</scope><name>pot</name></member>
      <member refid="class_biorth_cube_1add0c259622a277a9647d37caf48d0886" prot="protected" virt="non-virtual"><scope>BiorthCube</scope><name>verbose</name></member>
      <member refid="class_biorth_cube_1a5626e1a8872fdae3515207c17949ab6e" prot="public" virt="virtual"><scope>BiorthCube</scope><name>~BiorthCube</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
