<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_component_header" kind="class" language="C++" prot="public">
    <compoundname>ComponentHeader</compoundname>
    <includes refid="header_8_h" local="no">header.H</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_component_header_1a51f61d57f69385929030a09a658a4ce5" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; char &gt;</type>
        <definition>std::shared_ptr&lt;char&gt; ComponentHeader::info</definition>
        <argsstring></argsstring>
        <name>info</name>
        <qualifiedname>ComponentHeader::info</qualifiedname>
        <briefdescription>
<para><ref refid="class_info" kindref="compound">Info</ref> string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/header.H" line="55" column="19" bodyfile="/home/weinberg/Projects/EXP/include/header.H" bodystart="55" bodyend="-1"/>
        <referencedby refid="class_component_header_1a92e952f6c00b6d706f1b0d51017da56e" compoundref="header_8_h" startline="61" endline="71">ComponentHeader</referencedby>
        <referencedby refid="class_component_header_1af20ccd285e7f059f5a4a9f1b01de541a" compoundref="header_8_h" startline="74" endline="84">ComponentHeader</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_component_header_1adbc701a318d16c3801ae8e3bbc9abc8d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ComponentHeader::nbod</definition>
        <argsstring></argsstring>
        <name>nbod</name>
        <qualifiedname>ComponentHeader::nbod</qualifiedname>
        <briefdescription>
<para>Number of bodies in the component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/header.H" line="43" column="7" bodyfile="/home/weinberg/Projects/EXP/include/header.H" bodystart="43" bodyend="-1"/>
        <referencedby refid="class_p_r_1_1_p_s_p_1a30508c9bcea21d4c88f3bb097935c13d" compoundref="_particle_reader_8_h" startline="407" endline="407">PR::PSP::CurrentNumber</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_component_header_1ac8ca5923a927b86910716613d589a6dc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ComponentHeader::ndatr</definition>
        <argsstring></argsstring>
        <name>ndatr</name>
        <qualifiedname>ComponentHeader::ndatr</qualifiedname>
        <briefdescription>
<para>Number of real (double) attributes per particle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/header.H" line="49" column="7" bodyfile="/home/weinberg/Projects/EXP/include/header.H" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_component_header_1aba4fd93dbac413df72a87c414a0d7c54" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ComponentHeader::niatr</definition>
        <argsstring></argsstring>
        <name>niatr</name>
        <qualifiedname>ComponentHeader::niatr</qualifiedname>
        <briefdescription>
<para>Number of integer attributes per particle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/header.H" line="46" column="7" bodyfile="/home/weinberg/Projects/EXP/include/header.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_component_header_1af3ebdc1825b61cb7ee27858d26966282" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ComponentHeader::ninfochar</definition>
        <argsstring></argsstring>
        <name>ninfochar</name>
        <qualifiedname>ComponentHeader::ninfochar</qualifiedname>
        <briefdescription>
<para>Size of info string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/header.H" line="52" column="7" bodyfile="/home/weinberg/Projects/EXP/include/header.H" bodystart="52" bodyend="-1"/>
        <referencedby refid="class_component_header_1a92e952f6c00b6d706f1b0d51017da56e" compoundref="header_8_h" startline="61" endline="71">ComponentHeader</referencedby>
        <referencedby refid="class_component_header_1af20ccd285e7f059f5a4a9f1b01de541a" compoundref="header_8_h" startline="74" endline="84">ComponentHeader</referencedby>
        <referencedby refid="class_component_header_1a072c894dff0c7f24f68af4f786347bc9" compoundref="header_8_h" startline="96" endline="99">getSize</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_component_header_1af62c07db9d54ed90f507d904f52fc38a" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int ComponentHeader::defaultInfoSize</definition>
        <argsstring></argsstring>
        <name>defaultInfoSize</name>
        <qualifiedname>ComponentHeader::defaultInfoSize</qualifiedname>
        <briefdescription>
<para>Default size of info string (if not specified explicitly or read) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/header.H" line="58" column="14" bodyfile="/home/weinberg/Projects/EXP/include/header.H" bodystart="58" bodyend="-1"/>
        <referencedby refid="class_component_header_1a92e952f6c00b6d706f1b0d51017da56e" compoundref="header_8_h" startline="61" endline="71">ComponentHeader</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_component_header_1a92e952f6c00b6d706f1b0d51017da56e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ComponentHeader::ComponentHeader</definition>
        <argsstring>()</argsstring>
        <name>ComponentHeader</name>
        <qualifiedname>ComponentHeader::ComponentHeader</qualifiedname>
        <briefdescription>
<para>Default constructor: uses defaultInfoSize by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/header.H" line="61" column="3" bodyfile="/home/weinberg/Projects/EXP/include/header.H" bodystart="61" bodyend="71"/>
        <references refid="class_component_header_1af62c07db9d54ed90f507d904f52fc38a" compoundref="header_8_h" startline="58">defaultInfoSize</references>
        <references refid="class_component_header_1a51f61d57f69385929030a09a658a4ce5" compoundref="header_8_h" startline="55">info</references>
        <references refid="class_component_header_1af3ebdc1825b61cb7ee27858d26966282" compoundref="header_8_h" startline="52">ninfochar</references>
      </memberdef>
      <memberdef kind="function" id="class_component_header_1af20ccd285e7f059f5a4a9f1b01de541a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ComponentHeader::ComponentHeader</definition>
        <argsstring>(int n)</argsstring>
        <name>ComponentHeader</name>
        <qualifiedname>ComponentHeader::ComponentHeader</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Construct component with info field of length n. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/header.H" line="74" column="3" bodyfile="/home/weinberg/Projects/EXP/include/header.H" bodystart="74" bodyend="84"/>
        <references refid="class_component_header_1a51f61d57f69385929030a09a658a4ce5" compoundref="header_8_h" startline="55">info</references>
        <references refid="class_component_header_1af3ebdc1825b61cb7ee27858d26966282" compoundref="header_8_h" startline="52">ninfochar</references>
      </memberdef>
      <memberdef kind="function" id="class_component_header_1a072c894dff0c7f24f68af4f786347bc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ComponentHeader::getSize</definition>
        <argsstring>()</argsstring>
        <name>getSize</name>
        <qualifiedname>ComponentHeader::getSize</qualifiedname>
        <briefdescription>
<para>Get header size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/header.H" line="96" column="7" bodyfile="/home/weinberg/Projects/EXP/include/header.H" bodystart="96" bodyend="99"/>
        <references refid="class_component_header_1af3ebdc1825b61cb7ee27858d26966282" compoundref="header_8_h" startline="52">ninfochar</references>
      </memberdef>
      <memberdef kind="function" id="class_component_header_1a565d1ca7343e35c48387e69ca0f924f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ComponentHeader::read</definition>
        <argsstring>(istream *in)</argsstring>
        <name>read</name>
        <qualifiedname>ComponentHeader::read</qualifiedname>
        <param>
          <type>istream *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Read binary header from input stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/header.H" line="93" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_component_header_1a311e3d9b8a0c66cf9148e73fc85bfbe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ComponentHeader::write</definition>
        <argsstring>(ostream *out)</argsstring>
        <name>write</name>
        <qualifiedname>ComponentHeader::write</qualifiedname>
        <param>
          <type>ostream *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Write binary header to output stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/header.H" line="87" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_component_header_1a55cc35a1d4bf5329da2d19b8ac9f23cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ComponentHeader::write_mpi</definition>
        <argsstring>(MPI_File &amp;out, MPI_Offset &amp;offset)</argsstring>
        <name>write_mpi</name>
        <qualifiedname>ComponentHeader::write_mpi</qualifiedname>
        <param>
          <type>MPI_File &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>MPI_Offset &amp;</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Write binary header to MPI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/header.H" line="90" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_component_header_1a4fe829090b21722256ef4ddbcc01eb73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const ComponentHeader &amp;p)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>ComponentHeader::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_component_header" kindref="compound">ComponentHeader</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/header.H" line="101" column="10" bodyfile="/home/weinberg/Projects/EXP/include/header.H" bodystart="101" bodyend="113"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Describe a component in a phase space dump. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/weinberg/Projects/EXP/include/header.H" line="39" column="1" bodyfile="/home/weinberg/Projects/EXP/include/header.H" bodystart="40" bodyend="115"/>
    <listofallmembers>
      <member refid="class_component_header_1a92e952f6c00b6d706f1b0d51017da56e" prot="public" virt="non-virtual"><scope>ComponentHeader</scope><name>ComponentHeader</name></member>
      <member refid="class_component_header_1af20ccd285e7f059f5a4a9f1b01de541a" prot="public" virt="non-virtual"><scope>ComponentHeader</scope><name>ComponentHeader</name></member>
      <member refid="class_component_header_1af62c07db9d54ed90f507d904f52fc38a" prot="public" virt="non-virtual"><scope>ComponentHeader</scope><name>defaultInfoSize</name></member>
      <member refid="class_component_header_1a072c894dff0c7f24f68af4f786347bc9" prot="public" virt="non-virtual"><scope>ComponentHeader</scope><name>getSize</name></member>
      <member refid="class_component_header_1a51f61d57f69385929030a09a658a4ce5" prot="public" virt="non-virtual"><scope>ComponentHeader</scope><name>info</name></member>
      <member refid="class_component_header_1adbc701a318d16c3801ae8e3bbc9abc8d" prot="public" virt="non-virtual"><scope>ComponentHeader</scope><name>nbod</name></member>
      <member refid="class_component_header_1ac8ca5923a927b86910716613d589a6dc" prot="public" virt="non-virtual"><scope>ComponentHeader</scope><name>ndatr</name></member>
      <member refid="class_component_header_1aba4fd93dbac413df72a87c414a0d7c54" prot="public" virt="non-virtual"><scope>ComponentHeader</scope><name>niatr</name></member>
      <member refid="class_component_header_1af3ebdc1825b61cb7ee27858d26966282" prot="public" virt="non-virtual"><scope>ComponentHeader</scope><name>ninfochar</name></member>
      <member refid="class_component_header_1a4fe829090b21722256ef4ddbcc01eb73" prot="public" virt="non-virtual"><scope>ComponentHeader</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_component_header_1a565d1ca7343e35c48387e69ca0f924f1" prot="public" virt="non-virtual"><scope>ComponentHeader</scope><name>read</name></member>
      <member refid="class_component_header_1a311e3d9b8a0c66cf9148e73fc85bfbe9" prot="public" virt="non-virtual"><scope>ComponentHeader</scope><name>write</name></member>
      <member refid="class_component_header_1a55cc35a1d4bf5329da2d19b8ac9f23cb" prot="public" virt="non-virtual"><scope>ComponentHeader</scope><name>write_mpi</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
