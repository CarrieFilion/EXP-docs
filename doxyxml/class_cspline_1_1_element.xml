<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_cspline_1_1_element" kind="class" language="C++" prot="protected">
    <compoundname>Cspline::Element</compoundname>
    <includes refid="_cspline_8_h" local="no">Cspline.H</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_cspline_1_1_element_1ab8eee4f586ed59e3ec087886a51c3962" prot="public" static="no" mutable="no">
        <type>Y</type>
        <definition>Y Cspline&lt; X, Y &gt;::Element::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <qualifiedname>Cspline::Element::a</qualifiedname>
        <briefdescription>
<para>Cubic coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Cspline.H" line="130" column="7" bodyfile="/home/weinberg/Projects/EXP/include/Cspline.H" bodystart="130" bodyend="-1"/>
        <referencedby refid="class_cspline_1_1_element_1aa4d538b676dd7cea1822f8c2ff988b46" compoundref="_cspline_8_h" startline="141" endline="144">Cspline&lt; X, Y &gt;::Element::eval</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_cspline_1_1_element_1ae271037d9bb62ce91a78940c36300209" prot="public" static="no" mutable="no">
        <type>Y</type>
        <definition>Y Cspline&lt; X, Y &gt;::Element::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <qualifiedname>Cspline::Element::b</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Cspline.H" line="130" column="9" bodyfile="/home/weinberg/Projects/EXP/include/Cspline.H" bodystart="130" bodyend="-1"/>
        <referencedby refid="class_cspline_1_1_element_1aa4d538b676dd7cea1822f8c2ff988b46" compoundref="_cspline_8_h" startline="141" endline="144">Cspline&lt; X, Y &gt;::Element::eval</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_cspline_1_1_element_1a56d0aaef4e3e6f669bf3d564fe1f5ef3" prot="public" static="no" mutable="no">
        <type>Y</type>
        <definition>Y Cspline&lt; X, Y &gt;::Element::c</definition>
        <argsstring></argsstring>
        <name>c</name>
        <qualifiedname>Cspline::Element::c</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Cspline.H" line="130" column="11" bodyfile="/home/weinberg/Projects/EXP/include/Cspline.H" bodystart="130" bodyend="-1"/>
        <referencedby refid="class_cspline_1_1_element_1aa4d538b676dd7cea1822f8c2ff988b46" compoundref="_cspline_8_h" startline="141" endline="144">Cspline&lt; X, Y &gt;::Element::eval</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_cspline_1_1_element_1a94f1f08e4f9def88aac03c33566d14a7" prot="public" static="no" mutable="no">
        <type>Y</type>
        <definition>Y Cspline&lt; X, Y &gt;::Element::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>Cspline::Element::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Cspline.H" line="130" column="13" bodyfile="/home/weinberg/Projects/EXP/include/Cspline.H" bodystart="130" bodyend="-1"/>
        <referencedby refid="class_cspline_1_1_element_1aa4d538b676dd7cea1822f8c2ff988b46" compoundref="_cspline_8_h" startline="141" endline="144">Cspline&lt; X, Y &gt;::Element::eval</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_cspline_1_1_element_1a619eec3164dd8e6790a6b9cf3de94ced" prot="public" static="no" mutable="no">
        <type>X</type>
        <definition>X Cspline&lt; X, Y &gt;::Element::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>Cspline::Element::x</qualifiedname>
        <briefdescription>
<para>The ordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Cspline.H" line="127" column="7" bodyfile="/home/weinberg/Projects/EXP/include/Cspline.H" bodystart="127" bodyend="-1"/>
        <referencedby refid="class_cspline_1_1_element_1aa4d538b676dd7cea1822f8c2ff988b46" compoundref="_cspline_8_h" startline="141" endline="144">Cspline&lt; X, Y &gt;::Element::eval</referencedby>
        <referencedby refid="class_cspline_1_1_element_1ad543a799407dc088f23fc39d0dd50cc8" compoundref="_cspline_8_h" startline="148" endline="150">Cspline&lt; X, Y &gt;::Element::operator&lt;</referencedby>
        <referencedby refid="class_cspline_1_1_element_1a163309bdd9e64c3eab1805a454691fd2" compoundref="_cspline_8_h" startline="151" endline="153">Cspline&lt; X, Y &gt;::Element::operator&lt;</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_cspline_1_1_element_1a1a0231e6a7d5d8ead2f6c79a866137f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cspline&lt; X, Y &gt;::Element::Element</definition>
        <argsstring>(X _x)</argsstring>
        <name>Element</name>
        <qualifiedname>Cspline::Element::Element</qualifiedname>
        <param>
          <type>X</type>
          <declname>_x</declname>
        </param>
        <briefdescription>
<para>Define the ordinate only. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Cspline.H" line="133" column="5" bodyfile="/home/weinberg/Projects/EXP/include/Cspline.H" bodystart="133" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_cspline_1_1_element_1a08e8e2037fcca100f743c4f1f82ad6d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cspline&lt; X, Y &gt;::Element::Element</definition>
        <argsstring>(X _x, Y _a, Y _b, Y _c, Y _d)</argsstring>
        <name>Element</name>
        <qualifiedname>Cspline::Element::Element</qualifiedname>
        <param>
          <type>X</type>
          <declname>_x</declname>
        </param>
        <param>
          <type>Y</type>
          <declname>_a</declname>
        </param>
        <param>
          <type>Y</type>
          <declname>_b</declname>
        </param>
        <param>
          <type>Y</type>
          <declname>_c</declname>
        </param>
        <param>
          <type>Y</type>
          <declname>_d</declname>
        </param>
        <briefdescription>
<para>The ordinate and the cubic coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Cspline.H" line="137" column="5" bodyfile="/home/weinberg/Projects/EXP/include/Cspline.H" bodystart="137" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_cspline_1_1_element_1aa4d538b676dd7cea1822f8c2ff988b46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Y</type>
        <definition>Y Cspline&lt; X, Y &gt;::Element::eval</definition>
        <argsstring>(const X &amp;xx) const</argsstring>
        <name>eval</name>
        <qualifiedname>Cspline::Element::eval</qualifiedname>
        <param>
          <type>const X &amp;</type>
          <declname>xx</declname>
        </param>
        <briefdescription>
<para>Evaluate the fit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Cspline.H" line="141" column="7" bodyfile="/home/weinberg/Projects/EXP/include/Cspline.H" bodystart="141" bodyend="144"/>
        <references refid="class_cspline_1_1_element_1ab8eee4f586ed59e3ec087886a51c3962" compoundref="_cspline_8_h" startline="130">Cspline&lt; X, Y &gt;::Element::a</references>
        <references refid="class_cspline_1_1_element_1ae271037d9bb62ce91a78940c36300209" compoundref="_cspline_8_h" startline="130">Cspline&lt; X, Y &gt;::Element::b</references>
        <references refid="class_cspline_1_1_element_1a56d0aaef4e3e6f669bf3d564fe1f5ef3" compoundref="_cspline_8_h" startline="130">Cspline&lt; X, Y &gt;::Element::c</references>
        <references refid="class_cspline_1_1_element_1a94f1f08e4f9def88aac03c33566d14a7" compoundref="_cspline_8_h" startline="130">Cspline&lt; X, Y &gt;::Element::d</references>
        <references refid="class_cspline_1_1_element_1a619eec3164dd8e6790a6b9cf3de94ced" compoundref="_cspline_8_h" startline="127">Cspline&lt; X, Y &gt;::Element::x</references>
      </memberdef>
      <memberdef kind="function" id="class_cspline_1_1_element_1ad543a799407dc088f23fc39d0dd50cc8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Cspline&lt; X, Y &gt;::Element::operator&lt;</definition>
        <argsstring>(const Element &amp;e) const</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>Cspline::Element::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="class_cspline_1_1_element" kindref="compound">Element</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Sorting operators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Cspline.H" line="148" column="5" bodyfile="/home/weinberg/Projects/EXP/include/Cspline.H" bodystart="148" bodyend="150"/>
        <references refid="class_cspline_1_1_element_1a619eec3164dd8e6790a6b9cf3de94ced" compoundref="_cspline_8_h" startline="127">Cspline&lt; X, Y &gt;::Element::x</references>
      </memberdef>
      <memberdef kind="function" id="class_cspline_1_1_element_1a163309bdd9e64c3eab1805a454691fd2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Cspline&lt; X, Y &gt;::Element::operator&lt;</definition>
        <argsstring>(const X &amp;xx) const</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>Cspline::Element::operator&lt;</qualifiedname>
        <param>
          <type>const X &amp;</type>
          <declname>xx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Cspline.H" line="151" column="5" bodyfile="/home/weinberg/Projects/EXP/include/Cspline.H" bodystart="151" bodyend="153"/>
        <references refid="class_cspline_1_1_element_1a619eec3164dd8e6790a6b9cf3de94ced" compoundref="_cspline_8_h" startline="127">Cspline&lt; X, Y &gt;::Element::x</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A cubic spline fit for an interval. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/weinberg/Projects/EXP/include/Cspline.H" line="123" column="3" bodyfile="/home/weinberg/Projects/EXP/include/Cspline.H" bodystart="124" bodyend="156"/>
    <listofallmembers>
      <member refid="class_cspline_1_1_element_1ab8eee4f586ed59e3ec087886a51c3962" prot="public" virt="non-virtual"><scope>Cspline::Element</scope><name>a</name></member>
      <member refid="class_cspline_1_1_element_1ae271037d9bb62ce91a78940c36300209" prot="public" virt="non-virtual"><scope>Cspline::Element</scope><name>b</name></member>
      <member refid="class_cspline_1_1_element_1a56d0aaef4e3e6f669bf3d564fe1f5ef3" prot="public" virt="non-virtual"><scope>Cspline::Element</scope><name>c</name></member>
      <member refid="class_cspline_1_1_element_1a94f1f08e4f9def88aac03c33566d14a7" prot="public" virt="non-virtual"><scope>Cspline::Element</scope><name>d</name></member>
      <member refid="class_cspline_1_1_element_1a1a0231e6a7d5d8ead2f6c79a866137f1" prot="public" virt="non-virtual"><scope>Cspline::Element</scope><name>Element</name></member>
      <member refid="class_cspline_1_1_element_1a08e8e2037fcca100f743c4f1f82ad6d9" prot="public" virt="non-virtual"><scope>Cspline::Element</scope><name>Element</name></member>
      <member refid="class_cspline_1_1_element_1aa4d538b676dd7cea1822f8c2ff988b46" prot="public" virt="non-virtual"><scope>Cspline::Element</scope><name>eval</name></member>
      <member refid="class_cspline_1_1_element_1ad543a799407dc088f23fc39d0dd50cc8" prot="public" virt="non-virtual"><scope>Cspline::Element</scope><name>operator&lt;</name></member>
      <member refid="class_cspline_1_1_element_1a163309bdd9e64c3eab1805a454691fd2" prot="public" virt="non-virtual"><scope>Cspline::Element</scope><name>operator&lt;</name></member>
      <member refid="class_cspline_1_1_element_1a619eec3164dd8e6790a6b9cf3de94ced" prot="public" virt="non-virtual"><scope>Cspline::Element</scope><name>x</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
