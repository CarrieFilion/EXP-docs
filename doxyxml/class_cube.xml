<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_cube" kind="class" language="C++" prot="public">
    <compoundname>Cube</compoundname>
    <basecompoundref refid="class_pot_accel" prot="public" virt="non-virtual">PotAccel</basecompoundref>
    <includes refid="_cube_8_h" local="no">Cube.H</includes>
    <innerclass refid="class_cube_1_1exe_timer" prot="private">Cube::exeTimer</innerclass>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_cube_1ad68c65cb1f4f5e3abcfa61e5b320ebae" prot="private" static="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 3 &gt;</type>
        <definition>using Cube::coefType =  Eigen::Tensor&lt;std::complex&lt;double&gt;, 3&gt;</definition>
        <argsstring></argsstring>
        <name>coefType</name>
        <qualifiedname>Cube::coefType</qualifiedname>
        <briefdescription>
<para>Coefficients are a 3-tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="28" column="3" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_cube_1ab742d871c9099dec61532a45fca95c76" prot="private" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_cube_1ad68c65cb1f4f5e3abcfa61e5b320ebae" kindref="member">coefType</ref> &gt;</type>
        <definition>using Cube::coefTypePtr =  std::shared_ptr&lt;coefType&gt;</definition>
        <argsstring></argsstring>
        <name>coefTypePtr</name>
        <qualifiedname>Cube::coefTypePtr</qualifiedname>
        <briefdescription>
<para>Interpolation arrays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="162" column="3" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="162" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_cube_1a4cecb0c2cf57731c90a85233bcc55501" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Cube::byPlanes</definition>
        <argsstring></argsstring>
        <name>byPlanes</name>
        <qualifiedname>Cube::byPlanes</qualifiedname>
        <briefdescription>
<para>Plane method (default: true) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="93" column="8" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1aa8c977869ddc1963a8256a08e7969541" prot="private" static="no" mutable="no">
        <type>CoefClasses::CubeCoefs</type>
        <definition>CoefClasses::CubeCoefs Cube::cubeCoefs</definition>
        <argsstring></argsstring>
        <name>cubeCoefs</name>
        <qualifiedname>Cube::cubeCoefs</qualifiedname>
        <briefdescription>
<para>Coefficient container instance for writing HDF5. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="202" column="26" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1a1952c8a09a2ce4e3c0a576705e52330c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Cube::cuMethod</definition>
        <argsstring></argsstring>
        <name>cuMethod</name>
        <qualifiedname>Cube::cuMethod</qualifiedname>
        <briefdescription>
<para>Cuda batch method (string, default: planes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="96" column="15" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1ac6bf2eb17382cbb151e7e4ffa7bcccd2" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Cube::dfac</definition>
        <argsstring></argsstring>
        <name>dfac</name>
        <qualifiedname>Cube::dfac</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="38" column="11" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1aa78d482c8b6a1fe126851f734541d977" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="class_cube_1ad68c65cb1f4f5e3abcfa61e5b320ebae" kindref="member">coefType</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt;coefType&gt; &gt; Cube::differ1</definition>
        <argsstring></argsstring>
        <name>differ1</name>
        <qualifiedname>Cube::differ1</qualifiedname>
        <briefdescription>
<para>For updating levels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="156" column="15" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1adb1e1b037b2b5209bfef71b5949aba98" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_cube_1ad68c65cb1f4f5e3abcfa61e5b320ebae" kindref="member">coefType</ref> &gt;</type>
        <definition>std::vector&lt;coefType&gt; Cube::expcoef</definition>
        <argsstring></argsstring>
        <name>expcoef</name>
        <qualifiedname>Cube::expcoef</qualifiedname>
        <briefdescription>
<para>Current coefficient tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="31" column="15" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1a998df89b8e78ad060a8d8db6ca14436a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_cube_1ab742d871c9099dec61532a45fca95c76" kindref="member">coefTypePtr</ref> &gt;</type>
        <definition>std::vector&lt;coefTypePtr&gt; Cube::expcoefL</definition>
        <argsstring></argsstring>
        <name>expcoefL</name>
        <qualifiedname>Cube::expcoefL</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="164" column="15" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1a400e9540de9a77489f86adf61089a726" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_cube_1ab742d871c9099dec61532a45fca95c76" kindref="member">coefTypePtr</ref> &gt;</type>
        <definition>std::vector&lt;coefTypePtr&gt; Cube::expcoefN</definition>
        <argsstring></argsstring>
        <name>expcoefN</name>
        <qualifiedname>Cube::expcoefN</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="163" column="15" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1a170ce6cbd756a9102cb759cb50b30024" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_cube_1ad68c65cb1f4f5e3abcfa61e5b320ebae" kindref="member">coefType</ref> &gt;</type>
        <definition>std::vector&lt;coefType&gt; Cube::expcoefP</definition>
        <argsstring></argsstring>
        <name>expcoefP</name>
        <qualifiedname>Cube::expcoefP</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="31" column="23" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1a2cd78e3d60cfc5cedd8586dacd8a1705" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Cube::imx</definition>
        <argsstring></argsstring>
        <name>imx</name>
        <qualifiedname>Cube::imx</qualifiedname>
        <briefdescription>
<para>Variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="35" column="7" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1a436392598e00a0ebadfc47c7b5db0af2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Cube::imy</definition>
        <argsstring></argsstring>
        <name>imy</name>
        <qualifiedname>Cube::imy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="35" column="11" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1a3c009587307aec93ec80154f80c115db" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Cube::imz</definition>
        <argsstring></argsstring>
        <name>imz</name>
        <qualifiedname>Cube::imz</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="35" column="15" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1a1c8a7a7aeb99d41dc2e5142534ba5196" prot="private" static="no" mutable="no">
        <type>std::complex&lt; double &gt;</type>
        <definition>std::complex&lt;double&gt; Cube::kfac</definition>
        <argsstring></argsstring>
        <name>kfac</name>
        <qualifiedname>Cube::kfac</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="37" column="16" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1a8bb5e673c54cdd4e06f03e5ade58834b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Cube::nmaxx</definition>
        <argsstring></argsstring>
        <name>nmaxx</name>
        <qualifiedname>Cube::nmaxx</qualifiedname>
        <briefdescription>
<para>Minimum wave numbers in each dimesion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="184" column="7" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1aa0e2b466612e4eb7cc4ee1d7d13f03cf" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Cube::nmaxy</definition>
        <argsstring></argsstring>
        <name>nmaxy</name>
        <qualifiedname>Cube::nmaxy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="184" column="13" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1a093c4f102752c66a4d6324e7174ddfa7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Cube::nmaxz</definition>
        <argsstring></argsstring>
        <name>nmaxz</name>
        <qualifiedname>Cube::nmaxz</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="184" column="19" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1aba2bbc797f9ff22d84b717020d2d453e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Cube::nminx</definition>
        <argsstring></argsstring>
        <name>nminx</name>
        <qualifiedname>Cube::nminx</qualifiedname>
        <briefdescription>
<para>Maximum wave numbers in each dimesion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="189" column="7" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1ae65b9fa67c184819f59b2cbfd573d6da" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Cube::nminy</definition>
        <argsstring></argsstring>
        <name>nminy</name>
        <qualifiedname>Cube::nminy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="189" column="13" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1afaac06a8562dc7ebca3cf369ec78aa29" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Cube::nminz</definition>
        <argsstring></argsstring>
        <name>nminz</name>
        <qualifiedname>Cube::nminz</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="189" column="19" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1a068cd3dac6557341ed528b0c7420b314" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Cube::osize</definition>
        <argsstring></argsstring>
        <name>osize</name>
        <qualifiedname>Cube::osize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="35" column="19" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1a18041085eb33036c41e1fe0e11bd940a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::complex&lt; double &gt; &gt;</type>
        <definition>std::vector&lt; std::complex&lt;double&gt; &gt; Cube::pack</definition>
        <argsstring></argsstring>
        <name>pack</name>
        <qualifiedname>Cube::pack</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="157" column="15" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1a26c844f3663104af25a4489fc85da63d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::complex&lt; double &gt; &gt;</type>
        <definition>std::vector&lt; std::complex&lt;double&gt; &gt; Cube::unpack</definition>
        <argsstring></argsstring>
        <name>unpack</name>
        <qualifiedname>Cube::unpack</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="157" column="20" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1a0fa11ac46e1eb6cdb946d26dd8617cca" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Cube::use0</definition>
        <argsstring></argsstring>
        <name>use0</name>
        <qualifiedname>Cube::use0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="36" column="12" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cube_1a81c93879fae311863874fc1cb419d43f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Cube::use1</definition>
        <argsstring></argsstring>
        <name>use1</name>
        <qualifiedname>Cube::use1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="36" column="7" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="36" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_cube_1ad8775386b95dbf5ea4cb6995d69df1aa" prot="private" static="yes" mutable="no">
        <type>const std::set&lt; std::string &gt;</type>
        <definition>const std::set&lt;std::string&gt; Cube::valid_keys</definition>
        <argsstring></argsstring>
        <name>valid_keys</name>
        <qualifiedname>Cube::valid_keys</qualifiedname>
        <briefdescription>
<para>Valid keys for YAML configurations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="42" column="25" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="42" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_cube_1a2b54b44a2c8891108ccaf1cf456e1a1f" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Cube::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <qualifiedname>Cube::id</qualifiedname>
        <briefdescription>
<para>Id string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="223" column="15" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="223" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_cube_1a0a8bd4c474818c42bb797035d86ac553" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Cube::compute_multistep_coefficients</definition>
        <argsstring>()</argsstring>
        <name>compute_multistep_coefficients</name>
        <qualifiedname>Cube::compute_multistep_coefficients</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extrapolate and sum coefficents per multistep level to get a complete set of coefficients for force evaluation at an intermediate time step </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="152" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_cube_1ae2f7fd3450813c7533430a43a016cdf5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Cube::determine_acceleration_and_potential</definition>
        <argsstring>()</argsstring>
        <name>determine_acceleration_and_potential</name>
        <qualifiedname>Cube::determine_acceleration_and_potential</qualifiedname>
        <briefdescription>
<para>Do the work. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="199" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_cube_1aa2a95971c28f6143b7521bd0d2087662" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * Cube::determine_acceleration_and_potential_thread</definition>
        <argsstring>(void *arg)</argsstring>
        <name>determine_acceleration_and_potential_thread</name>
        <qualifiedname>Cube::determine_acceleration_and_potential_thread</qualifiedname>
        <reimplements refid="class_pot_accel_1a45b09387fd7083e15a11522454f4c4b3">determine_acceleration_and_potential_thread</reimplements>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Multithreading implementation of the force computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="195" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_cube_1a3defa1a8f6b8fe67fa353632c0c9635a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * Cube::determine_coefficients_thread</definition>
        <argsstring>(void *arg)</argsstring>
        <name>determine_coefficients_thread</name>
        <qualifiedname>Cube::determine_coefficients_thread</qualifiedname>
        <reimplements refid="class_pot_accel_1a28536cd936e5c94562d5bccff2470d49">determine_coefficients_thread</reimplements>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Threading. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="194" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_cube_1a4889dfcc0b07a325577d3a632ab167d3" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Cube::initialize</definition>
        <argsstring>(void)</argsstring>
        <name>initialize</name>
        <qualifiedname>Cube::initialize</qualifiedname>
        <reimplements refid="class_pot_accel_1ada60d03bc82b8740fc7275d4c3f2149d">initialize</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Parameter and storage initialization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="179" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_cube_1a03b09ee07d08268915b8b451b92da758" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Cube::multistep_update</definition>
        <argsstring>(int cur, int next, Component *c, int i, int id)</argsstring>
        <name>multistep_update</name>
        <qualifiedname>Cube::multistep_update</qualifiedname>
        <reimplements refid="class_pot_accel_1aa6c3661783144fd643ebaf1a2fa6278a">multistep_update</reimplements>
        <param>
          <type>int</type>
          <declname>cur</declname>
        </param>
        <param>
          <type>int</type>
          <declname>next</declname>
        </param>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Implementation of level shifts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="173" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_cube_1a53955c4fa1ad731cc63b614db11b51ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Cube::multistep_update_begin</definition>
        <argsstring>()</argsstring>
        <name>multistep_update_begin</name>
        <qualifiedname>Cube::multistep_update_begin</qualifiedname>
        <reimplements refid="class_pot_accel_1a0e720b605350a9fb4e0d24dae2a1c381">multistep_update_begin</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the multi time step coefficient table when moving particle <computeroutput>i</computeroutput> from level <computeroutput>cur</computeroutput> to level <computeroutput>next</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="172" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_cube_1ae914dcb2011835bb35b556b614c1aa8c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Cube::multistep_update_finish</definition>
        <argsstring>()</argsstring>
        <name>multistep_update_finish</name>
        <qualifiedname>Cube::multistep_update_finish</qualifiedname>
        <reimplements refid="class_pot_accel_1acb0c9d88466949f2bf84da42439f2a1e">multistep_update_finish</reimplements>
        <briefdescription>
<para>Execute to finish level shifts for particles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="174" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_cube_1a0006a93a3ebb09ca12697b2ad22342df" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cube::swap_coefs</definition>
        <argsstring>(std::vector&lt; coefType &gt; &amp;from, std::vector&lt; coefType &gt; &amp;to)</argsstring>
        <name>swap_coefs</name>
        <qualifiedname>Cube::swap_coefs</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="class_cube_1ad68c65cb1f4f5e3abcfa61e5b320ebae" kindref="member">coefType</ref> &gt; &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_cube_1ad68c65cb1f4f5e3abcfa61e5b320ebae" kindref="member">coefType</ref> &gt; &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para><ref refid="class_swap" kindref="compound">Swap</ref> coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="205" column="8" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="205" bodyend="217"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_cube_1aaa5cf11dc360df81d3ee631168853ade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Cube::Cube</definition>
        <argsstring>(Component *c0, const YAML::Node &amp;conf)</argsstring>
        <name>Cube</name>
        <qualifiedname>Cube::Cube</qualifiedname>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c0</declname>
        </param>
        <param>
          <type>const YAML::Node &amp;</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="226" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_cube_1a6da6df3f255795b3e3765bc72af8ea76" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Cube::determine_coefficients</definition>
        <argsstring>(void)</argsstring>
        <name>determine_coefficients</name>
        <qualifiedname>Cube::determine_coefficients</qualifiedname>
        <reimplements refid="class_pot_accel_1a30dac3c15c2a7a67e9860e086cda27b8">determine_coefficients</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Compute the coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="232" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_cube_1ad41166930efa0c9005e1190ea95c98e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Cube::dump_coefs_h5</definition>
        <argsstring>(const std::string &amp;file)</argsstring>
        <name>dump_coefs_h5</name>
        <qualifiedname>Cube::dump_coefs_h5</qualifiedname>
        <reimplements refid="class_pot_accel_1ac53a3ab4bdfa2be33fbe4286b939230c">dump_coefs_h5</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Coefficient output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="238" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_cube_1a8477225cbb41bff514d27192542d7155" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Cube::get_acceleration_and_potential</definition>
        <argsstring>(Component *)</argsstring>
        <name>get_acceleration_and_potential</name>
        <qualifiedname>Cube::get_acceleration_and_potential</qualifiedname>
        <reimplements refid="class_pot_accel_1ab78f20762031db204f636fc8e74ea986">get_acceleration_and_potential</reimplements>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
        </param>
        <briefdescription>
<para>Compute the force. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="235" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_cube_1a600d629a60344171d18ae77b3fb43912" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Cube::~Cube</definition>
        <argsstring>()</argsstring>
        <name>~Cube</name>
        <qualifiedname>Cube::~Cube</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="229" column="11"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Periodic cube basis. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Cube</label>
        <link refid="class_cube"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>PotAccel</label>
        <link refid="class_pot_accel"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>Component</label>
        <link refid="class_component"/>
        <childnode refid="4" relation="usage">
          <edgelabel>c0</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>force</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>orient</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>time_so_far</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Cube</label>
        <link refid="class_cube"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>EL3</label>
        <link refid="class_e_l3"/>
      </node>
      <node id="5">
        <label>Orient</label>
        <link refid="class_orient"/>
        <childnode refid="6" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>PotAccel</label>
        <link refid="class_pot_accel"/>
        <childnode refid="3" relation="usage">
          <edgelabel>td</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>cC</edgelabel>
          <edgelabel>component</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>Timer</label>
        <link refid="class_timer"/>
      </node>
      <node id="3">
        <label>thrd_pass_PotAccel</label>
        <link refid="structthrd__pass___pot_accel"/>
        <childnode refid="2" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/src/Cube.H" line="22" column="1" bodyfile="/home/weinberg/Projects/EXP/src/Cube.H" bodystart="23" bodyend="239"/>
    <listofallmembers>
      <member refid="class_pot_accel_1a6a637997f73ca85ce78d8c92eec7ad1b" prot="public" virt="non-virtual"><scope>Cube</scope><name>atol</name></member>
      <member refid="class_cube_1a4cecb0c2cf57731c90a85233bcc55501" prot="private" virt="non-virtual"><scope>Cube</scope><name>byPlanes</name></member>
      <member refid="class_pot_accel_1afa2cd3b0bf51e23d8bfc54aac73ef010" prot="protected" virt="non-virtual"><scope>Cube</scope><name>cC</name></member>
      <member refid="class_pot_accel_1a630b9cdcae4ed4915cc72179fe9821c6" prot="public" virt="non-virtual"><scope>Cube</scope><name>cc_lock</name></member>
      <member refid="class_pot_accel_1a944213bbf31fca1508ba817e392b9fc6" prot="public" virt="non-virtual"><scope>Cube</scope><name>ClearExternal</name></member>
      <member refid="class_pot_accel_1ac7ab5e578b5b2bbd29fe35738b03d771" prot="protected" virt="non-virtual"><scope>Cube</scope><name>coef_dump</name></member>
      <member refid="class_cube_1ad68c65cb1f4f5e3abcfa61e5b320ebae" prot="private" virt="non-virtual"><scope>Cube</scope><name>coefType</name></member>
      <member refid="class_cube_1ab742d871c9099dec61532a45fca95c76" prot="private" virt="non-virtual"><scope>Cube</scope><name>coefTypePtr</name></member>
      <member refid="class_pot_accel_1aa6d9bde455e08dc9fead4f152357cb15" prot="protected" virt="non-virtual"><scope>Cube</scope><name>component</name></member>
      <member refid="class_pot_accel_1a49e2936503ffdad1dd86d3f0c934d25a" prot="public" virt="non-virtual"><scope>Cube</scope><name>compute</name></member>
      <member refid="class_cube_1a0a8bd4c474818c42bb797035d86ac553" prot="private" virt="non-virtual"><scope>Cube</scope><name>compute_multistep_coefficients</name></member>
      <member refid="class_pot_accel_1ab682d4480d7d2946a7bef7f93ac0c6a0" prot="protected" virt="non-virtual"><scope>Cube</scope><name>conf</name></member>
      <member refid="class_cube_1aaa5cf11dc360df81d3ee631168853ade" prot="public" virt="non-virtual"><scope>Cube</scope><name>Cube</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda489785884cf0770efb348b919878bf23" prot="public" virt="non-virtual"><scope>Cube</scope><name>cube</name></member>
      <member refid="class_cube_1aa8c977869ddc1963a8256a08e7969541" prot="private" virt="non-virtual"><scope>Cube</scope><name>cubeCoefs</name></member>
      <member refid="class_pot_accel_1ac4def6f1c9318d8b49e62a4c9f2d6786" prot="protected" virt="non-virtual"><scope>Cube</scope><name>cuda_aware</name></member>
      <member refid="class_pot_accel_1a5029810ccad93845aab9919e005bafe0" prot="public" virt="non-virtual"><scope>Cube</scope><name>cudaAware</name></member>
      <member refid="class_cube_1a1952c8a09a2ce4e3c0a576705e52330c" prot="private" virt="non-virtual"><scope>Cube</scope><name>cuMethod</name></member>
      <member refid="class_pot_accel_1a823dbb4c07cab1541d7ee738c6baef99" prot="protected" virt="non-virtual"><scope>Cube</scope><name>current_keys</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fdac215da2d633c31e7278fb1a3dd6af268" prot="public" virt="non-virtual"><scope>Cube</scope><name>cylinder</name></member>
      <member refid="class_cube_1ae2f7fd3450813c7533430a43a016cdf5" prot="private" virt="non-virtual"><scope>Cube</scope><name>determine_acceleration_and_potential</name></member>
      <member refid="class_cube_1aa2a95971c28f6143b7521bd0d2087662" prot="private" virt="virtual"><scope>Cube</scope><name>determine_acceleration_and_potential_thread</name></member>
      <member refid="class_cube_1a6da6df3f255795b3e3765bc72af8ea76" prot="public" virt="virtual"><scope>Cube</scope><name>determine_coefficients</name></member>
      <member refid="class_pot_accel_1a3a9722c6b123ba2a0dd3671dec6cf724" prot="public" virt="virtual" ambiguityscope="PotAccel::"><scope>Cube</scope><name>determine_coefficients</name></member>
      <member refid="class_cube_1a3defa1a8f6b8fe67fa353632c0c9635a" prot="private" virt="virtual"><scope>Cube</scope><name>determine_coefficients_thread</name></member>
      <member refid="class_cube_1ac6bf2eb17382cbb151e7e4ffa7bcccd2" prot="private" virt="non-virtual"><scope>Cube</scope><name>dfac</name></member>
      <member refid="class_cube_1aa78d482c8b6a1fe126851f734541d977" prot="private" virt="non-virtual"><scope>Cube</scope><name>differ1</name></member>
      <member refid="class_pot_accel_1a6a9ec23d29b553c1625bd8e88fe7692d" prot="public" virt="non-virtual"><scope>Cube</scope><name>dof</name></member>
      <member refid="class_pot_accel_1a10f4dd971b1a056bb6dacf01f2e2bcbf" prot="public" virt="virtual"><scope>Cube</scope><name>dump_coefs</name></member>
      <member refid="class_cube_1ad41166930efa0c9005e1190ea95c98e0" prot="public" virt="virtual"><scope>Cube</scope><name>dump_coefs_h5</name></member>
      <member refid="class_pot_accel_1abee9651463af53460b622250d311329e" prot="public" virt="non-virtual"><scope>Cube</scope><name>exp_thread_fork</name></member>
      <member refid="class_cube_1adb1e1b037b2b5209bfef71b5949aba98" prot="private" virt="non-virtual"><scope>Cube</scope><name>expcoef</name></member>
      <member refid="class_cube_1a998df89b8e78ad060a8d8db6ca14436a" prot="private" virt="non-virtual"><scope>Cube</scope><name>expcoefL</name></member>
      <member refid="class_cube_1a400e9540de9a77489f86adf61089a726" prot="private" virt="non-virtual"><scope>Cube</scope><name>expcoefN</name></member>
      <member refid="class_cube_1a170ce6cbd756a9102cb759cb50b30024" prot="private" virt="non-virtual"><scope>Cube</scope><name>expcoefP</name></member>
      <member refid="class_pot_accel_1adb6ef0bdae7d3520ca1f9fd8a6d648ea" prot="public" virt="non-virtual"><scope>Cube</scope><name>geometry</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fd" prot="public" virt="non-virtual"><scope>Cube</scope><name>Geometry</name></member>
      <member refid="class_pot_accel_1ade38f6ecdf80f80cde847d463b14909b" prot="public" virt="non-virtual"><scope>Cube</scope><name>geoname</name></member>
      <member refid="class_cube_1a8477225cbb41bff514d27192542d7155" prot="public" virt="virtual"><scope>Cube</scope><name>get_acceleration_and_potential</name></member>
      <member refid="class_pot_accel_1a0998c361bca277b3bba95f59acaba203" prot="public" virt="virtual"><scope>Cube</scope><name>getScale</name></member>
      <member refid="class_pot_accel_1a4a812594dff363f07bf57d69a60e4a13" prot="public" virt="non-virtual"><scope>Cube</scope><name>HaveCoefDump</name></member>
      <member refid="class_cube_1a2b54b44a2c8891108ccaf1cf456e1a1f" prot="public" virt="non-virtual"><scope>Cube</scope><name>id</name></member>
      <member refid="class_cube_1a2cd78e3d60cfc5cedd8586dacd8a1705" prot="private" virt="non-virtual"><scope>Cube</scope><name>imx</name></member>
      <member refid="class_cube_1a436392598e00a0ebadfc47c7b5db0af2" prot="private" virt="non-virtual"><scope>Cube</scope><name>imy</name></member>
      <member refid="class_cube_1a3c009587307aec93ec80154f80c115db" prot="private" virt="non-virtual"><scope>Cube</scope><name>imz</name></member>
      <member refid="class_cube_1a4889dfcc0b07a325577d3a632ab167d3" prot="private" virt="virtual"><scope>Cube</scope><name>initialize</name></member>
      <member refid="class_cube_1a1c8a7a7aeb99d41dc2e5142534ba5196" prot="private" virt="non-virtual"><scope>Cube</scope><name>kfac</name></member>
      <member refid="class_pot_accel_1a706b04f03c8beb4369dd125406770116" prot="public" virt="non-virtual"><scope>Cube</scope><name>kill_mutex</name></member>
      <member refid="class_pot_accel_1a65fa890eea987e18d552825ab074939b" prot="public" virt="non-virtual"><scope>Cube</scope><name>make_mutex</name></member>
      <member refid="class_pot_accel_1ad9ff6c9f431ad2f8ad2e5895c222ede8" prot="protected" virt="non-virtual"><scope>Cube</scope><name>mlevel</name></member>
      <member refid="class_pot_accel_1a2ba58ca0219d337b13c87697353d4121" prot="public" virt="virtual"><scope>Cube</scope><name>multistep_debug</name></member>
      <member refid="class_pot_accel_1aaada1d8e8970e63332269b0d00aed97f" prot="public" virt="virtual"><scope>Cube</scope><name>multistep_reset</name></member>
      <member refid="class_cube_1a03b09ee07d08268915b8b451b92da758" prot="private" virt="virtual"><scope>Cube</scope><name>multistep_update</name></member>
      <member refid="class_cube_1a53955c4fa1ad731cc63b614db11b51ec" prot="private" virt="virtual"><scope>Cube</scope><name>multistep_update_begin</name></member>
      <member refid="class_cube_1ae914dcb2011835bb35b556b614c1aa8c" prot="private" virt="virtual"><scope>Cube</scope><name>multistep_update_finish</name></member>
      <member refid="class_pot_accel_1a73976f361ed7abf13001835bfcdee639" prot="protected" virt="non-virtual"><scope>Cube</scope><name>nbodies</name></member>
      <member refid="class_cube_1a8bb5e673c54cdd4e06f03e5ade58834b" prot="private" virt="non-virtual"><scope>Cube</scope><name>nmaxx</name></member>
      <member refid="class_cube_1aa0e2b466612e4eb7cc4ee1d7d13f03cf" prot="private" virt="non-virtual"><scope>Cube</scope><name>nmaxy</name></member>
      <member refid="class_cube_1a093c4f102752c66a4d6324e7174ddfa7" prot="private" virt="non-virtual"><scope>Cube</scope><name>nmaxz</name></member>
      <member refid="class_cube_1aba2bbc797f9ff22d84b717020d2d453e" prot="private" virt="non-virtual"><scope>Cube</scope><name>nminx</name></member>
      <member refid="class_cube_1ae65b9fa67c184819f59b2cbfd573d6da" prot="private" virt="non-virtual"><scope>Cube</scope><name>nminy</name></member>
      <member refid="class_cube_1afaac06a8562dc7ebca3cf369ec78aa29" prot="private" virt="non-virtual"><scope>Cube</scope><name>nminz</name></member>
      <member refid="class_pot_accel_1a4f2099b1b705731b909e63c90ea59f04" prot="public" virt="non-virtual"><scope>Cube</scope><name>NoCoefs</name></member>
      <member refid="class_cube_1a068cd3dac6557341ed528b0c7420b314" prot="private" virt="non-virtual"><scope>Cube</scope><name>osize</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda7c49f38007dad33fb1e48fdebdd2f8c1" prot="public" virt="non-virtual"><scope>Cube</scope><name>other</name></member>
      <member refid="class_cube_1a18041085eb33036c41e1fe0e11bd940a" prot="private" virt="non-virtual"><scope>Cube</scope><name>pack</name></member>
      <member refid="class_pot_accel_1a74b41dd5c2f102dd3184ac53b6172462" prot="protected" virt="non-virtual"><scope>Cube</scope><name>play_back</name></member>
      <member refid="class_pot_accel_1aea1c756cd9616a1daf73541780b45798" prot="protected" virt="non-virtual"><scope>Cube</scope><name>play_cnew</name></member>
      <member refid="class_pot_accel_1a801fdbd01e551033e79f274e4a7c1d1e" prot="public" virt="non-virtual"><scope>Cube</scope><name>PotAccel</name></member>
      <member refid="class_pot_accel_1a5e257d38dbf5c3d9630906a96abf6915" prot="public" virt="non-virtual"><scope>Cube</scope><name>print_timings</name></member>
      <member refid="class_pot_accel_1a37a3c348c0febbf70ff94949071c3beb" prot="public" virt="non-virtual"><scope>Cube</scope><name>print_timings</name></member>
      <member refid="class_pot_accel_1a8aea0d1740bf7432e1193dda7121a8bb" prot="public" virt="virtual"><scope>Cube</scope><name>RegisterComponent</name></member>
      <member refid="class_pot_accel_1added387424e4e4d23bac8500822e4324" prot="protected" virt="non-virtual"><scope>Cube</scope><name>scale</name></member>
      <member refid="class_pot_accel_1ac65dfca720c42ea4a773024d1eaf977f" prot="public" virt="virtual"><scope>Cube</scope><name>set_multistep_level</name></member>
      <member refid="class_pot_accel_1a6dc784a141afdec5f4daad63eba20b81" prot="public" virt="non-virtual"><scope>Cube</scope><name>SetExternal</name></member>
      <member refid="class_pot_accel_1ad528efbd280a21543addaf7747e9089a" prot="public" virt="virtual"><scope>Cube</scope><name>setScale</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda0a1acd8c0d6e745fb0ae3e33e458a9b8" prot="public" virt="non-virtual"><scope>Cube</scope><name>slab</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda996ce4577548b6da6b1330a78b1c6f6a" prot="public" virt="non-virtual"><scope>Cube</scope><name>sphere</name></member>
      <member refid="class_cube_1a0006a93a3ebb09ca12697b2ad22342df" prot="private" virt="non-virtual"><scope>Cube</scope><name>swap_coefs</name></member>
      <member refid="class_pot_accel_1aff158a74d7328a080ed619c1456836f5" prot="private" virt="non-virtual"><scope>Cube</scope><name>t</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda1792d3c00a41ee78957c83611fd368a2" prot="public" virt="non-virtual"><scope>Cube</scope><name>table</name></member>
      <member refid="class_pot_accel_1a125d7343a34d292a3e4a48a5d984cac4" prot="private" virt="non-virtual"><scope>Cube</scope><name>td</name></member>
      <member refid="class_pot_accel_1a86d0d012a44e2eb7c3e385d852a5fdde" prot="public" virt="non-virtual"><scope>Cube</scope><name>thread_timing_beg</name></member>
      <member refid="class_pot_accel_1a76c805cd8d0d134d37929eeb48115b33" prot="public" virt="non-virtual"><scope>Cube</scope><name>thread_timing_end</name></member>
      <member refid="class_pot_accel_1a4315e73a641c54eefc548b7d14cb06b6" prot="protected" virt="non-virtual"><scope>Cube</scope><name>timer_list</name></member>
      <member refid="class_pot_accel_1aabce5ff868883c6191b8b7f8f6281c04" prot="public" virt="non-virtual"><scope>Cube</scope><name>TList</name></member>
      <member refid="class_pot_accel_1a0355cfe43cdde5237f7be234e94de64b" prot="public" virt="non-virtual"><scope>Cube</scope><name>unmatched</name></member>
      <member refid="class_cube_1a26c844f3663104af25a4489fc85da63d" prot="private" virt="non-virtual"><scope>Cube</scope><name>unpack</name></member>
      <member refid="class_pot_accel_1acd32c6464b705469911df718114187b9" prot="public" virt="non-virtual"><scope>Cube</scope><name>use</name></member>
      <member refid="class_cube_1a0fa11ac46e1eb6cdb946d26dd8617cca" prot="private" virt="non-virtual"><scope>Cube</scope><name>use0</name></member>
      <member refid="class_cube_1a81c93879fae311863874fc1cb419d43f" prot="private" virt="non-virtual"><scope>Cube</scope><name>use1</name></member>
      <member refid="class_pot_accel_1a59a4a86ea8d2b3a9a5d420ef7e712697" prot="protected" virt="non-virtual"><scope>Cube</scope><name>use_external</name></member>
      <member refid="class_pot_accel_1ae2e0dbf849707704a3d42a1fa91ce060" prot="public" virt="non-virtual"><scope>Cube</scope><name>Used</name></member>
      <member refid="class_pot_accel_1a8fe5beef77e790f0d7bf6f455f5bf1d3" prot="protected" virt="non-virtual"><scope>Cube</scope><name>used</name></member>
      <member refid="class_cube_1ad8775386b95dbf5ea4cb6995d69df1aa" prot="private" virt="non-virtual"><scope>Cube</scope><name>valid_keys</name></member>
      <member refid="class_cube_1a600d629a60344171d18ae77b3fb43912" prot="public" virt="virtual"><scope>Cube</scope><name>~Cube</name></member>
      <member refid="class_pot_accel_1adcc326688bb152249f81e88d6edfde62" prot="public" virt="virtual"><scope>Cube</scope><name>~PotAccel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
