<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_disk2d" kind="class" language="C++" prot="public">
    <compoundname>Disk2d</compoundname>
    <includes refid="_disk2d_8_h" local="no">Disk2d.H</includes>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_disk2d_1a3f3115795ca60bfb3407e956b39b9f3f" prot="private" static="yes" mutable="no">
        <type>std::set&lt; std::string &gt;</type>
        <definition>std::set&lt;std::string&gt; Disk2d::valid_keys</definition>
        <argsstring></argsstring>
        <name>valid_keys</name>
        <qualifiedname>Disk2d::valid_keys</qualifiedname>
        <briefdescription>
<para>Valid key set for parameter name checking. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="89" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="89" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_disk2d_1afae3f8327240c245c16c6f1f13bd0d64" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Disk2d::accum_setup</definition>
        <argsstring></argsstring>
        <name>accum_setup</name>
        <qualifiedname>Disk2d::accum_setup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="132" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a5f48168e084ba90ab34d04ec8739d2c2" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Disk2d::acyltbl</definition>
        <argsstring></argsstring>
        <name>acyltbl</name>
        <qualifiedname>Disk2d::acyltbl</qualifiedname>
        <briefdescription>
<para>Parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="119" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a1136d383ae80114753df01fe3d4d23c7" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Disk2d::biorth</definition>
        <argsstring></argsstring>
        <name>biorth</name>
        <qualifiedname>Disk2d::biorth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="125" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a38da7932c9af589c04098894d8a61e21" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Disk2d::coefs_made</definition>
        <argsstring></argsstring>
        <name>coefs_made</name>
        <qualifiedname>Disk2d::coefs_made</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="132" column="22" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1ad8d664fee5f533ca072b01447f29912f" prot="private" static="no" mutable="no">
        <type>YAML::Node</type>
        <definition>YAML::Node Disk2d::conf</definition>
        <argsstring></argsstring>
        <name>conf</name>
        <qualifiedname>Disk2d::conf</qualifiedname>
        <briefdescription>
<para>Config db. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="92" column="14" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1ac6fc5edb2d4538837b380556ec52fab1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Disk2d::knots</definition>
        <argsstring></argsstring>
        <name>knots</name>
        <qualifiedname>Disk2d::knots</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="123" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a6eef49d2011b29946adbeea0195365cf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Disk2d::logr</definition>
        <argsstring></argsstring>
        <name>logr</name>
        <qualifiedname>Disk2d::logr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="126" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a1aef79044d348df479c7e57606209375" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Disk2d::mmax</definition>
        <argsstring></argsstring>
        <name>mmax</name>
        <qualifiedname>Disk2d::mmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="121" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a56e8d381a9324b51a3ba29529e6056c8" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Disk2d::model</definition>
        <argsstring></argsstring>
        <name>model</name>
        <qualifiedname>Disk2d::model</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="124" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a76e3d25513734b03ad6fef90bb9e9e65" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Disk2d::nmax</definition>
        <argsstring></argsstring>
        <name>nmax</name>
        <qualifiedname>Disk2d::nmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="122" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a38da5855bfc8d38751d16631780512bc" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Disk2d::nthrds</definition>
        <argsstring></argsstring>
        <name>nthrds</name>
        <qualifiedname>Disk2d::nthrds</qualifiedname>
        <briefdescription>
<para>Internal state variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="131" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a4aa8d72e39f514b9706db3cbca513771" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Disk2d::numr</definition>
        <argsstring></argsstring>
        <name>numr</name>
        <qualifiedname>Disk2d::numr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="120" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a0c5ce15858c099820ce785ed3d4c5bd9" prot="private" static="no" mutable="no">
        <type><ref refid="_disk2d_8_h_1a44ac299dfbdd6e45965acbe30c201240" kindref="member">CylPtr</ref></type>
        <definition>CylPtr Disk2d::ortho</definition>
        <argsstring></argsstring>
        <name>ortho</name>
        <qualifiedname>Disk2d::ortho</qualifiedname>
        <briefdescription>
<para><ref refid="class_basis" kindref="compound">Basis</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="95" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="95" bodyend="-1"/>
        <referencedby refid="class_disk2d_1a6fe6eb51569ea9e92bcbbb15d3638baf" compoundref="_disk2d_8_h" startline="138" endline="139">get_pot</referencedby>
        <referencedby refid="class_disk2d_1aff75021afb085126215aabd3221fc1d2" compoundref="_disk2d_8_h" startline="108" endline="108">getRtable</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1aa0fc03cbff8a8a12d23562d5d933569c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Disk2d::rcylmax</definition>
        <argsstring></argsstring>
        <name>rcylmax</name>
        <qualifiedname>Disk2d::rcylmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="119" column="32" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a4cfb31d57dcf2d6a4b0f396239049fb8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Disk2d::rcylmin</definition>
        <argsstring></argsstring>
        <name>rcylmin</name>
        <qualifiedname>Disk2d::rcylmin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="119" column="24" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a2deb54317f548f10d593884253e434ae" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Disk2d::scale</definition>
        <argsstring></argsstring>
        <name>scale</name>
        <qualifiedname>Disk2d::scale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="119" column="18" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="119" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_disk2d_1ae3d47547afc0882b2eb5b38172bf26ee" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Disk2d::cylmass</definition>
        <argsstring></argsstring>
        <name>cylmass</name>
        <qualifiedname>Disk2d::cylmass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="155" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a5cf1b818c5f118099de9fb3c17e025f7" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Disk2d::cylmass1</definition>
        <argsstring></argsstring>
        <name>cylmass1</name>
        <qualifiedname>Disk2d::cylmass1</qualifiedname>
        <briefdescription>
<para>Mass tally. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="154" column="15" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1acf20d580cbe31b543a663a1f1530b323" prot="protected" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Disk2d::dend</definition>
        <argsstring></argsstring>
        <name>dend</name>
        <qualifiedname>Disk2d::dend</qualifiedname>
        <briefdescription>
<para>Field evaluation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="148" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a221d49036e16a07d2449518b0c165a92" prot="protected" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Disk2d::expcoef</definition>
        <argsstring></argsstring>
        <name>expcoef</name>
        <qualifiedname>Disk2d::expcoef</qualifiedname>
        <briefdescription>
<para>Final coefficiet set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="151" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="151" bodyend="-1"/>
        <referencedby refid="class_disk2d_1a76e162b8e4dd274927901880dce530de" compoundref="_disk2d_8_h" startline="192" endline="192">get_coefs</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a997786327d5859e26c38c7b18e5ffa28" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
        <definition>std::vector&lt;Eigen::MatrixXd&gt; Disk2d::expcoef0</definition>
        <argsstring></argsstring>
        <name>expcoef0</name>
        <qualifiedname>Disk2d::expcoef0</qualifiedname>
        <briefdescription>
<para>Matrices per thread for obtaining expansion coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="142" column="15" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1ab4be2ca5aa9f62c7ba2cf2f1643bbafc" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
        <definition>std::vector&lt;Eigen::MatrixXd&gt; Disk2d::potd</definition>
        <argsstring></argsstring>
        <name>potd</name>
        <qualifiedname>Disk2d::potd</qualifiedname>
        <briefdescription>
<para>Potential coefficient computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="145" column="15" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1ad0245fee0e0009004439d3d2e21b6855" prot="protected" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Disk2d::potl</definition>
        <argsstring></argsstring>
        <name>potl</name>
        <qualifiedname>Disk2d::potl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="148" column="24" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a6c31244aaaa4f3e59196af2b480061bb" prot="protected" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Disk2d::potr</definition>
        <argsstring></argsstring>
        <name>potr</name>
        <qualifiedname>Disk2d::potr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="148" column="29" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_disk2d_1a33c71b4b59ea0b6d3b6123f764de9a89" prot="protected" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Disk2d::potz</definition>
        <argsstring></argsstring>
        <name>potz</name>
        <qualifiedname>Disk2d::potz</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="148" column="34" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="148" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_disk2d_1aebd6e3673258a4c0f932b016c6ea69be" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Disk2d::get_dens</definition>
        <argsstring>(double r, double z, Eigen::MatrixXd &amp;p, int tid)</argsstring>
        <name>get_dens</name>
        <qualifiedname>Disk2d::get_dens</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="110" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_disk2d_1a4062a255fe530a4c82ee6554adabb28d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Disk2d::get_dpotl</definition>
        <argsstring>(double r, double z, Eigen::MatrixXd &amp;p, Eigen::MatrixXd &amp;dpr, Eigen::MatrixXd &amp;dpz, int tid)</argsstring>
        <name>get_dpotl</name>
        <qualifiedname>Disk2d::get_dpotl</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>dpr</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>dpz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
<para>Field evaluation members. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="103" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_disk2d_1a6ffa48102c4276bb872b5ce638f5cd8a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Disk2d::get_potl</definition>
        <argsstring>(double r, double z, Eigen::MatrixXd &amp;p, int tid)</argsstring>
        <name>get_potl</name>
        <qualifiedname>Disk2d::get_potl</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="106" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_disk2d_1a63ee411d9f3a5aa0ea0a7e56793878e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Disk2d::get_potl_dens</definition>
        <argsstring>(double r, double z, Eigen::MatrixXd &amp;p, Eigen::MatrixXd &amp;d, int tid)</argsstring>
        <name>get_potl_dens</name>
        <qualifiedname>Disk2d::get_potl_dens</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="112" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_disk2d_1aff75021afb085126215aabd3221fc1d2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double Disk2d::getRtable</definition>
        <argsstring>()</argsstring>
        <name>getRtable</name>
        <qualifiedname>Disk2d::getRtable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="108" column="18" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="108" bodyend="108"/>
        <references refid="class_disk2d_1a0c5ce15858c099820ce785ed3d4c5bd9" compoundref="_disk2d_8_h" startline="95">ortho</references>
      </memberdef>
      <memberdef kind="function" id="class_disk2d_1a46efa0914b5caf12d92a8a8db0c89995" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Disk2d::initialize</definition>
        <argsstring>(void)</argsstring>
        <name>initialize</name>
        <qualifiedname>Disk2d::initialize</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="98" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_disk2d_1a6fe6eb51569ea9e92bcbbb15d3638baf" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Disk2d::get_pot</definition>
        <argsstring>(Eigen::MatrixXd &amp;Vc, Eigen::MatrixXd &amp;Vs, double r, double z)</argsstring>
        <name>get_pot</name>
        <qualifiedname>Disk2d::get_pot</qualifiedname>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>Vc</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>Vs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Use <ref refid="class_biorth_cyl" kindref="compound">BiorthCyl</ref> to evaluate the basis at r, z. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="138" column="8" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="138" bodyend="139"/>
        <references refid="class_disk2d_1a0c5ce15858c099820ce785ed3d4c5bd9" compoundref="_disk2d_8_h" startline="95">ortho</references>
      </memberdef>
      <memberdef kind="function" id="class_disk2d_1acca2c24ab2d1f93f0a5024bcbf409810" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Disk2d::setup_accum</definition>
        <argsstring>()</argsstring>
        <name>setup_accum</name>
        <qualifiedname>Disk2d::setup_accum</qualifiedname>
        <briefdescription>
<para>Setup accumulation arrays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="158" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_disk2d_1a101896358c23dec008a8b0cee32b0f1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Disk2d::accumulate</definition>
        <argsstring>(double r, double phi, double mass)</argsstring>
        <name>accumulate</name>
        <qualifiedname>Disk2d::accumulate</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mass</declname>
        </param>
        <briefdescription>
<para>Add single particle to coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="178" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_disk2d_1a21af8455280866fb7607222a66800201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Disk2d::accumulate</definition>
        <argsstring>(std::vector&lt; Particle &gt; &amp;part)</argsstring>
        <name>accumulate</name>
        <qualifiedname>Disk2d::accumulate</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="class_particle" kindref="compound">Particle</ref> &gt; &amp;</type>
          <declname>part</declname>
        </param>
        <briefdescription>
<para>Accumulate coefficients from particle distribution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="181" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_disk2d_1a2d034f84c0d04de26126608d63b724dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; double, double, double, double, double, double, double &gt;</type>
        <definition>std::tuple&lt; double, double, double, double, double, double, double &gt; Disk2d::accumulated_eval</definition>
        <argsstring>(double R, double z, double phi)</argsstring>
        <name>accumulated_eval</name>
        <qualifiedname>Disk2d::accumulated_eval</qualifiedname>
        <param>
          <type>double</type>
          <declname>R</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
<para>Evaluation of field. Returns: den0, den1, pot0, pot1, Fr, Fz, Fp. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="185" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_disk2d_1a32d15a1559d17750d1ed7a939fcd7ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Disk2d::Disk2d</definition>
        <argsstring>(const YAML::Node &amp;conf)</argsstring>
        <name>Disk2d</name>
        <qualifiedname>Disk2d::Disk2d</qualifiedname>
        <param>
          <type>const YAML::Node &amp;</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="163" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_disk2d_1a76e162b8e4dd274927901880dce530de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Disk2d::get_coefs</definition>
        <argsstring>()</argsstring>
        <name>get_coefs</name>
        <qualifiedname>Disk2d::get_coefs</qualifiedname>
        <briefdescription>
<para>Get coefficient matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="192" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="192" bodyend="192"/>
        <references refid="class_disk2d_1a221d49036e16a07d2449518b0c165a92" compoundref="_disk2d_8_h" startline="151">expcoef</references>
      </memberdef>
      <memberdef kind="function" id="class_disk2d_1a5288630a83478a6987537b72681bbea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Disk2d::inner_product</definition>
        <argsstring>(std::function&lt; double(int, double)&gt; dens, int numr, int nlim=std::numeric_limits&lt; int &gt;::max())</argsstring>
        <name>inner_product</name>
        <qualifiedname>Disk2d::inner_product</qualifiedname>
        <param>
          <type>std::function&lt; double(int, double)&gt;</type>
          <declname>dens</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nlim</declname>
          <defval>std::numeric_limits&lt; int &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Compute the m=0 coefficients for the provided density profile. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="188" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_disk2d_1aa00177fafc293a7593af3048bb343ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Disk2d::make_coefficients</definition>
        <argsstring>()</argsstring>
        <name>make_coefficients</name>
        <qualifiedname>Disk2d::make_coefficients</qualifiedname>
        <briefdescription>
<para>Finish making the coefficients after accumulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="172" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_disk2d_1ae138ffa216f06265422eef752792ac33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Disk2d::setup_accumulation</definition>
        <argsstring>()</argsstring>
        <name>setup_accumulation</name>
        <qualifiedname>Disk2d::setup_accumulation</qualifiedname>
        <briefdescription>
<para>Set up for accumulations by zeroing counters, allocated storage, etc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="169" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_disk2d_1a6513ba0d117243aaecf9d18ed65a9f28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Disk2d::write_coefficients</definition>
        <argsstring>(const std::string &amp;outfile)</argsstring>
        <name>write_coefficients</name>
        <qualifiedname>Disk2d::write_coefficients</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>outfile</declname>
        </param>
        <briefdescription>
<para>Write coefficients to a file for debugging. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="175" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_disk2d_1afe1948ed416c2f045a6009aa77bf10fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Disk2d::~Disk2d</definition>
        <argsstring>()</argsstring>
        <name>~Disk2d</name>
        <qualifiedname>Disk2d::~Disk2d</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="166" column="11"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Computes the potential, acceleration and density using an empirical function analysis for a flat <ref refid="class_bessel" kindref="compound">Bessel</ref> basis and a target density</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acyltbl</parametername>
</parameternamelist>
<parameterdescription>
<para>is the scale length of target density (default is 0.6)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rcylmin</parametername>
</parameternamelist>
<parameterdescription>
<para>is the minimum value in the table for the radial basis functions (default is 0.0)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rcylmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum value in the table for the radial basis functions in acyltbl units (default is 10.0)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numr</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number radial coordinate knots in the table (default is 1000)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>knots</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number quadrature points for integrals in basis construction</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logr</parametername>
</parameternamelist>
<parameterdescription>
<para>scales the <ref refid="class_emp_cyl2d" kindref="compound">EmpCyl2d</ref> grid logarithmically</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>name for <ref refid="class_emp_cyl2d" kindref="compound">EmpCyl2d</ref> (default: expon)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>biorth</parametername>
</parameternamelist>
<parameterdescription>
<para>set for <ref refid="class_emp_cyl2d" kindref="compound">EmpCyl2d</ref> (default: bess)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Mmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the azimuthal order</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmaxfid</parametername>
</parameternamelist>
<parameterdescription>
<para>is the radial order for the <ref refid="class_bessel" kindref="compound">Bessel</ref> basis used to construct the EOF</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the radial order</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numx</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of grid points in the scaled radial direction</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numy</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of grid points in the scaled vertical direction</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NQDHT</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of <ref refid="class_bessel" kindref="compound">Bessel</ref> knots in the underlying Hankel transform used to get the vertical potential</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmapR</parametername>
</parameternamelist>
<parameterdescription>
<para>is the scaling method for radius (0=none, 1=rational) in the grid mapping</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmapZ</parametername>
</parameternamelist>
<parameterdescription>
<para>is the scaling method for vertical height (0=none, 1=sinh, 2=rational) in the grid mapping</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>is the expansion factor to get the physical scale from the internal scale (default is 0.01)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cachename</parametername>
</parameternamelist>
<parameterdescription>
<para>is the file cache for the 2d EOF basis</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>set to true turns on some additional diagnostic info in <ref refid="class_biorth_cyl" kindref="compound">BiorthCyl</ref></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mmin</parametername>
</parameternamelist>
<parameterdescription>
<para>changes the minimum harmonic order for evaluation to some value &gt;=0</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mlim</parametername>
</parameternamelist>
<parameterdescription>
<para>changes the maximum harmonic order for evaluation to some value &lt;=mmax</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmin</parametername>
</parameternamelist>
<parameterdescription>
<para>changes the minimum radial order for evaluation to some value &gt;=0</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nlim</parametername>
</parameternamelist>
<parameterdescription>
<para>changes the maximum radial order for evaluation to some value &lt;=nmax</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>EVEN_M</parametername>
</parameternamelist>
<parameterdescription>
<para>evaluates the expansion for even azimuthal harmonics only </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" line="83" column="1" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/Disk2d.H" bodystart="84" bodyend="193"/>
    <listofallmembers>
      <member refid="class_disk2d_1afae3f8327240c245c16c6f1f13bd0d64" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>accum_setup</name></member>
      <member refid="class_disk2d_1a101896358c23dec008a8b0cee32b0f1c" prot="public" virt="non-virtual"><scope>Disk2d</scope><name>accumulate</name></member>
      <member refid="class_disk2d_1a21af8455280866fb7607222a66800201" prot="public" virt="non-virtual"><scope>Disk2d</scope><name>accumulate</name></member>
      <member refid="class_disk2d_1a2d034f84c0d04de26126608d63b724dc" prot="public" virt="non-virtual"><scope>Disk2d</scope><name>accumulated_eval</name></member>
      <member refid="class_disk2d_1a5f48168e084ba90ab34d04ec8739d2c2" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>acyltbl</name></member>
      <member refid="class_disk2d_1a1136d383ae80114753df01fe3d4d23c7" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>biorth</name></member>
      <member refid="class_disk2d_1a38da7932c9af589c04098894d8a61e21" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>coefs_made</name></member>
      <member refid="class_disk2d_1ad8d664fee5f533ca072b01447f29912f" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>conf</name></member>
      <member refid="class_disk2d_1ae3d47547afc0882b2eb5b38172bf26ee" prot="protected" virt="non-virtual"><scope>Disk2d</scope><name>cylmass</name></member>
      <member refid="class_disk2d_1a5cf1b818c5f118099de9fb3c17e025f7" prot="protected" virt="non-virtual"><scope>Disk2d</scope><name>cylmass1</name></member>
      <member refid="class_disk2d_1acf20d580cbe31b543a663a1f1530b323" prot="protected" virt="non-virtual"><scope>Disk2d</scope><name>dend</name></member>
      <member refid="class_disk2d_1a32d15a1559d17750d1ed7a939fcd7ec9" prot="public" virt="non-virtual"><scope>Disk2d</scope><name>Disk2d</name></member>
      <member refid="class_disk2d_1a221d49036e16a07d2449518b0c165a92" prot="protected" virt="non-virtual"><scope>Disk2d</scope><name>expcoef</name></member>
      <member refid="class_disk2d_1a997786327d5859e26c38c7b18e5ffa28" prot="protected" virt="non-virtual"><scope>Disk2d</scope><name>expcoef0</name></member>
      <member refid="class_disk2d_1a76e162b8e4dd274927901880dce530de" prot="public" virt="non-virtual"><scope>Disk2d</scope><name>get_coefs</name></member>
      <member refid="class_disk2d_1aebd6e3673258a4c0f932b016c6ea69be" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>get_dens</name></member>
      <member refid="class_disk2d_1a4062a255fe530a4c82ee6554adabb28d" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>get_dpotl</name></member>
      <member refid="class_disk2d_1a6fe6eb51569ea9e92bcbbb15d3638baf" prot="protected" virt="non-virtual"><scope>Disk2d</scope><name>get_pot</name></member>
      <member refid="class_disk2d_1a6ffa48102c4276bb872b5ce638f5cd8a" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>get_potl</name></member>
      <member refid="class_disk2d_1a63ee411d9f3a5aa0ea0a7e56793878e5" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>get_potl_dens</name></member>
      <member refid="class_disk2d_1aff75021afb085126215aabd3221fc1d2" prot="private" virt="virtual"><scope>Disk2d</scope><name>getRtable</name></member>
      <member refid="class_disk2d_1a46efa0914b5caf12d92a8a8db0c89995" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>initialize</name></member>
      <member refid="class_disk2d_1a5288630a83478a6987537b72681bbea1" prot="public" virt="non-virtual"><scope>Disk2d</scope><name>inner_product</name></member>
      <member refid="class_disk2d_1ac6fc5edb2d4538837b380556ec52fab1" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>knots</name></member>
      <member refid="class_disk2d_1a6eef49d2011b29946adbeea0195365cf" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>logr</name></member>
      <member refid="class_disk2d_1aa00177fafc293a7593af3048bb343ac3" prot="public" virt="non-virtual"><scope>Disk2d</scope><name>make_coefficients</name></member>
      <member refid="class_disk2d_1a1aef79044d348df479c7e57606209375" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>mmax</name></member>
      <member refid="class_disk2d_1a56e8d381a9324b51a3ba29529e6056c8" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>model</name></member>
      <member refid="class_disk2d_1a76e3d25513734b03ad6fef90bb9e9e65" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>nmax</name></member>
      <member refid="class_disk2d_1a38da5855bfc8d38751d16631780512bc" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>nthrds</name></member>
      <member refid="class_disk2d_1a4aa8d72e39f514b9706db3cbca513771" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>numr</name></member>
      <member refid="class_disk2d_1a0c5ce15858c099820ce785ed3d4c5bd9" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>ortho</name></member>
      <member refid="class_disk2d_1ab4be2ca5aa9f62c7ba2cf2f1643bbafc" prot="protected" virt="non-virtual"><scope>Disk2d</scope><name>potd</name></member>
      <member refid="class_disk2d_1ad0245fee0e0009004439d3d2e21b6855" prot="protected" virt="non-virtual"><scope>Disk2d</scope><name>potl</name></member>
      <member refid="class_disk2d_1a6c31244aaaa4f3e59196af2b480061bb" prot="protected" virt="non-virtual"><scope>Disk2d</scope><name>potr</name></member>
      <member refid="class_disk2d_1a33c71b4b59ea0b6d3b6123f764de9a89" prot="protected" virt="non-virtual"><scope>Disk2d</scope><name>potz</name></member>
      <member refid="class_disk2d_1aa0fc03cbff8a8a12d23562d5d933569c" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>rcylmax</name></member>
      <member refid="class_disk2d_1a4cfb31d57dcf2d6a4b0f396239049fb8" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>rcylmin</name></member>
      <member refid="class_disk2d_1a2deb54317f548f10d593884253e434ae" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>scale</name></member>
      <member refid="class_disk2d_1acca2c24ab2d1f93f0a5024bcbf409810" prot="protected" virt="non-virtual"><scope>Disk2d</scope><name>setup_accum</name></member>
      <member refid="class_disk2d_1ae138ffa216f06265422eef752792ac33" prot="public" virt="non-virtual"><scope>Disk2d</scope><name>setup_accumulation</name></member>
      <member refid="class_disk2d_1a3f3115795ca60bfb3407e956b39b9f3f" prot="private" virt="non-virtual"><scope>Disk2d</scope><name>valid_keys</name></member>
      <member refid="class_disk2d_1a6513ba0d117243aaecf9d18ed65a9f28" prot="public" virt="non-virtual"><scope>Disk2d</scope><name>write_coefficients</name></member>
      <member refid="class_disk2d_1afe1948ed416c2f045a6009aa77bf10fd" prot="public" virt="virtual"><scope>Disk2d</scope><name>~Disk2d</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
