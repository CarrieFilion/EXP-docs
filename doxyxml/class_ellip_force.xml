<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_ellip_force" kind="class" language="C++" prot="public">
    <compoundname>EllipForce</compoundname>
    <includes refid="_ellip_force_8_h" local="no">EllipForce.H</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ellip_force_1ab13babd22f986650e5f4082fbdd5286f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EllipForce::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <qualifiedname>EllipForce::a</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="16" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellip_force_1aaff158f80cc8c72f63dff8a68336bf9d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EllipForce::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <qualifiedname>EllipForce::b</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="16" column="12" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellip_force_1a8a77ca0985d9b6eea8cef85e04e838d6" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EllipForce::c</definition>
        <argsstring></argsstring>
        <name>c</name>
        <qualifiedname>EllipForce::c</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="16" column="14" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellip_force_1a5915a76a613aa4f5cca490cc49875b05" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_lege_quad" kindref="compound">LegeQuad</ref> &gt;</type>
        <definition>std::shared_ptr&lt;LegeQuad&gt; EllipForce::lq</definition>
        <argsstring></argsstring>
        <name>lq</name>
        <qualifiedname>EllipForce::lq</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="18" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellip_force_1a57d781b086065f7c36c325d9e3b7b927" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; EllipForce::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <qualifiedname>EllipForce::m</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="20" column="17" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellip_force_1ad1f627eacabbda40d769027bf3a9a3c8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EllipForce::mass</definition>
        <argsstring></argsstring>
        <name>mass</name>
        <qualifiedname>EllipForce::mass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="16" column="16" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellip_force_1afc3eedf5df997af963d4116c9382fb00" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EllipForce::num</definition>
        <argsstring></argsstring>
        <name>num</name>
        <qualifiedname>EllipForce::num</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="17" column="7" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellip_force_1ad7759528048e9e269834d3bf5bf8a8cc" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EllipForce::numr</definition>
        <argsstring></argsstring>
        <name>numr</name>
        <qualifiedname>EllipForce::numr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="17" column="11" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellip_force_1a153da902359097bdbc6aa4fa85b845b3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; EllipForce::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <qualifiedname>EllipForce::p</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="20" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellip_force_1a8dc76cdf11145af6eb95ef7ea761453d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; EllipForce::r</definition>
        <argsstring></argsstring>
        <name>r</name>
        <qualifiedname>EllipForce::r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="20" column="15" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" bodystart="20" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_ellip_force_1a9e39796ed90470fe8093d8f325e0ddf3" prot="public" static="yes" mutable="no">
        <type>string</type>
        <definition>string EllipForce::cache_file</definition>
        <argsstring></argsstring>
        <name>cache_file</name>
        <qualifiedname>EllipForce::cache_file</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="27" column="17" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" bodystart="27" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_ellip_force_1ac9e683c0f70610770c0e914a4ac6b03d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EllipForce::read_cache</definition>
        <argsstring>()</argsstring>
        <name>read_cache</name>
        <qualifiedname>EllipForce::read_cache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="23" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ellip_force_1a136d0d094c5016dfc10bcd1d3c17678f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EllipForce::write_cache</definition>
        <argsstring>()</argsstring>
        <name>write_cache</name>
        <qualifiedname>EllipForce::write_cache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="22" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ellip_force_1a1cbe16b33f009aa68fa40aa704c30df8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EllipForce::EllipForce</definition>
        <argsstring>(double a, double b, double c, double mass, int num=100, int numr=100)</argsstring>
        <name>EllipForce</name>
        <qualifiedname>EllipForce::EllipForce</qualifiedname>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
          <defval>100</defval>
        </param>
        <param>
          <type>int</type>
          <declname>numr</declname>
          <defval>100</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="29" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_ellip_force_1a3f96c5d4b51c152e95a88895b2330c0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double EllipForce::getMass</definition>
        <argsstring>(double x)</argsstring>
        <name>getMass</name>
        <qualifiedname>EllipForce::getMass</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="33" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ellip_force_1a3f0ab83b9ad2aac92e57105bdfa5425d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double EllipForce::getPot</definition>
        <argsstring>(double x)</argsstring>
        <name>getPot</name>
        <qualifiedname>EllipForce::getPot</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="34" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ellip_force_1ae929918a02f4b7295a7a85242002a3af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EllipForce::PrintModel</definition>
        <argsstring>(const string &amp;)</argsstring>
        <name>PrintModel</name>
        <qualifiedname>EllipForce::PrintModel</qualifiedname>
        <param>
          <type>const string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="36" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ellip_force_1a526d285f61a4fffc42288650a9671af8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EllipForce::PrintTable</definition>
        <argsstring>()</argsstring>
        <name>PrintTable</name>
        <qualifiedname>EllipForce::PrintTable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="35" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ellip_force_1a3b96289e6a6422a854b0a29e16311fa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EllipForce::TestTable</definition>
        <argsstring>()</argsstring>
        <name>TestTable</name>
        <qualifiedname>EllipForce::TestTable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="37" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ellip_force_1a11e485a5dd75b5136b20b60ded3385f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EllipForce::~EllipForce</definition>
        <argsstring>()</argsstring>
        <name>~EllipForce</name>
        <qualifiedname>EllipForce::~EllipForce</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="31" column="3"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" line="13" column="1" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipForce.H" bodystart="13" bodyend="39"/>
    <listofallmembers>
      <member refid="class_ellip_force_1ab13babd22f986650e5f4082fbdd5286f" prot="private" virt="non-virtual"><scope>EllipForce</scope><name>a</name></member>
      <member refid="class_ellip_force_1aaff158f80cc8c72f63dff8a68336bf9d" prot="private" virt="non-virtual"><scope>EllipForce</scope><name>b</name></member>
      <member refid="class_ellip_force_1a8a77ca0985d9b6eea8cef85e04e838d6" prot="private" virt="non-virtual"><scope>EllipForce</scope><name>c</name></member>
      <member refid="class_ellip_force_1a9e39796ed90470fe8093d8f325e0ddf3" prot="public" virt="non-virtual"><scope>EllipForce</scope><name>cache_file</name></member>
      <member refid="class_ellip_force_1a1cbe16b33f009aa68fa40aa704c30df8" prot="public" virt="non-virtual"><scope>EllipForce</scope><name>EllipForce</name></member>
      <member refid="class_ellip_force_1a3f96c5d4b51c152e95a88895b2330c0b" prot="public" virt="non-virtual"><scope>EllipForce</scope><name>getMass</name></member>
      <member refid="class_ellip_force_1a3f0ab83b9ad2aac92e57105bdfa5425d" prot="public" virt="non-virtual"><scope>EllipForce</scope><name>getPot</name></member>
      <member refid="class_ellip_force_1a5915a76a613aa4f5cca490cc49875b05" prot="private" virt="non-virtual"><scope>EllipForce</scope><name>lq</name></member>
      <member refid="class_ellip_force_1a57d781b086065f7c36c325d9e3b7b927" prot="private" virt="non-virtual"><scope>EllipForce</scope><name>m</name></member>
      <member refid="class_ellip_force_1ad1f627eacabbda40d769027bf3a9a3c8" prot="private" virt="non-virtual"><scope>EllipForce</scope><name>mass</name></member>
      <member refid="class_ellip_force_1afc3eedf5df997af963d4116c9382fb00" prot="private" virt="non-virtual"><scope>EllipForce</scope><name>num</name></member>
      <member refid="class_ellip_force_1ad7759528048e9e269834d3bf5bf8a8cc" prot="private" virt="non-virtual"><scope>EllipForce</scope><name>numr</name></member>
      <member refid="class_ellip_force_1a153da902359097bdbc6aa4fa85b845b3" prot="private" virt="non-virtual"><scope>EllipForce</scope><name>p</name></member>
      <member refid="class_ellip_force_1ae929918a02f4b7295a7a85242002a3af" prot="public" virt="non-virtual"><scope>EllipForce</scope><name>PrintModel</name></member>
      <member refid="class_ellip_force_1a526d285f61a4fffc42288650a9671af8" prot="public" virt="non-virtual"><scope>EllipForce</scope><name>PrintTable</name></member>
      <member refid="class_ellip_force_1a8dc76cdf11145af6eb95ef7ea761453d" prot="private" virt="non-virtual"><scope>EllipForce</scope><name>r</name></member>
      <member refid="class_ellip_force_1ac9e683c0f70610770c0e914a4ac6b03d" prot="private" virt="non-virtual"><scope>EllipForce</scope><name>read_cache</name></member>
      <member refid="class_ellip_force_1a3b96289e6a6422a854b0a29e16311fa8" prot="public" virt="non-virtual"><scope>EllipForce</scope><name>TestTable</name></member>
      <member refid="class_ellip_force_1a136d0d094c5016dfc10bcd1d3c17678f" prot="private" virt="non-virtual"><scope>EllipForce</scope><name>write_cache</name></member>
      <member refid="class_ellip_force_1a11e485a5dd75b5136b20b60ded3385f3" prot="public" virt="non-virtual"><scope>EllipForce</scope><name>~EllipForce</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
