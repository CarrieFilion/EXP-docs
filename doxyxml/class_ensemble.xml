<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_ensemble" kind="class" language="C++" prot="public">
    <compoundname>Ensemble</compoundname>
    <includes refid="phase_8_h" local="no">phase.H</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_ensemble_1ab2cff107122af54c3bf077e24a5ac439" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Ensemble::Nstars</definition>
        <argsstring></argsstring>
        <name>Nstars</name>
        <qualifiedname>Ensemble::Nstars</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="169" column="7" bodyfile="/home/weinberg/Projects/EXP/include/phase.H" bodystart="169" bodyend="-1"/>
        <referencedby refid="class_ensemble_1a7b35b9e0c486a19438c17a186ea5be76" compoundref="phase_8_h" startline="180" endline="180">get_Nstars</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_ensemble_1a054a3885c940a85bf84b4882b912f6bf" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_phase" kindref="compound">Phase</ref> &gt;</type>
        <definition>std::vector&lt;Phase&gt; Ensemble::stars</definition>
        <argsstring></argsstring>
        <name>stars</name>
        <qualifiedname>Ensemble::stars</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="170" column="15" bodyfile="/home/weinberg/Projects/EXP/include/phase.H" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ensemble_1afdf4c0b679bcecb8c8894011d7a24965" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Ensemble::t</definition>
        <argsstring></argsstring>
        <name>t</name>
        <qualifiedname>Ensemble::t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="171" column="10" bodyfile="/home/weinberg/Projects/EXP/include/phase.H" bodystart="171" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ensemble_1a6ad9ad6b98edb565aa537b72eb7086d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::binread</definition>
        <argsstring>(std::istream &amp;fp)</argsstring>
        <name>binread</name>
        <qualifiedname>Ensemble::binread</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="221" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1aefb15975bc6530c6ef33e305626fbd38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::binwrite</definition>
        <argsstring>(std::ostream &amp;fp)</argsstring>
        <name>binwrite</name>
        <qualifiedname>Ensemble::binwrite</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="222" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1afe721b57b1a0546fe0a9a0346270e84e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d Ensemble::CM_Position</definition>
        <argsstring>(void)</argsstring>
        <name>CM_Position</name>
        <qualifiedname>Ensemble::CM_Position</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="212" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a55a3a41f14ff5ccd7be9159faf7329f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d Ensemble::CM_Velocity</definition>
        <argsstring>(void)</argsstring>
        <name>CM_Velocity</name>
        <qualifiedname>Ensemble::CM_Velocity</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="213" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1ae76f6d115e9880911938254aeac9cff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ensemble::Ensemble</definition>
        <argsstring>(Ensemble &amp;)</argsstring>
        <name>Ensemble</name>
        <qualifiedname>Ensemble::Ensemble</qualifiedname>
        <param>
          <type><ref refid="class_ensemble" kindref="compound">Ensemble</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="177" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a320caae5a5759056837075b1f736a421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ensemble::Ensemble</definition>
        <argsstring>(int)</argsstring>
        <name>Ensemble</name>
        <qualifiedname>Ensemble::Ensemble</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="176" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a1957b82d2fcd78c08c369eade9530255" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ensemble::Ensemble</definition>
        <argsstring>(void)</argsstring>
        <name>Ensemble</name>
        <qualifiedname>Ensemble::Ensemble</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="174" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a7b35b9e0c486a19438c17a186ea5be76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ensemble::get_Nstars</definition>
        <argsstring>(void)</argsstring>
        <name>get_Nstars</name>
        <qualifiedname>Ensemble::get_Nstars</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="180" column="7" bodyfile="/home/weinberg/Projects/EXP/include/phase.H" bodystart="180" bodyend="180"/>
        <references refid="class_ensemble_1ab2cff107122af54c3bf077e24a5ac439" compoundref="phase_8_h" startline="169">Nstars</references>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1af69e6bbb969bf14b21b2bd7dc74a4413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d Ensemble::Inertia_Tensor</definition>
        <argsstring>(double)</argsstring>
        <name>Inertia_Tensor</name>
        <qualifiedname>Ensemble::Inertia_Tensor</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="217" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a95860c73399ec6d4a6b33efea072b29e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ensemble" kindref="compound">Ensemble</ref></type>
        <definition>Ensemble Ensemble::integrate_to</definition>
        <argsstring>(double)</argsstring>
        <name>integrate_to</name>
        <qualifiedname>Ensemble::integrate_to</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="186" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1ae11f204e360af638d73366e0aef72fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ensemble" kindref="compound">Ensemble</ref></type>
        <definition>Ensemble Ensemble::integrate_to</definition>
        <argsstring>(double, freezing_function)</argsstring>
        <name>integrate_to</name>
        <qualifiedname>Ensemble::integrate_to</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="phase_8_h_1a836f1515043416409e8e3c93004e4eee" kindref="member">freezing_function</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="189" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1ab62200ac32b470fa921f76507871468b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d Ensemble::Moment_Tensor</definition>
        <argsstring>(double)</argsstring>
        <name>Moment_Tensor</name>
        <qualifiedname>Ensemble::Moment_Tensor</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="216" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a4074fa53fc6c39a1f958f22e738173be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ensemble" kindref="compound">Ensemble</ref> &amp;</type>
        <definition>Ensemble &amp; Ensemble::operator=</definition>
        <argsstring>(Ensemble &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>Ensemble::operator=</qualifiedname>
        <param>
          <type><ref refid="class_ensemble" kindref="compound">Ensemble</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="182" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1aae6b5951ff84512dc3b67ebe85a6a883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_phase" kindref="compound">Phase</ref> &amp;</type>
        <definition>Phase &amp; Ensemble::operator[]</definition>
        <argsstring>(int)</argsstring>
        <name>operator[]</name>
        <qualifiedname>Ensemble::operator[]</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="184" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1aa290aad546624c70636a8de07b2f2313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d Ensemble::Principal_Axes</definition>
        <argsstring>(double, Eigen::Matrix3d &amp;)</argsstring>
        <name>Principal_Axes</name>
        <qualifiedname>Ensemble::Principal_Axes</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>Eigen::Matrix3d &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="218" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a98057a4e4a14492bdaa912f6acc1b3e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::read_orbits</definition>
        <argsstring>(std::istream &amp;)</argsstring>
        <name>read_orbits</name>
        <qualifiedname>Ensemble::read_orbits</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="196" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a4d97a9b6a73158f323d548389babb9e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::read_snapshot</definition>
        <argsstring>(std::istream &amp;)</argsstring>
        <name>read_snapshot</name>
        <qualifiedname>Ensemble::read_snapshot</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="193" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1ac18ace89c8c26b0859272045af88a051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::read_tidesfile</definition>
        <argsstring>(std::istream &amp;)</argsstring>
        <name>read_tidesfile</name>
        <qualifiedname>Ensemble::read_tidesfile</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="194" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1af7862feeb5f7297a10867641047a5cb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::rotate_frame</definition>
        <argsstring>(double)</argsstring>
        <name>rotate_frame</name>
        <qualifiedname>Ensemble::rotate_frame</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="203" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a43e1ae21cb2b9da5ea5fdce2f93e991c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::rotate_view</definition>
        <argsstring>(double)</argsstring>
        <name>rotate_view</name>
        <qualifiedname>Ensemble::rotate_view</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="204" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a7b0a5e6c266f6f0be91e297ddd7e81af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::scale_masses</definition>
        <argsstring>(double)</argsstring>
        <name>scale_masses</name>
        <qualifiedname>Ensemble::scale_masses</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="200" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a9ce7efbdd930a759910a48c0fbd67424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::scale_positions</definition>
        <argsstring>(double)</argsstring>
        <name>scale_positions</name>
        <qualifiedname>Ensemble::scale_positions</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="201" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a403728f120c5482a4a6b75c567a26c4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::scale_speeds</definition>
        <argsstring>(double)</argsstring>
        <name>scale_speeds</name>
        <qualifiedname>Ensemble::scale_speeds</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="202" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a824f8c894e315dcea8b318e08cad4558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::set_masses</definition>
        <argsstring>(double)</argsstring>
        <name>set_masses</name>
        <qualifiedname>Ensemble::set_masses</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="199" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a7d7d941c51c32eb0345d2dfaf36de511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::setsize</definition>
        <argsstring>(int)</argsstring>
        <name>setsize</name>
        <qualifiedname>Ensemble::setsize</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="179" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a0bbf0fce13054f1e03d08ee6dfb7e1ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::settime</definition>
        <argsstring>(double)</argsstring>
        <name>settime</name>
        <qualifiedname>Ensemble::settime</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="198" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a670dad60618ab026dd30e02071062459" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d Ensemble::Solid_Body_Frequency</definition>
        <argsstring>(double)</argsstring>
        <name>Solid_Body_Frequency</name>
        <qualifiedname>Ensemble::Solid_Body_Frequency</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="219" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a838672e440bf016213430f49feed0ff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ensemble" kindref="compound">Ensemble</ref></type>
        <definition>Ensemble Ensemble::Step_Positions</definition>
        <argsstring>(double)</argsstring>
        <name>Step_Positions</name>
        <qualifiedname>Ensemble::Step_Positions</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="187" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a3cbbffe613998ad52fad41798b9820ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ensemble" kindref="compound">Ensemble</ref></type>
        <definition>Ensemble Ensemble::Step_Velocities</definition>
        <argsstring>(double, Eigen::Vector3d *)</argsstring>
        <name>Step_Velocities</name>
        <qualifiedname>Ensemble::Step_Velocities</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>Eigen::Vector3d *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="188" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a720f0f403273edac165123ef25bc6e47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d Ensemble::total_Angular_Momentum</definition>
        <argsstring>(void)</argsstring>
        <name>total_Angular_Momentum</name>
        <qualifiedname>Ensemble::total_Angular_Momentum</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="214" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a4bb5b98c80803aceca0200c72d60bc75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Ensemble::total_Energy</definition>
        <argsstring>(void)</argsstring>
        <name>total_Energy</name>
        <qualifiedname>Ensemble::total_Energy</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="208" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a79d3035f340091883d5dc9468c497af5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Ensemble::total_Kinetic</definition>
        <argsstring>(void)</argsstring>
        <name>total_Kinetic</name>
        <qualifiedname>Ensemble::total_Kinetic</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="209" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1ad7b0de55539173b72a20baabe7ba7f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Ensemble::total_Potential</definition>
        <argsstring>(void)</argsstring>
        <name>total_Potential</name>
        <qualifiedname>Ensemble::total_Potential</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="210" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1ac041507ec5f4cbdbcd9cee78725c1f28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::translate</definition>
        <argsstring>(Eigen::Vector3d &amp;)</argsstring>
        <name>translate</name>
        <qualifiedname>Ensemble::translate</qualifiedname>
        <param>
          <type>Eigen::Vector3d &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="206" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1ae39d07aa5db5fe9ccffa1ad490191d6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Ensemble::Virial</definition>
        <argsstring>(void)</argsstring>
        <name>Virial</name>
        <qualifiedname>Ensemble::Virial</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="211" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a4d49e2d8da60ffeb553c702425fabeb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::write_log</definition>
        <argsstring>(std::ostream &amp;)</argsstring>
        <name>write_log</name>
        <qualifiedname>Ensemble::write_log</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="191" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a450e2ae54b53ce47cec5b04aecb66c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::write_orbits</definition>
        <argsstring>(std::ostream &amp;)</argsstring>
        <name>write_orbits</name>
        <qualifiedname>Ensemble::write_orbits</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="195" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a1b8e95fec3446b2e7bd9daa64d7233aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ensemble::write_snapshot</definition>
        <argsstring>(std::ostream &amp;)</argsstring>
        <name>write_snapshot</name>
        <qualifiedname>Ensemble::write_snapshot</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="192" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ensemble_1a339195fc6dbe31b54df790990823f4d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ensemble::~Ensemble</definition>
        <argsstring>(void)</argsstring>
        <name>~Ensemble</name>
        <qualifiedname>Ensemble::~Ensemble</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/phase.H" line="175" column="3"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/weinberg/Projects/EXP/include/phase.H" line="166" column="1" bodyfile="/home/weinberg/Projects/EXP/include/phase.H" bodystart="167" bodyend="224"/>
    <listofallmembers>
      <member refid="class_ensemble_1a6ad9ad6b98edb565aa537b72eb7086d9" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>binread</name></member>
      <member refid="class_ensemble_1aefb15975bc6530c6ef33e305626fbd38" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>binwrite</name></member>
      <member refid="class_ensemble_1afe721b57b1a0546fe0a9a0346270e84e" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>CM_Position</name></member>
      <member refid="class_ensemble_1a55a3a41f14ff5ccd7be9159faf7329f1" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>CM_Velocity</name></member>
      <member refid="class_ensemble_1a1957b82d2fcd78c08c369eade9530255" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>Ensemble</name></member>
      <member refid="class_ensemble_1a320caae5a5759056837075b1f736a421" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>Ensemble</name></member>
      <member refid="class_ensemble_1ae76f6d115e9880911938254aeac9cff6" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>Ensemble</name></member>
      <member refid="class_ensemble_1a7b35b9e0c486a19438c17a186ea5be76" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>get_Nstars</name></member>
      <member refid="class_ensemble_1af69e6bbb969bf14b21b2bd7dc74a4413" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>Inertia_Tensor</name></member>
      <member refid="class_ensemble_1a95860c73399ec6d4a6b33efea072b29e" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>integrate_to</name></member>
      <member refid="class_ensemble_1ae11f204e360af638d73366e0aef72fa6" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>integrate_to</name></member>
      <member refid="class_ensemble_1ab62200ac32b470fa921f76507871468b" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>Moment_Tensor</name></member>
      <member refid="class_ensemble_1ab2cff107122af54c3bf077e24a5ac439" prot="protected" virt="non-virtual"><scope>Ensemble</scope><name>Nstars</name></member>
      <member refid="class_ensemble_1a4074fa53fc6c39a1f958f22e738173be" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>operator=</name></member>
      <member refid="class_ensemble_1aae6b5951ff84512dc3b67ebe85a6a883" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>operator[]</name></member>
      <member refid="class_ensemble_1aa290aad546624c70636a8de07b2f2313" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>Principal_Axes</name></member>
      <member refid="class_ensemble_1a98057a4e4a14492bdaa912f6acc1b3e1" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>read_orbits</name></member>
      <member refid="class_ensemble_1a4d97a9b6a73158f323d548389babb9e0" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>read_snapshot</name></member>
      <member refid="class_ensemble_1ac18ace89c8c26b0859272045af88a051" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>read_tidesfile</name></member>
      <member refid="class_ensemble_1af7862feeb5f7297a10867641047a5cb6" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>rotate_frame</name></member>
      <member refid="class_ensemble_1a43e1ae21cb2b9da5ea5fdce2f93e991c" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>rotate_view</name></member>
      <member refid="class_ensemble_1a7b0a5e6c266f6f0be91e297ddd7e81af" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>scale_masses</name></member>
      <member refid="class_ensemble_1a9ce7efbdd930a759910a48c0fbd67424" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>scale_positions</name></member>
      <member refid="class_ensemble_1a403728f120c5482a4a6b75c567a26c4c" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>scale_speeds</name></member>
      <member refid="class_ensemble_1a824f8c894e315dcea8b318e08cad4558" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>set_masses</name></member>
      <member refid="class_ensemble_1a7d7d941c51c32eb0345d2dfaf36de511" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>setsize</name></member>
      <member refid="class_ensemble_1a0bbf0fce13054f1e03d08ee6dfb7e1ec" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>settime</name></member>
      <member refid="class_ensemble_1a670dad60618ab026dd30e02071062459" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>Solid_Body_Frequency</name></member>
      <member refid="class_ensemble_1a054a3885c940a85bf84b4882b912f6bf" prot="protected" virt="non-virtual"><scope>Ensemble</scope><name>stars</name></member>
      <member refid="class_ensemble_1a838672e440bf016213430f49feed0ff6" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>Step_Positions</name></member>
      <member refid="class_ensemble_1a3cbbffe613998ad52fad41798b9820ec" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>Step_Velocities</name></member>
      <member refid="class_ensemble_1afdf4c0b679bcecb8c8894011d7a24965" prot="protected" virt="non-virtual"><scope>Ensemble</scope><name>t</name></member>
      <member refid="class_ensemble_1a720f0f403273edac165123ef25bc6e47" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>total_Angular_Momentum</name></member>
      <member refid="class_ensemble_1a4bb5b98c80803aceca0200c72d60bc75" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>total_Energy</name></member>
      <member refid="class_ensemble_1a79d3035f340091883d5dc9468c497af5" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>total_Kinetic</name></member>
      <member refid="class_ensemble_1ad7b0de55539173b72a20baabe7ba7f7f" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>total_Potential</name></member>
      <member refid="class_ensemble_1ac041507ec5f4cbdbcd9cee78725c1f28" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>translate</name></member>
      <member refid="class_ensemble_1ae39d07aa5db5fe9ccffa1ad490191d6c" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>Virial</name></member>
      <member refid="class_ensemble_1a4d49e2d8da60ffeb553c702425fabeb2" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>write_log</name></member>
      <member refid="class_ensemble_1a450e2ae54b53ce47cec5b04aecb66c8d" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>write_orbits</name></member>
      <member refid="class_ensemble_1a1b8e95fec3446b2e7bd9daa64d7233aa" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>write_snapshot</name></member>
      <member refid="class_ensemble_1a339195fc6dbe31b54df790990823f4d2" prot="public" virt="non-virtual"><scope>Ensemble</scope><name>~Ensemble</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
