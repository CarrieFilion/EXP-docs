<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_linear1d" kind="class" language="C++" prot="public">
    <compoundname>Linear1d</compoundname>
    <basecompoundref refid="class_interp1d" prot="public" virt="non-virtual">Interp1d</basecompoundref>
    <includes refid="interp_8_h" local="no">interp.H</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_linear1d_1a7cd1d60114eda9389f3226b860f2075c" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Linear1d::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>Linear1d::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="197" column="19" bodyfile="/home/weinberg/Projects/EXP/include/interp.H" bodystart="197" bodyend="-1"/>
        <referencedby refid="class_linear1d_1a784960cd9590a7a394a69fd5b9bd3ad3" compoundref="interp_8_h" startline="226" endline="226">xhi</referencedby>
        <referencedby refid="class_linear1d_1a871aea7a921331a671183d361cd3b2e0" compoundref="interp_8_h" startline="225" endline="225">xlo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_linear1d_1a45704758ee2fc4e1f9f3d08773122c3b" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Linear1d::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <qualifiedname>Linear1d::y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="198" column="19" bodyfile="/home/weinberg/Projects/EXP/include/interp.H" bodystart="198" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_linear1d_1a7cca991f83a09a3183d721703a32ca7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Linear1d::deriv</definition>
        <argsstring>(const double &amp;x)</argsstring>
        <name>deriv</name>
        <qualifiedname>Linear1d::deriv</qualifiedname>
        <reimplements refid="class_interp1d_1a47936fb17ab09ba1a5adae98615703f7">deriv</reimplements>
        <param>
          <type>const double &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Evaluate first derivative. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="221" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_linear1d_1a59080ed1d410b65d44fdba854be86daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Linear1d::eval</definition>
        <argsstring>(const double &amp;x)</argsstring>
        <name>eval</name>
        <qualifiedname>Linear1d::eval</qualifiedname>
        <reimplements refid="class_interp1d_1acb91fcf561ac596869ce571c30cf5583">eval</reimplements>
        <param>
          <type>const double &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Evaluate the interpolant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="218" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_linear1d_1a8f4612cd47eb448ad86cd0ae7da8f993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Linear1d::Linear1d</definition>
        <argsstring>()</argsstring>
        <name>Linear1d</name>
        <qualifiedname>Linear1d::Linear1d</qualifiedname>
        <briefdescription>
<para>Null constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="203" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_linear1d_1a6a0ea756a03a7efc21579b02581c5ca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Linear1d::Linear1d</definition>
        <argsstring>(const Eigen::VectorXd &amp;x, const Eigen::VectorXd &amp;y)</argsstring>
        <name>Linear1d</name>
        <qualifiedname>Linear1d::Linear1d</qualifiedname>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Construct from Eigen input. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="206" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_linear1d_1a8cc2f73893fd3429088038472c980088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Linear1d::Linear1d</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;x, const std::vector&lt; double &gt; &amp;y)</argsstring>
        <name>Linear1d</name>
        <qualifiedname>Linear1d::Linear1d</qualifiedname>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Construct from std::vector input. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="209" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_linear1d_1acc99126c92ed5cb76e4c582bb9afb126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_linear1d" kindref="compound">Linear1d</ref> &amp;</type>
        <definition>Linear1d &amp; Linear1d::operator=</definition>
        <argsstring>(const Linear1d &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>Linear1d::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_linear1d" kindref="compound">Linear1d</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="212" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_linear1d_1a784960cd9590a7a394a69fd5b9bd3ad3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double Linear1d::xhi</definition>
        <argsstring>()</argsstring>
        <name>xhi</name>
        <qualifiedname>Linear1d::xhi</qualifiedname>
        <reimplements refid="class_interp1d_1a7acc2957f6163115ad925d21d9ab2783">xhi</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="226" column="10" bodyfile="/home/weinberg/Projects/EXP/include/interp.H" bodystart="226" bodyend="226"/>
        <references refid="class_linear1d_1a7cd1d60114eda9389f3226b860f2075c" compoundref="interp_8_h" startline="197">x</references>
      </memberdef>
      <memberdef kind="function" id="class_linear1d_1a871aea7a921331a671183d361cd3b2e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double Linear1d::xlo</definition>
        <argsstring>()</argsstring>
        <name>xlo</name>
        <qualifiedname>Linear1d::xlo</qualifiedname>
        <reimplements refid="class_interp1d_1ad7d8aaee41f1df6e533bfbb3089e8b67">xlo</reimplements>
        <briefdescription>
<para>Data limits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="225" column="10" bodyfile="/home/weinberg/Projects/EXP/include/interp.H" bodystart="225" bodyend="225"/>
        <references refid="class_linear1d_1a7cd1d60114eda9389f3226b860f2075c" compoundref="interp_8_h" startline="197">x</references>
      </memberdef>
      <memberdef kind="function" id="class_linear1d_1a9e975abf68566a3f7d2e997523e83ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Linear1d::~Linear1d</definition>
        <argsstring>()</argsstring>
        <name>~Linear1d</name>
        <qualifiedname>Linear1d::~Linear1d</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="215" column="3"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Interp1d</label>
        <link refid="class_interp1d"/>
      </node>
      <node id="1">
        <label>Linear1d</label>
        <link refid="class_linear1d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Interp1d</label>
        <link refid="class_interp1d"/>
      </node>
      <node id="1">
        <label>Linear1d</label>
        <link refid="class_linear1d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/include/interp.H" line="193" column="1" bodyfile="/home/weinberg/Projects/EXP/include/interp.H" bodystart="194" bodyend="228"/>
    <listofallmembers>
      <member refid="class_linear1d_1a7cca991f83a09a3183d721703a32ca7f" prot="public" virt="virtual"><scope>Linear1d</scope><name>deriv</name></member>
      <member refid="class_linear1d_1a59080ed1d410b65d44fdba854be86daf" prot="public" virt="virtual"><scope>Linear1d</scope><name>eval</name></member>
      <member refid="class_linear1d_1a8f4612cd47eb448ad86cd0ae7da8f993" prot="public" virt="non-virtual"><scope>Linear1d</scope><name>Linear1d</name></member>
      <member refid="class_linear1d_1a6a0ea756a03a7efc21579b02581c5ca4" prot="public" virt="non-virtual"><scope>Linear1d</scope><name>Linear1d</name></member>
      <member refid="class_linear1d_1a8cc2f73893fd3429088038472c980088" prot="public" virt="non-virtual"><scope>Linear1d</scope><name>Linear1d</name></member>
      <member refid="class_linear1d_1acc99126c92ed5cb76e4c582bb9afb126" prot="public" virt="non-virtual"><scope>Linear1d</scope><name>operator=</name></member>
      <member refid="class_linear1d_1a7cd1d60114eda9389f3226b860f2075c" prot="private" virt="non-virtual"><scope>Linear1d</scope><name>x</name></member>
      <member refid="class_linear1d_1a784960cd9590a7a394a69fd5b9bd3ad3" prot="public" virt="virtual"><scope>Linear1d</scope><name>xhi</name></member>
      <member refid="class_linear1d_1a871aea7a921331a671183d361cd3b2e0" prot="public" virt="virtual"><scope>Linear1d</scope><name>xlo</name></member>
      <member refid="class_linear1d_1a45704758ee2fc4e1f9f3d08773122c3b" prot="private" virt="non-virtual"><scope>Linear1d</scope><name>y</name></member>
      <member refid="class_interp1d_1a21ea97560f42d16715c1d9c6efb2d092" prot="public" virt="pure-virtual"><scope>Linear1d</scope><name>~Interp1d</name></member>
      <member refid="class_linear1d_1a9e975abf68566a3f7d2e997523e83ca5" prot="public" virt="non-virtual"><scope>Linear1d</scope><name>~Linear1d</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
