<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_orb_trace" kind="class" language="C++" prot="public">
    <compoundname>OrbTrace</compoundname>
    <basecompoundref refid="class_output" prot="public" virt="non-virtual">Output</basecompoundref>
    <includes refid="_orb_trace_8_h" local="no">OrbTrace.H</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_orb_trace_1a4904b82695586154193df5b0f6129813" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string OrbTrace::filename</definition>
        <argsstring></argsstring>
        <name>filename</name>
        <qualifiedname>OrbTrace::filename</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="36" column="15" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orb_trace_1a9779dc75badc9fd5b2b044ba4f218623" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OrbTrace::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <qualifiedname>OrbTrace::flags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="49" column="7" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orb_trace_1a836db57c795ff64325f6f016249fb801" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OrbTrace::local</definition>
        <argsstring></argsstring>
        <name>local</name>
        <qualifiedname>OrbTrace::local</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="44" column="8" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orb_trace_1acc7654d19c49c359053e496b0593c6f6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OrbTrace::nbeg</definition>
        <argsstring></argsstring>
        <name>nbeg</name>
        <qualifiedname>OrbTrace::nbeg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="38" column="7" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orb_trace_1a193d912a01938bb111c04daee5131598" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OrbTrace::nbuf</definition>
        <argsstring></argsstring>
        <name>nbuf</name>
        <qualifiedname>OrbTrace::nbuf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="48" column="7" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orb_trace_1abf316253b26847e999d98d0a8d0ff04a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OrbTrace::norb</definition>
        <argsstring></argsstring>
        <name>norb</name>
        <qualifiedname>OrbTrace::norb</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="40" column="7" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orb_trace_1a0a0b568e0454aeb89a05f97a543e5e3e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OrbTrace::nskip</definition>
        <argsstring></argsstring>
        <name>nskip</name>
        <qualifiedname>OrbTrace::nskip</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="39" column="7" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orb_trace_1afc27d67b14b6848651f7945db5a12a3d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string OrbTrace::orbitlist</definition>
        <argsstring></argsstring>
        <name>orbitlist</name>
        <qualifiedname>OrbTrace::orbitlist</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="37" column="15" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orb_trace_1a56daf771e7356b67c8d6639de918637e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; OrbTrace::orblist</definition>
        <argsstring></argsstring>
        <name>orblist</name>
        <qualifiedname>OrbTrace::orblist</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="46" column="15" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orb_trace_1a8213236086651a4f9574c91b1c75e098" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; OrbTrace::pbuf</definition>
        <argsstring></argsstring>
        <name>pbuf</name>
        <qualifiedname>OrbTrace::pbuf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="47" column="15" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orb_trace_1a83edfa294246b0a4cd87a2cd1d34f534" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OrbTrace::prev</definition>
        <argsstring></argsstring>
        <name>prev</name>
        <qualifiedname>OrbTrace::prev</qualifiedname>
        <initializer>= -std::numeric_limits&lt;double&gt;::max()</initializer>
        <briefdescription>
<para>Last output time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="57" column="10" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orb_trace_1a7e25ecf48de34e047dfd4b5c361afd5c" prot="private" static="no" mutable="no">
        <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
        <definition>Component* OrbTrace::tcomp</definition>
        <argsstring></argsstring>
        <name>tcomp</name>
        <qualifiedname>OrbTrace::tcomp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="45" column="13" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orb_trace_1af4fcce1c4fd3ec56be003324de2ce5cf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OrbTrace::use_acc</definition>
        <argsstring></argsstring>
        <name>use_acc</name>
        <qualifiedname>OrbTrace::use_acc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="41" column="8" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orb_trace_1afd7bb20f6d3544e374c74ca048dccdaa" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OrbTrace::use_lev</definition>
        <argsstring></argsstring>
        <name>use_lev</name>
        <qualifiedname>OrbTrace::use_lev</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="43" column="8" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orb_trace_1a366b9fbd3ef9d63a214b55478ad6d2cc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OrbTrace::use_pot</definition>
        <argsstring></argsstring>
        <name>use_pot</name>
        <qualifiedname>OrbTrace::use_pot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="42" column="8" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="42" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_orb_trace_1a58efd5f23f71863e2c18213fdd250d88" prot="private" static="yes" mutable="no">
        <type>const std::set&lt; std::string &gt;</type>
        <definition>const std::set&lt;std::string&gt; OrbTrace::valid_keys</definition>
        <argsstring></argsstring>
        <name>valid_keys</name>
        <qualifiedname>OrbTrace::valid_keys</qualifiedname>
        <briefdescription>
<para>Valid keys for YAML configurations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="54" column="25" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="54" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_orb_trace_1addb52f79a730401e20c59e6e9abe943a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OrbTrace::initialize</definition>
        <argsstring>(void)</argsstring>
        <name>initialize</name>
        <qualifiedname>OrbTrace::initialize</qualifiedname>
        <reimplements refid="class_output_1ade7a25abbb901a224247fbbfa068f157">initialize</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Used to assign additional specific parameters, create storage, etc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="51" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_orb_trace_1a67780b3cad38f5b4b6662c56cad56a3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OrbTrace::OrbTrace</definition>
        <argsstring>(const YAML::Node &amp;conf)</argsstring>
        <name>OrbTrace</name>
        <qualifiedname>OrbTrace::OrbTrace</qualifiedname>
        <param>
          <type>const YAML::Node &amp;</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="62" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_orb_trace_1a885467d6278216bc2e46a3c8424c4b6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OrbTrace::Run</definition>
        <argsstring>(int nstep, int mstep, bool last)</argsstring>
        <name>Run</name>
        <qualifiedname>OrbTrace::Run</qualifiedname>
        <reimplements refid="class_output_1af71ace8955ee2741677a7fbaf268ab82">Run</reimplements>
        <param>
          <type>int</type>
          <declname>nstep</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mstep</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Generate the output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nstep</parametername>
</parameternamelist>
<parameterdescription>
<para>is the current time step used to decide whether or not to dump </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mstep</parametername>
</parameternamelist>
<parameterdescription>
<para>is the current multistep level to decide whether or not to dump multisteps </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last</parametername>
</parameternamelist>
<parameterdescription>
<para>should be true on final step to force phase space dump indepentently of whether or not the frequency criterion is met </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="72" column="8"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Log norb orbits at each interval</para>
<para>For best efficiency, particles to be traced should be on the root process.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>norb</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of orbits per node to follow</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbeg</parametername>
</parameternamelist>
<parameterdescription>
<para>is the offset in the bodies list for the first particle to trace.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nskip</parametername>
</parameternamelist>
<parameterdescription>
<para>is the interval between orbits beginning with nskip. If nskip is unspecified, <computeroutput>nskip=nbodies/norb</computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nint</parametername>
</parameternamelist>
<parameterdescription>
<para>is the frequency between file updates</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_acc</parametername>
</parameternamelist>
<parameterdescription>
<para>to output the acceleration</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_pot</parametername>
</parameternamelist>
<parameterdescription>
<para>to output the potential</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_lev</parametername>
</parameternamelist>
<parameterdescription>
<para>to output the multistep level</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orbitlist</parametername>
</parameternamelist>
<parameterdescription>
<para>is the list of particle numbers to trace</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>of the component to trace </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>OrbTrace</label>
        <link refid="class_orb_trace"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Output</label>
        <link refid="class_output"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>Component</label>
        <link refid="class_component"/>
        <childnode refid="4" relation="usage">
          <edgelabel>c0</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>force</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>orient</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>time_so_far</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>EL3</label>
        <link refid="class_e_l3"/>
      </node>
      <node id="1">
        <label>OrbTrace</label>
        <link refid="class_orb_trace"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>tcomp</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>Orient</label>
        <link refid="class_orient"/>
        <childnode refid="8" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Output</label>
        <link refid="class_output"/>
        <childnode refid="3" relation="usage">
          <edgelabel>stopWatch</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>PotAccel</label>
        <link refid="class_pot_accel"/>
        <childnode refid="6" relation="usage">
          <edgelabel>td</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>cC</edgelabel>
          <edgelabel>component</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Timer</label>
        <link refid="class_timer"/>
      </node>
      <node id="6">
        <label>thrd_pass_PotAccel</label>
        <link refid="structthrd__pass___pot_accel"/>
        <childnode refid="5" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/src/OrbTrace.H" line="31" column="1" bodyfile="/home/weinberg/Projects/EXP/src/OrbTrace.H" bodystart="32" bodyend="74"/>
    <listofallmembers>
      <member refid="class_output_1a0f16f4c45c70bbeffaad744b45eacdf5" prot="protected" virt="non-virtual"><scope>OrbTrace</scope><name>conf</name></member>
      <member refid="class_output_1aee441fea89e02b2858245ee28b9b025b" prot="protected" virt="non-virtual"><scope>OrbTrace</scope><name>current_keys</name></member>
      <member refid="class_orb_trace_1a4904b82695586154193df5b0f6129813" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>filename</name></member>
      <member refid="class_orb_trace_1a9779dc75badc9fd5b2b044ba4f218623" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>flags</name></member>
      <member refid="class_output_1a536938d67e94f7495a433f273db577cf" prot="public" virt="non-virtual"><scope>OrbTrace</scope><name>id</name></member>
      <member refid="class_orb_trace_1addb52f79a730401e20c59e6e9abe943a" prot="private" virt="virtual"><scope>OrbTrace</scope><name>initialize</name></member>
      <member refid="class_orb_trace_1a836db57c795ff64325f6f016249fb801" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>local</name></member>
      <member refid="class_orb_trace_1acc7654d19c49c359053e496b0593c6f6" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>nbeg</name></member>
      <member refid="class_orb_trace_1a193d912a01938bb111c04daee5131598" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>nbuf</name></member>
      <member refid="class_output_1a39eaed6fed933cc17bf987664aa7dabf" prot="protected" virt="non-virtual"><scope>OrbTrace</scope><name>nint</name></member>
      <member refid="class_output_1a598ba954d78d8328eb821ed309ed3618" prot="protected" virt="non-virtual"><scope>OrbTrace</scope><name>nintsub</name></member>
      <member refid="class_output_1a530b50b274e5edf4d8cc9588a94c3979" prot="protected" virt="non-virtual"><scope>OrbTrace</scope><name>nintsub_warning</name></member>
      <member refid="class_orb_trace_1abf316253b26847e999d98d0a8d0ff04a" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>norb</name></member>
      <member refid="class_orb_trace_1a0a0b568e0454aeb89a05f97a543e5e3e" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>nskip</name></member>
      <member refid="class_orb_trace_1afc27d67b14b6848651f7945db5a12a3d" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>orbitlist</name></member>
      <member refid="class_orb_trace_1a56daf771e7356b67c8d6639de918637e" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>orblist</name></member>
      <member refid="class_orb_trace_1a67780b3cad38f5b4b6662c56cad56a3f" prot="public" virt="non-virtual"><scope>OrbTrace</scope><name>OrbTrace</name></member>
      <member refid="class_output_1a12680d847644562a892fee224148729d" prot="public" virt="non-virtual"><scope>OrbTrace</scope><name>Output</name></member>
      <member refid="class_orb_trace_1a8213236086651a4f9574c91b1c75e098" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>pbuf</name></member>
      <member refid="class_orb_trace_1a83edfa294246b0a4cd87a2cd1d34f534" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>prev</name></member>
      <member refid="class_orb_trace_1a885467d6278216bc2e46a3c8424c4b6c" prot="public" virt="virtual"><scope>OrbTrace</scope><name>Run</name></member>
      <member refid="class_output_1a4bcd3bccc8d93387a70f94dea89f8a88" prot="protected" virt="non-virtual"><scope>OrbTrace</scope><name>stopWatch</name></member>
      <member refid="class_orb_trace_1a7e25ecf48de34e047dfd4b5c361afd5c" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>tcomp</name></member>
      <member refid="class_output_1a69f42df0c1eab6a81fb2346e59c66943" prot="protected" virt="non-virtual"><scope>OrbTrace</scope><name>timer</name></member>
      <member refid="class_output_1ad1c121a091c46c4c11ab76d90b1e39f9" prot="public" virt="non-virtual"><scope>OrbTrace</scope><name>unmatched</name></member>
      <member refid="class_orb_trace_1af4fcce1c4fd3ec56be003324de2ce5cf" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>use_acc</name></member>
      <member refid="class_orb_trace_1afd7bb20f6d3544e374c74ca048dccdaa" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>use_lev</name></member>
      <member refid="class_orb_trace_1a366b9fbd3ef9d63a214b55478ad6d2cc" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>use_pot</name></member>
      <member refid="class_orb_trace_1a58efd5f23f71863e2c18213fdd250d88" prot="private" virt="non-virtual"><scope>OrbTrace</scope><name>valid_keys</name></member>
      <member refid="class_output_1a0162ebdc8e5b13917788692fa9a753a0" prot="public" virt="virtual"><scope>OrbTrace</scope><name>~Output</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
