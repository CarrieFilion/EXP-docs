<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_out_frac" kind="class" language="C++" prot="public">
    <compoundname>OutFrac</compoundname>
    <basecompoundref refid="class_output" prot="public" virt="non-virtual">Output</basecompoundref>
    <includes refid="_out_frac_8_h" local="no">OutFrac.H</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_out_frac_1a497ca38450fc77f060333582574d7715" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string OutFrac::filename</definition>
        <argsstring></argsstring>
        <name>filename</name>
        <qualifiedname>OutFrac::filename</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutFrac.H" line="23" column="15" bodyfile="/home/weinberg/Projects/EXP/src/OutFrac.H" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_out_frac_1a352522c1076c942a3a5c060817519a22" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OutFrac::numQuant</definition>
        <argsstring></argsstring>
        <name>numQuant</name>
        <qualifiedname>OutFrac::numQuant</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutFrac.H" line="25" column="7" bodyfile="/home/weinberg/Projects/EXP/src/OutFrac.H" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_out_frac_1acdea4b058d0af170b53fb5342d316c24" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OutFrac::prev</definition>
        <argsstring></argsstring>
        <name>prev</name>
        <qualifiedname>OutFrac::prev</qualifiedname>
        <initializer>= -std::numeric_limits&lt;double&gt;::max()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutFrac.H" line="22" column="10" bodyfile="/home/weinberg/Projects/EXP/src/OutFrac.H" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_out_frac_1adbe7a649168cf47314f0d5f9edb2d689" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; OutFrac::Quant</definition>
        <argsstring></argsstring>
        <name>Quant</name>
        <qualifiedname>OutFrac::Quant</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutFrac.H" line="26" column="10" bodyfile="/home/weinberg/Projects/EXP/src/OutFrac.H" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_out_frac_1a6d394a6f4d0a7bb538a0497c9c10018c" prot="private" static="no" mutable="no">
        <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
        <definition>Component* OutFrac::tcomp</definition>
        <argsstring></argsstring>
        <name>tcomp</name>
        <qualifiedname>OutFrac::tcomp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutFrac.H" line="24" column="13" bodyfile="/home/weinberg/Projects/EXP/src/OutFrac.H" bodystart="24" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_out_frac_1ab02e2ffb275739e0c0d01bc99c286571" prot="private" static="yes" mutable="no">
        <type>const std::set&lt; std::string &gt;</type>
        <definition>const std::set&lt;std::string&gt; OutFrac::valid_keys</definition>
        <argsstring></argsstring>
        <name>valid_keys</name>
        <qualifiedname>OutFrac::valid_keys</qualifiedname>
        <briefdescription>
<para>Valid keys for YAML configurations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutFrac.H" line="31" column="25" bodyfile="/home/weinberg/Projects/EXP/src/OutFrac.H" bodystart="31" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_out_frac_1aa60ce9433e2403ea15760a189b850319" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OutFrac::initialize</definition>
        <argsstring>(void)</argsstring>
        <name>initialize</name>
        <qualifiedname>OutFrac::initialize</qualifiedname>
        <reimplements refid="class_output_1ade7a25abbb901a224247fbbfa068f157">initialize</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Used to assign additional specific parameters, create storage, etc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutFrac.H" line="28" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_out_frac_1a2cc365d101a8bef873e3dbcc9c17363c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OutFrac::OutFrac</definition>
        <argsstring>(const YAML::Node &amp;conf)</argsstring>
        <name>OutFrac</name>
        <qualifiedname>OutFrac::OutFrac</qualifiedname>
        <param>
          <type>const YAML::Node &amp;</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutFrac.H" line="36" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_out_frac_1af4b5d3506bf84c880ba82fe920760215" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OutFrac::Run</definition>
        <argsstring>(int nstep, int mstep, bool last)</argsstring>
        <name>Run</name>
        <qualifiedname>OutFrac::Run</qualifiedname>
        <reimplements refid="class_output_1af71ace8955ee2741677a7fbaf268ab82">Run</reimplements>
        <param>
          <type>int</type>
          <declname>nstep</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mstep</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Generate the output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nstep</parametername>
</parameternamelist>
<parameterdescription>
<para>is the current time step used to decide whether or not to dump </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last</parametername>
</parameternamelist>
<parameterdescription>
<para>should be true on final step to force phase space dump indepentently of whether or not the frequency criterion is met </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutFrac.H" line="45" column="8"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Dump mass fractions at each interval</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>of the fraction file</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>of the component to dump</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nint</parametername>
</parameternamelist>
<parameterdescription>
<para>is the frequency between file updates</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frac(n)</parametername>
</parameternamelist>
<parameterdescription>
<para>are the quantiles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>OutFrac</label>
        <link refid="class_out_frac"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Output</label>
        <link refid="class_output"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>Component</label>
        <link refid="class_component"/>
        <childnode refid="4" relation="usage">
          <edgelabel>c0</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>force</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>orient</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>time_so_far</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>EL3</label>
        <link refid="class_e_l3"/>
      </node>
      <node id="7">
        <label>Orient</label>
        <link refid="class_orient"/>
        <childnode refid="8" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>OutFrac</label>
        <link refid="class_out_frac"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>tcomp</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Output</label>
        <link refid="class_output"/>
        <childnode refid="3" relation="usage">
          <edgelabel>stopWatch</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>PotAccel</label>
        <link refid="class_pot_accel"/>
        <childnode refid="6" relation="usage">
          <edgelabel>td</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>cC</edgelabel>
          <edgelabel>component</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Timer</label>
        <link refid="class_timer"/>
      </node>
      <node id="6">
        <label>thrd_pass_PotAccel</label>
        <link refid="structthrd__pass___pot_accel"/>
        <childnode refid="5" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/src/OutFrac.H" line="17" column="1" bodyfile="/home/weinberg/Projects/EXP/src/OutFrac.H" bodystart="18" bodyend="47"/>
    <listofallmembers>
      <member refid="class_output_1a0f16f4c45c70bbeffaad744b45eacdf5" prot="protected" virt="non-virtual"><scope>OutFrac</scope><name>conf</name></member>
      <member refid="class_output_1aee441fea89e02b2858245ee28b9b025b" prot="protected" virt="non-virtual"><scope>OutFrac</scope><name>current_keys</name></member>
      <member refid="class_out_frac_1a497ca38450fc77f060333582574d7715" prot="private" virt="non-virtual"><scope>OutFrac</scope><name>filename</name></member>
      <member refid="class_output_1a536938d67e94f7495a433f273db577cf" prot="public" virt="non-virtual"><scope>OutFrac</scope><name>id</name></member>
      <member refid="class_out_frac_1aa60ce9433e2403ea15760a189b850319" prot="private" virt="virtual"><scope>OutFrac</scope><name>initialize</name></member>
      <member refid="class_output_1a39eaed6fed933cc17bf987664aa7dabf" prot="protected" virt="non-virtual"><scope>OutFrac</scope><name>nint</name></member>
      <member refid="class_output_1a598ba954d78d8328eb821ed309ed3618" prot="protected" virt="non-virtual"><scope>OutFrac</scope><name>nintsub</name></member>
      <member refid="class_output_1a530b50b274e5edf4d8cc9588a94c3979" prot="protected" virt="non-virtual"><scope>OutFrac</scope><name>nintsub_warning</name></member>
      <member refid="class_out_frac_1a352522c1076c942a3a5c060817519a22" prot="private" virt="non-virtual"><scope>OutFrac</scope><name>numQuant</name></member>
      <member refid="class_out_frac_1a2cc365d101a8bef873e3dbcc9c17363c" prot="public" virt="non-virtual"><scope>OutFrac</scope><name>OutFrac</name></member>
      <member refid="class_output_1a12680d847644562a892fee224148729d" prot="public" virt="non-virtual"><scope>OutFrac</scope><name>Output</name></member>
      <member refid="class_out_frac_1acdea4b058d0af170b53fb5342d316c24" prot="private" virt="non-virtual"><scope>OutFrac</scope><name>prev</name></member>
      <member refid="class_out_frac_1adbe7a649168cf47314f0d5f9edb2d689" prot="private" virt="non-virtual"><scope>OutFrac</scope><name>Quant</name></member>
      <member refid="class_out_frac_1af4b5d3506bf84c880ba82fe920760215" prot="public" virt="virtual"><scope>OutFrac</scope><name>Run</name></member>
      <member refid="class_output_1a4bcd3bccc8d93387a70f94dea89f8a88" prot="protected" virt="non-virtual"><scope>OutFrac</scope><name>stopWatch</name></member>
      <member refid="class_out_frac_1a6d394a6f4d0a7bb538a0497c9c10018c" prot="private" virt="non-virtual"><scope>OutFrac</scope><name>tcomp</name></member>
      <member refid="class_output_1a69f42df0c1eab6a81fb2346e59c66943" prot="protected" virt="non-virtual"><scope>OutFrac</scope><name>timer</name></member>
      <member refid="class_output_1ad1c121a091c46c4c11ab76d90b1e39f9" prot="public" virt="non-virtual"><scope>OutFrac</scope><name>unmatched</name></member>
      <member refid="class_out_frac_1ab02e2ffb275739e0c0d01bc99c286571" prot="private" virt="non-virtual"><scope>OutFrac</scope><name>valid_keys</name></member>
      <member refid="class_output_1a0162ebdc8e5b13917788692fa9a753a0" prot="public" virt="virtual"><scope>OutFrac</scope><name>~Output</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
