<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_p_r_1_1_p_particle" kind="class" language="C++" prot="public">
    <compoundname>PR::PParticle</compoundname>
    <basecompoundref refid="class_particle" prot="public" virt="non-virtual">Particle</basecompoundref>
    <includes refid="_particle_reader_8_h" local="no">ParticleReader.H</includes>
    <templateparamlist>
      <param>
        <type>typename real</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_p_r_1_1_p_particle_1adae50eeb905813146d42bed5c850bc58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PR::PParticle&lt; real &gt;::read</definition>
        <argsstring>(std::istream &amp;in, int pcount, list&lt; PSPstanza &gt;::iterator spos)</argsstring>
        <name>read</name>
        <qualifiedname>PR::PParticle::read</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pcount</declname>
        </param>
        <param>
          <type>list&lt; <ref refid="class_p_r_1_1_p_s_pstanza" kindref="compound">PSPstanza</ref> &gt;::iterator</type>
          <declname>spos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/ParticleReader.H" line="267" column="10" bodyfile="/home/weinberg/Projects/EXP/include/ParticleReader.H" bodystart="267" bodyend="309"/>
        <references refid="class_particle_1a04153827c29d7a278023801845f9c8f3" compoundref="include_2_particle_8_h" startline="52">Particle::dattrib</references>
        <references refid="class_particle_1a55c3bc6bd2f03824312414c219ee0d71" compoundref="include_2_particle_8_h" startline="49">Particle::iattrib</references>
        <references refid="class_particle_1a041051e4763a83554abed7304dfda4a7" compoundref="include_2_particle_8_h" startline="67">Particle::indx</references>
        <references refid="class_particle_1ae6d46dc24a6666d526f211151fecca5f" compoundref="include_2_particle_8_h" startline="31">Particle::mass</references>
        <references refid="class_particle_1a3606e8a85c0b5ef30d7cf2777907e58e" compoundref="include_2_particle_8_h" startline="34">Particle::pos</references>
        <references refid="class_particle_1a13bd0267040135a338f62130ca1614d6" compoundref="include_2_particle_8_h" startline="37">Particle::vel</references>
      </memberdef>
      <memberdef kind="function" id="class_p_r_1_1_p_particle_1ab9489dd2dd36e7537df98d3dea3744ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PR::PParticle&lt; real &gt;::skip</definition>
        <argsstring>(std::istream &amp;in, int pcount, list&lt; PSPstanza &gt;::iterator spos)</argsstring>
        <name>skip</name>
        <qualifiedname>PR::PParticle::skip</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pcount</declname>
        </param>
        <param>
          <type>list&lt; <ref refid="class_p_r_1_1_p_s_pstanza" kindref="compound">PSPstanza</ref> &gt;::iterator</type>
          <declname>spos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/ParticleReader.H" line="311" column="10" bodyfile="/home/weinberg/Projects/EXP/include/ParticleReader.H" bodystart="311" bodyend="320"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>PR::PParticle&lt; real &gt;</label>
        <link refid="class_p_r_1_1_p_particle"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Particle</label>
        <link refid="class_particle"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>PR::PParticle&lt; real &gt;</label>
        <link refid="class_p_r_1_1_p_particle"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Particle</label>
        <link refid="class_particle"/>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/include/ParticleReader.H" line="254" column="3" bodyfile="/home/weinberg/Projects/EXP/include/ParticleReader.H" bodystart="255" bodyend="322"/>
    <listofallmembers>
      <member refid="class_particle_1ac575fbf68c83530ee242ba22fb38a264" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>acc</name></member>
      <member refid="class_particle_1a1fb0b2da600a8ad44057823c19938515" prot="private" virt="non-virtual"><scope>PR::PParticle</scope><name>buffer</name></member>
      <member refid="class_particle_1a04153827c29d7a278023801845f9c8f3" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>dattrib</name></member>
      <member refid="class_particle_1a82e75d23385a26273d1d33fdde947a4a" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>defaultKey</name></member>
      <member refid="class_particle_1aab8165b0c94a793caa326da0b1a5ed60" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>dtreq</name></member>
      <member refid="class_particle_1a478372f50864a61ed194123ed219f721" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>effort</name></member>
      <member refid="class_particle_1adf9aa4abfe0f5205fd71755d80fa36f0" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>effort_default</name></member>
      <member refid="class_particle_1ab3e060354cd4e942646520e9af3fa341" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>getMPIBufSize</name></member>
      <member refid="class_particle_1a55c3bc6bd2f03824312414c219ee0d71" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>iattrib</name></member>
      <member refid="class_particle_1a041051e4763a83554abed7304dfda4a7" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>indx</name></member>
      <member refid="class_particle_1a40fcbe2d8647d560e2a7eb1227cf4808" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>key</name></member>
      <member refid="class_particle_1a01205d006724dc26a6f49758f2722382" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>level</name></member>
      <member refid="class_particle_1ae6d46dc24a6666d526f211151fecca5f" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>mass</name></member>
      <member refid="class_particle_1a40f4c7e248029d72e7714b7802d5e5e1" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>Particle</name></member>
      <member refid="class_particle_1a56a5ccec698415615a050e9bfd820b3a" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>Particle</name></member>
      <member refid="class_particle_1a875d390662507790e0b248f53bff2ad1" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>Particle</name></member>
      <member refid="class_particle_1a40f4c7e248029d72e7714b7802d5e5e1" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>Particle</name></member>
      <member refid="class_particle_1a65da555cae2b76c9a6476797f3bbec14" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>Particle</name></member>
      <member refid="class_particle_1a3606e8a85c0b5ef30d7cf2777907e58e" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>pos</name></member>
      <member refid="class_particle_1a235e3eb6c466429f43f4f4564e343724" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>pot</name></member>
      <member refid="class_particle_1afffdbb3da7a0222fddde253f974b5f8a" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>potext</name></member>
      <member refid="class_p_r_1_1_p_particle_1adae50eeb905813146d42bed5c850bc58" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>read</name></member>
      <member refid="class_particle_1ad619d82125defc278a08e2908b6115c7" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>readAscii</name></member>
      <member refid="class_particle_1a5522f47432b7ed4de4584dbea0ac12c7" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>readBinary</name></member>
      <member refid="class_particle_1a5c7aecc4ecec7c9e8c8b928bd80e35ea" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>scale</name></member>
      <member refid="class_particle_1a25f2943d2559c9b00e52595585022a47" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>skey</name></member>
      <member refid="class_p_r_1_1_p_particle_1ab9489dd2dd36e7537df98d3dea3744ce" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>skip</name></member>
      <member refid="class_particle_1a7cdcdaaa7c1177c733b888e9e60d0fb9" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>speciesKey</name></member>
      <member refid="class_particle_1a49d4f04b43b6200dd4cef28da20a739d" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>tree</name></member>
      <member refid="class_particle_1a13bd0267040135a338f62130ca1614d6" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>vel</name></member>
      <member refid="class_particle_1a63a4e5661ae98308893d86e33f059576" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>writeAscii</name></member>
      <member refid="class_particle_1a5bb1f74e19cebdb828f95af23bc386cf" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>writeBinary</name></member>
      <member refid="class_particle_1ac36f173dd3cf6b19a6e8bf8538fabf4b" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>writeBinaryBuffered</name></member>
      <member refid="class_particle_1a6a0d56643139eafef77b04372098e34a" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>writeBinaryMPI</name></member>
      <member refid="class_particle_1aeae52277bb1d013be9080d87d3b6a436" prot="public" virt="non-virtual"><scope>PR::PParticle</scope><name>writeBinaryThreaded</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
