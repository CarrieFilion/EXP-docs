<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_p_s_p" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>PSP</compoundname>
    <derivedcompoundref refid="class_p_s_pout" prot="public" virt="non-virtual">PSPout</derivedcompoundref>
    <derivedcompoundref refid="class_p_s_pout" prot="public" virt="non-virtual">PSPout</derivedcompoundref>
    <derivedcompoundref refid="class_p_s_pspl" prot="public" virt="non-virtual">PSPspl</derivedcompoundref>
    <derivedcompoundref refid="class_p_s_pspl" prot="public" virt="non-virtual">PSPspl</derivedcompoundref>
    <includes refid="_p_s_p2_8_h" local="no">PSP2.H</includes>
    <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_p_s_p_1a5de18018153d3ebc6878483423c39cc6" prot="protected" static="yes" mutable="no">
        <type>const unsigned long</type>
        <definition>static const unsigned long PSP::magic</definition>
        <argsstring></argsstring>
        <name>magic</name>
        <qualifiedname>PSP::magic</qualifiedname>
        <initializer>= 0xadbfabc0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="229" column="30" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1aa420e0d35ceaa543236b116a3509cd24" prot="protected" static="yes" mutable="no">
        <type>const unsigned long</type>
        <definition>static const unsigned long PSP::mmask</definition>
        <argsstring></argsstring>
        <name>mmask</name>
        <qualifiedname>PSP::mmask</qualifiedname>
        <initializer>= 0xf</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="230" column="30" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1a3db2dc47d3c7e19eee39f44f82bb69c4" prot="protected" static="yes" mutable="no">
        <type>const unsigned long</type>
        <definition>static const unsigned long PSP::nmask</definition>
        <argsstring></argsstring>
        <name>nmask</name>
        <qualifiedname>PSP::nmask</qualifiedname>
        <initializer>= ~<ref refid="class_p_s_p_1aa420e0d35ceaa543236b116a3509cd24" kindref="member">mmask</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="231" column="30" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="231" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_p_s_p_1ac243122a19a28e859083d362a940cd9c" prot="protected" static="no" mutable="no">
        <type><ref refid="class_p_s_pstanza" kindref="compound">PSPstanza</ref> *</type>
        <definition>PSPstanza * PSP::cur</definition>
        <argsstring></argsstring>
        <name>cur</name>
        <qualifiedname>PSP::cur</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="239" column="13" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="239" bodyend="-1"/>
        <referencedby refid="class_p_s_p_1a93484925bd1aee6e534ee7fdfa2e9311" compoundref="_p_s_p2_8_h" startline="284" endline="293">GetNamed</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1a16e6c80a44c4e9902616f3f85a885c37" prot="protected" static="no" mutable="no">
        <type><ref refid="class_master_header" kindref="compound">MasterHeader</ref></type>
        <definition>MasterHeader PSP::header</definition>
        <argsstring></argsstring>
        <name>header</name>
        <qualifiedname>PSP::header</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="233" column="16" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="233" bodyend="-1"/>
        <referencedby refid="class_p_s_p_1a0fa94201613e3a29a3c881b5372b06a6" compoundref="_p_s_p2_8_h" startline="278" endline="278">CurrentTime</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1a9120b778d2f1f85237e4000531a398b7" prot="protected" static="no" mutable="no">
        <type>std::ifstream</type>
        <definition>std::ifstream PSP::in</definition>
        <argsstring></argsstring>
        <name>in</name>
        <qualifiedname>PSP::in</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="244" column="17" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="244" bodyend="-1"/>
        <referencedby refid="class_p_s_p_1a7efdf4f078e2773413d838bf2c99c188" compoundref="_p_s_p2_8_h" startline="259" endline="263">init</referencedby>
        <referencedby refid="class_p_s_p_1a9af6f9e5c41c73ae19ad840d2ae97d25" compoundref="_p_s_p2_8_h" startline="275" endline="275">~PSP</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1acf16e5ddf7cec3471faa970e98c18525" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float PSP::mtot</definition>
        <argsstring></argsstring>
        <name>mtot</name>
        <qualifiedname>PSP::mtot</qualifiedname>
        <briefdescription>
<para>Temporaries for stanza statistics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="247" column="9" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1a5cafa14a12e55cce6f446a3d52aa9ca3" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string PSP::new_dir</definition>
        <argsstring></argsstring>
        <name>new_dir</name>
        <qualifiedname>PSP::new_dir</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="256" column="15" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1a68c3dbf899baec8255f4af26e534cee9" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_particle" kindref="compound">SParticle</ref></type>
        <definition>SParticle PSP::part</definition>
        <argsstring></argsstring>
        <name>part</name>
        <qualifiedname>PSP::part</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="241" column="13" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="241" bodyend="-1"/>
        <referencedby refid="class_p_s_p_1a5ea1bb15edde30f2976ad9887d6ed3d1" compoundref="_p_s_p_8_h" startline="315" endline="316">operator!=</referencedby>
        <referencedby refid="class_p_s_p_1a5be729fe6610014a5300aed5bdd6c97e" compoundref="_p_s_p_8_h" startline="312" endline="312">operator++</referencedby>
        <referencedby refid="class_p_s_p_1a3becaa90556a364f94574e3f0cdbc8e3" compoundref="_p_s_p_8_h" startline="313" endline="314">operator==</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1ae472fd355d5a72505917b8f1a878c738" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int PSP::pcount</definition>
        <argsstring></argsstring>
        <name>pcount</name>
        <qualifiedname>PSP::pcount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="242" column="7" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1a13ab03638eda2112ca35865c82b52934" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; PSP::pmax</definition>
        <argsstring></argsstring>
        <name>pmax</name>
        <qualifiedname>PSP::pmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="248" column="25" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1ac5c8a08a13b0f8d66e4dcfe63cc1d511" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; PSP::pmed</definition>
        <argsstring></argsstring>
        <name>pmed</name>
        <qualifiedname>PSP::pmed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="248" column="20" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1a3f18fa7ed15530d6dadb0e147113e387" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; PSP::pmin</definition>
        <argsstring></argsstring>
        <name>pmin</name>
        <qualifiedname>PSP::pmin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="248" column="15" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1a7bad6b96c2370bc3bb7abf3cd37f7de4" prot="protected" static="no" mutable="no">
        <type>list&lt; <ref refid="class_p_s_pstanza" kindref="compound">PSPstanza</ref> &gt;::iterator</type>
        <definition>list&lt;PSPstanza&gt;::iterator PSP::spos</definition>
        <argsstring></argsstring>
        <name>spos</name>
        <qualifiedname>PSP::spos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="238" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="238" bodyend="-1"/>
        <referencedby refid="class_p_s_p_1a93484925bd1aee6e534ee7fdfa2e9311" compoundref="_p_s_p2_8_h" startline="284" endline="293">GetNamed</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1a305ce18ca9c87c48bacf025fbc8749b4" prot="protected" static="no" mutable="no">
        <type>std::list&lt; <ref refid="class_p_s_pstanza" kindref="compound">PSPstanza</ref> &gt;::iterator</type>
        <definition>std::list&lt;PSPstanza&gt;::iterator PSP::spos</definition>
        <argsstring></argsstring>
        <name>spos</name>
        <qualifiedname>PSP::spos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="238" column="24" bodyfile="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1a655b102c58695d176811f6b9e16fcd76" prot="protected" static="no" mutable="no">
        <type>list&lt; <ref refid="class_p_s_pstanza" kindref="compound">PSPstanza</ref> &gt;</type>
        <definition>list&lt;PSPstanza&gt; PSP::stanzas</definition>
        <argsstring></argsstring>
        <name>stanzas</name>
        <qualifiedname>PSP::stanzas</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="237" column="8" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="237" bodyend="-1"/>
        <referencedby refid="class_p_s_p_1a93484925bd1aee6e534ee7fdfa2e9311" compoundref="_p_s_p2_8_h" startline="284" endline="293">GetNamed</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1a0f0f7c13568ccab0cf2aaca433e38fda" prot="protected" static="no" mutable="no">
        <type>std::list&lt; <ref refid="class_p_s_pstanza" kindref="compound">PSPstanza</ref> &gt;</type>
        <definition>std::list&lt;PSPstanza&gt; PSP::stanzas</definition>
        <argsstring></argsstring>
        <name>stanzas</name>
        <qualifiedname>PSP::stanzas</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="237" column="13" bodyfile="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1ac41847620427c5c925c3785406ee1219" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PSP::VERBOSE</definition>
        <argsstring></argsstring>
        <name>VERBOSE</name>
        <qualifiedname>PSP::VERBOSE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="235" column="8" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1adefeff8d008510d290fe86861a15f966" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; PSP::vmax</definition>
        <argsstring></argsstring>
        <name>vmax</name>
        <qualifiedname>PSP::vmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="249" column="25" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1a912a4ecef2f5011e96c7f837ff18d6c2" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; PSP::vmed</definition>
        <argsstring></argsstring>
        <name>vmed</name>
        <qualifiedname>PSP::vmed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="249" column="20" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_p_s_p_1a07e18a1a45d705e9e82360dd8abd093b" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; PSP::vmin</definition>
        <argsstring></argsstring>
        <name>vmin</name>
        <qualifiedname>PSP::vmin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="249" column="15" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="249" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_p_s_p_1a4414d3fc0c276655e781e9289ce74e71" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PSP::check_dirname</definition>
        <argsstring>()</argsstring>
        <name>check_dirname</name>
        <qualifiedname>PSP::check_dirname</qualifiedname>
        <briefdescription>
<para>Append &apos;/&apos; if necessary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="255" column="8"/>
        <referencedby refid="class_p_s_p_1ac6d4743f819bdea0568b8d9df184c45e" compoundref="_p_s_p2_8_h" startline="271" endline="272">PSP</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a4414d3fc0c276655e781e9289ce74e71" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PSP::check_dirname</definition>
        <argsstring>()</argsstring>
        <name>check_dirname</name>
        <qualifiedname>PSP::check_dirname</qualifiedname>
        <briefdescription>
<para>Append &apos;/&apos; if necessary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="255" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1abe89d646d7a19b2cb144bbb7766696c8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PSP::ComputeStats</definition>
        <argsstring>()</argsstring>
        <name>ComputeStats</name>
        <qualifiedname>PSP::ComputeStats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="250" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1abe89d646d7a19b2cb144bbb7766696c8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PSP::ComputeStats</definition>
        <argsstring>()</argsstring>
        <name>ComputeStats</name>
        <qualifiedname>PSP::ComputeStats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="250" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a7efdf4f078e2773413d838bf2c99c188" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PSP::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>PSP::init</qualifiedname>
        <briefdescription>
<para>Stream init. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="259" column="8" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="259" bodyend="263"/>
        <references refid="class_p_s_p_1a9120b778d2f1f85237e4000531a398b7" compoundref="_p_s_p2_8_h" startline="244">in</references>
        <referencedby refid="class_p_s_p_1a03a6fe03fcc607682fbaf29cc821d3c8" compoundref="_p_s_p2_8_h" startline="268" endline="268">PSP</referencedby>
        <referencedby refid="class_p_s_p_1ac6d4743f819bdea0568b8d9df184c45e" compoundref="_p_s_p2_8_h" startline="271" endline="272">PSP</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a7efdf4f078e2773413d838bf2c99c188" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PSP::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>PSP::init</qualifiedname>
        <briefdescription>
<para>Stream init. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="259" column="8" bodyfile="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" bodystart="259" bodyend="263"/>
        <references refid="class_p_s_p_1a9120b778d2f1f85237e4000531a398b7" compoundref="_p_s_p2_8_h" startline="244">in</references>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a3b5328f0e732e5fd4e60339c7e81aa44" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PSP::write_binary</definition>
        <argsstring>(std::ostream &amp;out, list&lt; PSPstanza &gt;::iterator its, bool real4)</argsstring>
        <name>write_binary</name>
        <qualifiedname>PSP::write_binary</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>list&lt; <ref refid="class_p_s_pstanza" kindref="compound">PSPstanza</ref> &gt;::iterator</type>
          <declname>its</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>real4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="251" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1af76c58f257d5dcf8461886c7fde94342" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PSP::write_binary</definition>
        <argsstring>(std::ostream &amp;out, std::list&lt; PSPstanza &gt;::iterator its, bool real4)</argsstring>
        <name>write_binary</name>
        <qualifiedname>PSP::write_binary</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::list&lt; <ref refid="class_p_s_pstanza" kindref="compound">PSPstanza</ref> &gt;::iterator</type>
          <declname>its</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>real4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="251" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_p_s_p_1a2aafae2e71f5d928a3a2c9075ebfd72f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_s_particle" kindref="compound">SParticle</ref> *</type>
        <definition>virtual SParticle * PSP::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>PSP::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define necessary member functions to be a valid container iterator </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="310" column="21" bodyfile="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" bodystart="310" bodyend="310"/>
        <references refid="class_p_s_p_1a6bdb813865838e6b5118479b8a8dc863">GetParticle</references>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a0fa94201613e3a29a3c881b5372b06a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double PSP::CurrentTime</definition>
        <argsstring>()</argsstring>
        <name>CurrentTime</name>
        <qualifiedname>PSP::CurrentTime</qualifiedname>
        <briefdescription>
<para>Get snapshot time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="278" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="278" bodyend="278"/>
        <references refid="class_p_s_p_1a16e6c80a44c4e9902616f3f85a885c37" compoundref="_p_s_p2_8_h" startline="233">header</references>
        <references refid="class_master_header_1a57c58e93be3ab14b4e3595078eb0a0be" compoundref="header_8_h" startline="17">MasterHeader::time</references>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a0fa94201613e3a29a3c881b5372b06a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double PSP::CurrentTime</definition>
        <argsstring>()</argsstring>
        <name>CurrentTime</name>
        <qualifiedname>PSP::CurrentTime</qualifiedname>
        <briefdescription>
<para>Get snapshot time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="278" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" bodystart="278" bodyend="278"/>
        <references refid="class_p_s_p_1a16e6c80a44c4e9902616f3f85a885c37" compoundref="_p_s_p2_8_h" startline="233">header</references>
        <references refid="class_master_header_1a57c58e93be3ab14b4e3595078eb0a0be" compoundref="header_8_h" startline="17">MasterHeader::time</references>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a75ffb3e202683386b7b9646afb349213" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_s_particle" kindref="compound">SParticle</ref> *</type>
        <definition>virtual SParticle * PSP::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>PSP::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="311" column="21" bodyfile="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" bodystart="311" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a93484925bd1aee6e534ee7fdfa2e9311" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_p_s_pstanza" kindref="compound">PSPstanza</ref> *</type>
        <definition>virtual PSPstanza * PSP::GetNamed</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>GetNamed</name>
        <qualifiedname>PSP::GetNamed</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Set stanza to name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="284" column="21" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="284" bodyend="293"/>
        <references refid="class_p_s_p_1ac243122a19a28e859083d362a940cd9c" compoundref="_p_s_p2_8_h" startline="239">cur</references>
        <references refid="class_p_s_pstanza_1af7488c06bf74a6cd75d0f905913d667d" compoundref="_p_s_p2_8_h" startline="23">PSPstanza::name</references>
        <references refid="class_p_s_p_1a7bad6b96c2370bc3bb7abf3cd37f7de4" compoundref="_p_s_p2_8_h" startline="238">spos</references>
        <references refid="class_p_s_p_1a655b102c58695d176811f6b9e16fcd76" compoundref="_p_s_p2_8_h" startline="237">stanzas</references>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a93484925bd1aee6e534ee7fdfa2e9311" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_p_s_pstanza" kindref="compound">PSPstanza</ref> *</type>
        <definition>virtual PSPstanza * PSP::GetNamed</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>GetNamed</name>
        <qualifiedname>PSP::GetNamed</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Set stanza to name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="284" column="21" bodyfile="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" bodystart="284" bodyend="293"/>
        <references refid="class_p_s_p_1ac243122a19a28e859083d362a940cd9c" compoundref="_p_s_p2_8_h" startline="239">cur</references>
        <references refid="class_p_s_pstanza_1af7488c06bf74a6cd75d0f905913d667d" compoundref="_p_s_p2_8_h" startline="23">PSPstanza::name</references>
        <references refid="class_p_s_p_1a7bad6b96c2370bc3bb7abf3cd37f7de4" compoundref="_p_s_p2_8_h" startline="238">spos</references>
        <references refid="class_p_s_p_1a655b102c58695d176811f6b9e16fcd76" compoundref="_p_s_p2_8_h" startline="237">stanzas</references>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a6bdb813865838e6b5118479b8a8dc863" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_s_particle" kindref="compound">SParticle</ref> *</type>
        <definition>virtual SParticle * PSP::GetParticle</definition>
        <argsstring>()=0</argsstring>
        <name>GetParticle</name>
        <qualifiedname>PSP::GetParticle</qualifiedname>
        <reimplementedby refid="class_p_s_pout_1a315c5defe2068ac25a9e634e2c0406f1">GetParticle</reimplementedby>
        <reimplementedby refid="class_p_s_pspl_1a5fba477a148cda6c52d37a9c020a7dbb">GetParticle</reimplementedby>
        <reimplementedby refid="class_p_s_pout_1a315c5defe2068ac25a9e634e2c0406f1">GetParticle</reimplementedby>
        <reimplementedby refid="class_p_s_pspl_1a5fba477a148cda6c52d37a9c020a7dbb">GetParticle</reimplementedby>
        <briefdescription>
<para>Reset to beginning of particles for this component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="302" column="21"/>
        <referencedby refid="class_p_s_p_1a2aafae2e71f5d928a3a2c9075ebfd72f" compoundref="_p_s_p_8_h" startline="310" endline="310">begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a6bdb813865838e6b5118479b8a8dc863" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_s_particle" kindref="compound">SParticle</ref> *</type>
        <definition>virtual SParticle * PSP::GetParticle</definition>
        <argsstring>()=0</argsstring>
        <name>GetParticle</name>
        <qualifiedname>PSP::GetParticle</qualifiedname>
        <reimplementedby refid="class_p_s_pout_1a315c5defe2068ac25a9e634e2c0406f1">GetParticle</reimplementedby>
        <reimplementedby refid="class_p_s_pspl_1a5fba477a148cda6c52d37a9c020a7dbb">GetParticle</reimplementedby>
        <reimplementedby refid="class_p_s_pout_1a315c5defe2068ac25a9e634e2c0406f1">GetParticle</reimplementedby>
        <reimplementedby refid="class_p_s_pspl_1a5fba477a148cda6c52d37a9c020a7dbb">GetParticle</reimplementedby>
        <briefdescription>
<para>Reset to beginning of particles for this component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="302" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a080aad64bc28ca28412c97263823a0ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_p_s_pstanza" kindref="compound">PSPstanza</ref> *</type>
        <definition>virtual PSPstanza * PSP::GetStanza</definition>
        <argsstring>()</argsstring>
        <name>GetStanza</name>
        <qualifiedname>PSP::GetStanza</qualifiedname>
        <briefdescription>
<para>Reset to beginning of stanza list and return null if no stanzas. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="296" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a080aad64bc28ca28412c97263823a0ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_p_s_pstanza" kindref="compound">PSPstanza</ref> *</type>
        <definition>virtual PSPstanza * PSP::GetStanza</definition>
        <argsstring>()</argsstring>
        <name>GetStanza</name>
        <qualifiedname>PSP::GetStanza</qualifiedname>
        <briefdescription>
<para>Reset to beginning of stanza list and return null if no stanzas. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="296" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a1260d1db1a09a117be62692e34cf7bd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_s_particle" kindref="compound">SParticle</ref> *</type>
        <definition>virtual SParticle * PSP::NextParticle</definition>
        <argsstring>()=0</argsstring>
        <name>NextParticle</name>
        <qualifiedname>PSP::NextParticle</qualifiedname>
        <reimplementedby refid="class_p_s_pout_1ad4f298bce6c3c72e5963c5751c427916">NextParticle</reimplementedby>
        <reimplementedby refid="class_p_s_pspl_1a4f8bca666da7b2e5565964538ddaa886">NextParticle</reimplementedby>
        <reimplementedby refid="class_p_s_pout_1ad4f298bce6c3c72e5963c5751c427916">NextParticle</reimplementedby>
        <reimplementedby refid="class_p_s_pspl_1a4f8bca666da7b2e5565964538ddaa886">NextParticle</reimplementedby>
        <briefdescription>
<para>Get next particle and return null at end. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="305" column="21"/>
        <referencedby refid="class_p_s_p_1a5be729fe6610014a5300aed5bdd6c97e" compoundref="_p_s_p_8_h" startline="312" endline="312">operator++</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a1260d1db1a09a117be62692e34cf7bd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_s_particle" kindref="compound">SParticle</ref> *</type>
        <definition>virtual SParticle * PSP::NextParticle</definition>
        <argsstring>()=0</argsstring>
        <name>NextParticle</name>
        <qualifiedname>PSP::NextParticle</qualifiedname>
        <reimplementedby refid="class_p_s_pout_1ad4f298bce6c3c72e5963c5751c427916">NextParticle</reimplementedby>
        <reimplementedby refid="class_p_s_pspl_1a4f8bca666da7b2e5565964538ddaa886">NextParticle</reimplementedby>
        <reimplementedby refid="class_p_s_pout_1ad4f298bce6c3c72e5963c5751c427916">NextParticle</reimplementedby>
        <reimplementedby refid="class_p_s_pspl_1a4f8bca666da7b2e5565964538ddaa886">NextParticle</reimplementedby>
        <briefdescription>
<para>Get next particle and return null at end. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="305" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1aaa3c4a5f503b26e2ed91e6fb8ffc38ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_p_s_pstanza" kindref="compound">PSPstanza</ref> *</type>
        <definition>virtual PSPstanza * PSP::NextStanza</definition>
        <argsstring>()</argsstring>
        <name>NextStanza</name>
        <qualifiedname>PSP::NextStanza</qualifiedname>
        <briefdescription>
<para>Get next stanza in list and return null at end;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="299" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1aaa3c4a5f503b26e2ed91e6fb8ffc38ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_p_s_pstanza" kindref="compound">PSPstanza</ref> *</type>
        <definition>virtual PSPstanza * PSP::NextStanza</definition>
        <argsstring>()</argsstring>
        <name>NextStanza</name>
        <qualifiedname>PSP::NextStanza</qualifiedname>
        <briefdescription>
<para>Get next stanza in list and return null at end;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="299" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a5ea1bb15edde30f2976ad9887d6ed3d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool PSP::operator!=</definition>
        <argsstring>(SParticle *const &amp;other)</argsstring>
        <name>operator!=</name>
        <qualifiedname>PSP::operator!=</qualifiedname>
        <param>
          <type><ref refid="class_s_particle" kindref="compound">SParticle</ref> *const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="315" column="16" bodyfile="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" bodystart="315" bodyend="316"/>
        <references refid="class_p_s_p_1a68c3dbf899baec8255f4af26e534cee9" compoundref="_p_s_p2_8_h" startline="241">part</references>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a5be729fe6610014a5300aed5bdd6c97e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_s_particle" kindref="compound">SParticle</ref> *</type>
        <definition>virtual SParticle * PSP::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <qualifiedname>PSP::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="312" column="21" bodyfile="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" bodystart="312" bodyend="312"/>
        <references refid="class_p_s_p_1a1260d1db1a09a117be62692e34cf7bd8">NextParticle</references>
        <references refid="class_p_s_p_1a68c3dbf899baec8255f4af26e534cee9" compoundref="_p_s_p2_8_h" startline="241">part</references>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a3becaa90556a364f94574e3f0cdbc8e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool PSP::operator==</definition>
        <argsstring>(SParticle *const &amp;other)</argsstring>
        <name>operator==</name>
        <qualifiedname>PSP::operator==</qualifiedname>
        <param>
          <type><ref refid="class_s_particle" kindref="compound">SParticle</ref> *const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="313" column="16" bodyfile="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" bodystart="313" bodyend="314"/>
        <references refid="class_p_s_p_1a68c3dbf899baec8255f4af26e534cee9" compoundref="_p_s_p2_8_h" startline="241">part</references>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a0d40b61dd7404d13d8d14ea8cdf15de3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PSP::PrintSummary</definition>
        <argsstring>(ostream &amp;out, bool stats=false, bool timeonly=false)</argsstring>
        <name>PrintSummary</name>
        <qualifiedname>PSP::PrintSummary</qualifiedname>
        <param>
          <type>ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>stats</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>timeonly</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Print summary phase-space info. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="281" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a6b3a0cb0a82c573c806361375ad75ab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PSP::PrintSummary</definition>
        <argsstring>(std::ostream &amp;out, bool stats=false, bool timeonly=false)</argsstring>
        <name>PrintSummary</name>
        <qualifiedname>PSP::PrintSummary</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>stats</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>timeonly</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Print summary phase-space info. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="281" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a03a6fe03fcc607682fbaf29cc821d3c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PSP::PSP</definition>
        <argsstring>(bool verbose)</argsstring>
        <name>PSP</name>
        <qualifiedname>PSP::PSP</qualifiedname>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="268" column="3" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="268" bodyend="268"/>
        <references refid="class_p_s_p_1a7efdf4f078e2773413d838bf2c99c188" compoundref="_p_s_p2_8_h" startline="259" endline="263">init</references>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a03a6fe03fcc607682fbaf29cc821d3c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PSP::PSP</definition>
        <argsstring>(bool verbose)</argsstring>
        <name>PSP</name>
        <qualifiedname>PSP::PSP</qualifiedname>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="268" column="3" bodyfile="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" bodystart="268" bodyend="268"/>
        <references refid="class_p_s_p_1a7efdf4f078e2773413d838bf2c99c188" compoundref="_p_s_p2_8_h" startline="259" endline="263">init</references>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1ac6d4743f819bdea0568b8d9df184c45e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PSP::PSP</definition>
        <argsstring>(bool verbose, std::string new_dir)</argsstring>
        <name>PSP</name>
        <qualifiedname>PSP::PSP</qualifiedname>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>new_dir</declname>
        </param>
        <briefdescription>
<para>Constructor specifying current working data directory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="271" column="3" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="271" bodyend="272"/>
        <references refid="class_p_s_p_1a4414d3fc0c276655e781e9289ce74e71">check_dirname</references>
        <references refid="class_p_s_p_1a7efdf4f078e2773413d838bf2c99c188" compoundref="_p_s_p2_8_h" startline="259" endline="263">init</references>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1ac6d4743f819bdea0568b8d9df184c45e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PSP::PSP</definition>
        <argsstring>(bool verbose, std::string new_dir)</argsstring>
        <name>PSP</name>
        <qualifiedname>PSP::PSP</qualifiedname>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>new_dir</declname>
        </param>
        <briefdescription>
<para>Constructor specifying current working data directory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="271" column="3" bodyfile="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" bodystart="271" bodyend="272"/>
        <references refid="class_p_s_p_1a4414d3fc0c276655e781e9289ce74e71">check_dirname</references>
        <references refid="class_p_s_p_1a7efdf4f078e2773413d838bf2c99c188" compoundref="_p_s_p2_8_h" startline="259" endline="263">init</references>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a6faf9fda5ed3f97e1c1d497418692bb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PSP::writePSP</definition>
        <argsstring>(std::ostream &amp;out, bool real4)</argsstring>
        <name>writePSP</name>
        <qualifiedname>PSP::writePSP</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>real4</declname>
        </param>
        <briefdescription>
<para>Write a new <ref refid="class_p_s_p" kindref="compound">PSP</ref> file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="308" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a6faf9fda5ed3f97e1c1d497418692bb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PSP::writePSP</definition>
        <argsstring>(std::ostream &amp;out, bool real4)</argsstring>
        <name>writePSP</name>
        <qualifiedname>PSP::writePSP</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>real4</declname>
        </param>
        <briefdescription>
<para>Write a new <ref refid="class_p_s_p" kindref="compound">PSP</ref> file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="320" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a9af6f9e5c41c73ae19ad840d2ae97d25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual PSP::~PSP</definition>
        <argsstring>()</argsstring>
        <name>~PSP</name>
        <qualifiedname>PSP::~PSP</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="275" column="11" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="275" bodyend="275"/>
        <references refid="class_p_s_p_1a9120b778d2f1f85237e4000531a398b7" compoundref="_p_s_p2_8_h" startline="244">in</references>
      </memberdef>
      <memberdef kind="function" id="class_p_s_p_1a9af6f9e5c41c73ae19ad840d2ae97d25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual PSP::~PSP</definition>
        <argsstring>()</argsstring>
        <name>~PSP</name>
        <qualifiedname>PSP::~PSP</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="275" column="11" bodyfile="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" bodystart="275" bodyend="275"/>
        <references refid="class_p_s_p_1a9120b778d2f1f85237e4000531a398b7" compoundref="_p_s_p2_8_h" startline="244">in</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_p_s_p_1ac771aabc04e43d59c60dbf69a1970c43" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_p_s_p" kindref="compound">PSP</ref> &gt;</type>
        <definition>static std::shared_ptr&lt; PSP &gt; PSP::getPSP</definition>
        <argsstring>(const std::string &amp;file, const std::string dir=&quot;&quot;, bool verbose=false)</argsstring>
        <name>getPSP</name>
        <qualifiedname>PSP::getPSP</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>dir</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para><ref refid="class_p_s_p" kindref="compound">PSP</ref> factory: choose type based on file name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/PhaseSpace/PSP.H" line="324" column="19"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>PSP</label>
        <link refid="class_p_s_p"/>
      </node>
      <node id="2">
        <label>PSPout</label>
        <link refid="class_p_s_pout"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>PSPspl</label>
        <link refid="class_p_s_pspl"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>ComponentHeader</label>
        <link refid="class_component_header"/>
      </node>
      <node id="2">
        <label>MasterHeader</label>
        <link refid="class_master_header"/>
      </node>
      <node id="1">
        <label>PSP</label>
        <link refid="class_p_s_p"/>
        <childnode refid="2" relation="usage">
          <edgelabel>header</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>cur</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>part</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>PSPstanza</label>
        <link refid="class_p_s_pstanza"/>
        <childnode refid="4" relation="usage">
          <edgelabel>comp</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>SParticle</label>
        <link refid="class_s_particle"/>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" line="224" column="1" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/PSP2.H" bodystart="225" bodyend="310"/>
    <listofallmembers>
      <member refid="class_p_s_p_1a2aafae2e71f5d928a3a2c9075ebfd72f" prot="public" virt="virtual"><scope>PSP</scope><name>begin</name></member>
      <member refid="class_p_s_p_1a4414d3fc0c276655e781e9289ce74e71" prot="protected" virt="non-virtual"><scope>PSP</scope><name>check_dirname</name></member>
      <member refid="class_p_s_p_1a4414d3fc0c276655e781e9289ce74e71" prot="protected" virt="non-virtual"><scope>PSP</scope><name>check_dirname</name></member>
      <member refid="class_p_s_p_1abe89d646d7a19b2cb144bbb7766696c8" prot="protected" virt="non-virtual"><scope>PSP</scope><name>ComputeStats</name></member>
      <member refid="class_p_s_p_1abe89d646d7a19b2cb144bbb7766696c8" prot="protected" virt="non-virtual"><scope>PSP</scope><name>ComputeStats</name></member>
      <member refid="class_p_s_p_1ac243122a19a28e859083d362a940cd9c" prot="protected" virt="non-virtual"><scope>PSP</scope><name>cur</name></member>
      <member refid="class_p_s_p_1a0fa94201613e3a29a3c881b5372b06a6" prot="public" virt="non-virtual"><scope>PSP</scope><name>CurrentTime</name></member>
      <member refid="class_p_s_p_1a0fa94201613e3a29a3c881b5372b06a6" prot="public" virt="non-virtual"><scope>PSP</scope><name>CurrentTime</name></member>
      <member refid="class_p_s_p_1a75ffb3e202683386b7b9646afb349213" prot="public" virt="virtual"><scope>PSP</scope><name>end</name></member>
      <member refid="class_p_s_p_1a93484925bd1aee6e534ee7fdfa2e9311" prot="public" virt="virtual"><scope>PSP</scope><name>GetNamed</name></member>
      <member refid="class_p_s_p_1a93484925bd1aee6e534ee7fdfa2e9311" prot="public" virt="virtual"><scope>PSP</scope><name>GetNamed</name></member>
      <member refid="class_p_s_p_1a6bdb813865838e6b5118479b8a8dc863" prot="public" virt="pure-virtual"><scope>PSP</scope><name>GetParticle</name></member>
      <member refid="class_p_s_p_1a6bdb813865838e6b5118479b8a8dc863" prot="public" virt="pure-virtual"><scope>PSP</scope><name>GetParticle</name></member>
      <member refid="class_p_s_p_1ac771aabc04e43d59c60dbf69a1970c43" prot="public" virt="non-virtual"><scope>PSP</scope><name>getPSP</name></member>
      <member refid="class_p_s_p_1a080aad64bc28ca28412c97263823a0ee" prot="public" virt="virtual"><scope>PSP</scope><name>GetStanza</name></member>
      <member refid="class_p_s_p_1a080aad64bc28ca28412c97263823a0ee" prot="public" virt="virtual"><scope>PSP</scope><name>GetStanza</name></member>
      <member refid="class_p_s_p_1a16e6c80a44c4e9902616f3f85a885c37" prot="protected" virt="non-virtual"><scope>PSP</scope><name>header</name></member>
      <member refid="class_p_s_p_1a9120b778d2f1f85237e4000531a398b7" prot="protected" virt="non-virtual"><scope>PSP</scope><name>in</name></member>
      <member refid="class_p_s_p_1a7efdf4f078e2773413d838bf2c99c188" prot="protected" virt="non-virtual"><scope>PSP</scope><name>init</name></member>
      <member refid="class_p_s_p_1a7efdf4f078e2773413d838bf2c99c188" prot="protected" virt="non-virtual"><scope>PSP</scope><name>init</name></member>
      <member refid="class_p_s_p_1a5de18018153d3ebc6878483423c39cc6" prot="protected" virt="non-virtual"><scope>PSP</scope><name>magic</name></member>
      <member refid="class_p_s_p_1aa420e0d35ceaa543236b116a3509cd24" prot="protected" virt="non-virtual"><scope>PSP</scope><name>mmask</name></member>
      <member refid="class_p_s_p_1acf16e5ddf7cec3471faa970e98c18525" prot="protected" virt="non-virtual"><scope>PSP</scope><name>mtot</name></member>
      <member refid="class_p_s_p_1a5cafa14a12e55cce6f446a3d52aa9ca3" prot="protected" virt="non-virtual"><scope>PSP</scope><name>new_dir</name></member>
      <member refid="class_p_s_p_1a1260d1db1a09a117be62692e34cf7bd8" prot="public" virt="pure-virtual"><scope>PSP</scope><name>NextParticle</name></member>
      <member refid="class_p_s_p_1a1260d1db1a09a117be62692e34cf7bd8" prot="public" virt="pure-virtual"><scope>PSP</scope><name>NextParticle</name></member>
      <member refid="class_p_s_p_1aaa3c4a5f503b26e2ed91e6fb8ffc38ac" prot="public" virt="virtual"><scope>PSP</scope><name>NextStanza</name></member>
      <member refid="class_p_s_p_1aaa3c4a5f503b26e2ed91e6fb8ffc38ac" prot="public" virt="virtual"><scope>PSP</scope><name>NextStanza</name></member>
      <member refid="class_p_s_p_1a3db2dc47d3c7e19eee39f44f82bb69c4" prot="protected" virt="non-virtual"><scope>PSP</scope><name>nmask</name></member>
      <member refid="class_p_s_p_1a5ea1bb15edde30f2976ad9887d6ed3d1" prot="public" virt="virtual"><scope>PSP</scope><name>operator!=</name></member>
      <member refid="class_p_s_p_1a5be729fe6610014a5300aed5bdd6c97e" prot="public" virt="virtual"><scope>PSP</scope><name>operator++</name></member>
      <member refid="class_p_s_p_1a3becaa90556a364f94574e3f0cdbc8e3" prot="public" virt="virtual"><scope>PSP</scope><name>operator==</name></member>
      <member refid="class_p_s_p_1a68c3dbf899baec8255f4af26e534cee9" prot="protected" virt="non-virtual"><scope>PSP</scope><name>part</name></member>
      <member refid="class_p_s_p_1ae472fd355d5a72505917b8f1a878c738" prot="protected" virt="non-virtual"><scope>PSP</scope><name>pcount</name></member>
      <member refid="class_p_s_p_1a13ab03638eda2112ca35865c82b52934" prot="protected" virt="non-virtual"><scope>PSP</scope><name>pmax</name></member>
      <member refid="class_p_s_p_1ac5c8a08a13b0f8d66e4dcfe63cc1d511" prot="protected" virt="non-virtual"><scope>PSP</scope><name>pmed</name></member>
      <member refid="class_p_s_p_1a3f18fa7ed15530d6dadb0e147113e387" prot="protected" virt="non-virtual"><scope>PSP</scope><name>pmin</name></member>
      <member refid="class_p_s_p_1a0d40b61dd7404d13d8d14ea8cdf15de3" prot="public" virt="non-virtual"><scope>PSP</scope><name>PrintSummary</name></member>
      <member refid="class_p_s_p_1a6b3a0cb0a82c573c806361375ad75ab8" prot="public" virt="non-virtual"><scope>PSP</scope><name>PrintSummary</name></member>
      <member refid="class_p_s_p_1a03a6fe03fcc607682fbaf29cc821d3c8" prot="public" virt="non-virtual"><scope>PSP</scope><name>PSP</name></member>
      <member refid="class_p_s_p_1ac6d4743f819bdea0568b8d9df184c45e" prot="public" virt="non-virtual"><scope>PSP</scope><name>PSP</name></member>
      <member refid="class_p_s_p_1a03a6fe03fcc607682fbaf29cc821d3c8" prot="public" virt="non-virtual"><scope>PSP</scope><name>PSP</name></member>
      <member refid="class_p_s_p_1ac6d4743f819bdea0568b8d9df184c45e" prot="public" virt="non-virtual"><scope>PSP</scope><name>PSP</name></member>
      <member refid="class_p_s_p_1a7bad6b96c2370bc3bb7abf3cd37f7de4" prot="protected" virt="non-virtual"><scope>PSP</scope><name>spos</name></member>
      <member refid="class_p_s_p_1a305ce18ca9c87c48bacf025fbc8749b4" prot="protected" virt="non-virtual"><scope>PSP</scope><name>spos</name></member>
      <member refid="class_p_s_p_1a655b102c58695d176811f6b9e16fcd76" prot="protected" virt="non-virtual"><scope>PSP</scope><name>stanzas</name></member>
      <member refid="class_p_s_p_1a0f0f7c13568ccab0cf2aaca433e38fda" prot="protected" virt="non-virtual"><scope>PSP</scope><name>stanzas</name></member>
      <member refid="class_p_s_p_1ac41847620427c5c925c3785406ee1219" prot="protected" virt="non-virtual"><scope>PSP</scope><name>VERBOSE</name></member>
      <member refid="class_p_s_p_1adefeff8d008510d290fe86861a15f966" prot="protected" virt="non-virtual"><scope>PSP</scope><name>vmax</name></member>
      <member refid="class_p_s_p_1a912a4ecef2f5011e96c7f837ff18d6c2" prot="protected" virt="non-virtual"><scope>PSP</scope><name>vmed</name></member>
      <member refid="class_p_s_p_1a07e18a1a45d705e9e82360dd8abd093b" prot="protected" virt="non-virtual"><scope>PSP</scope><name>vmin</name></member>
      <member refid="class_p_s_p_1a3b5328f0e732e5fd4e60339c7e81aa44" prot="protected" virt="non-virtual"><scope>PSP</scope><name>write_binary</name></member>
      <member refid="class_p_s_p_1af76c58f257d5dcf8461886c7fde94342" prot="protected" virt="non-virtual"><scope>PSP</scope><name>write_binary</name></member>
      <member refid="class_p_s_p_1a6faf9fda5ed3f97e1c1d497418692bb1" prot="public" virt="non-virtual"><scope>PSP</scope><name>writePSP</name></member>
      <member refid="class_p_s_p_1a6faf9fda5ed3f97e1c1d497418692bb1" prot="public" virt="non-virtual"><scope>PSP</scope><name>writePSP</name></member>
      <member refid="class_p_s_p_1a9af6f9e5c41c73ae19ad840d2ae97d25" prot="public" virt="virtual"><scope>PSP</scope><name>~PSP</name></member>
      <member refid="class_p_s_p_1a9af6f9e5c41c73ae19ad840d2ae97d25" prot="public" virt="virtual"><scope>PSP</scope><name>~PSP</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
