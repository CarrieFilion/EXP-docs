<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_particle" kind="class" language="C++" prot="public">
    <compoundname>Particle</compoundname>
    <derivedcompoundref refid="class_p_r_1_1_p_particle" prot="public" virt="non-virtual">PR::PParticle&lt; float &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_p_r_1_1_p_particle" prot="public" virt="non-virtual">PR::PParticle&lt; double &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_p_r_1_1_p_particle" prot="public" virt="non-virtual">PR::PParticle&lt; real &gt;</derivedcompoundref>
    <includes refid="include_2_particle_8_h" local="no">Particle.H</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_particle_1a7cdcdaaa7c1177c733b888e9e60d0fb9" prot="public" static="no">
        <type>std::pair&lt; unsigned short, unsigned short &gt;</type>
        <definition>typedef std::pair&lt;unsigned short, unsigned short&gt; Particle::speciesKey</definition>
        <argsstring></argsstring>
        <name>speciesKey</name>
        <qualifiedname>Particle::speciesKey</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="75" column="21" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="75" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_particle_1a1fb0b2da600a8ad44057823c19938515" prot="private" static="no" mutable="no">
        <type>std::vector&lt; char &gt;</type>
        <definition>std::vector&lt;char&gt; Particle::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <qualifiedname>Particle::buffer</qualifiedname>
        <briefdescription>
<para>MPI buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="23" column="15" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="23" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_particle_1a82e75d23385a26273d1d33fdde947a4a" prot="public" static="yes" mutable="no">
        <type>const <ref refid="class_particle_1a7cdcdaaa7c1177c733b888e9e60d0fb9" kindref="member">speciesKey</ref></type>
        <definition>const speciesKey Particle::defaultKey</definition>
        <argsstring></argsstring>
        <name>defaultKey</name>
        <qualifiedname>Particle::defaultKey</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="76" column="27" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1adf9aa4abfe0f5205fd71755d80fa36f0" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float Particle::effort_default</definition>
        <argsstring></argsstring>
        <name>effort_default</name>
        <qualifiedname>Particle::effort_default</qualifiedname>
        <briefdescription>
<para>Default effort value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="28" column="16" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="28" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_particle_1ac575fbf68c83530ee242ba22fb38a264" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Particle::acc[3]</definition>
        <argsstring>[3]</argsstring>
        <name>acc</name>
        <qualifiedname>Particle::acc</qualifiedname>
        <briefdescription>
<para>Acceleration vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="40" column="10" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1a04153827c29d7a278023801845f9c8f3" prot="public" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; Particle::dattrib</definition>
        <argsstring></argsstring>
        <name>dattrib</name>
        <qualifiedname>Particle::dattrib</qualifiedname>
        <briefdescription>
<para>Real (double) attributes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="52" column="10" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="52" bodyend="-1"/>
        <referencedby refid="class_particle_1ab3e060354cd4e942646520e9af3fa341" compoundref="include_2_particle_8_h" startline="114" endline="119">getMPIBufSize</referencedby>
        <referencedby refid="class_p_r_1_1_p_particle_1adae50eeb905813146d42bed5c850bc58" compoundref="_particle_reader_8_h" startline="267" endline="309">PR::PParticle&lt; real &gt;::read</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1aab8165b0c94a793caa326da0b1a5ed60" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Particle::dtreq</definition>
        <argsstring></argsstring>
        <name>dtreq</name>
        <qualifiedname>Particle::dtreq</qualifiedname>
        <briefdescription>
<para>Internal process time step (&lt;0 means ignore) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="58" column="9" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1a478372f50864a61ed194123ed219f721" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Particle::effort</definition>
        <argsstring></argsstring>
        <name>effort</name>
        <qualifiedname>Particle::effort</qualifiedname>
        <briefdescription>
<para>Scale factor for partitioning work. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="64" column="9" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1a55c3bc6bd2f03824312414c219ee0d71" prot="public" static="no" mutable="no">
        <type>vector&lt; int &gt;</type>
        <definition>vector&lt;int&gt; Particle::iattrib</definition>
        <argsstring></argsstring>
        <name>iattrib</name>
        <qualifiedname>Particle::iattrib</qualifiedname>
        <briefdescription>
<para>Integer attributes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="49" column="10" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="49" bodyend="-1"/>
        <referencedby refid="class_particle_1ab3e060354cd4e942646520e9af3fa341" compoundref="include_2_particle_8_h" startline="114" endline="119">getMPIBufSize</referencedby>
        <referencedby refid="class_p_r_1_1_p_particle_1adae50eeb905813146d42bed5c850bc58" compoundref="_particle_reader_8_h" startline="267" endline="309">PR::PParticle&lt; real &gt;::read</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1a041051e4763a83554abed7304dfda4a7" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long Particle::indx</definition>
        <argsstring></argsstring>
        <name>indx</name>
        <qualifiedname>Particle::indx</qualifiedname>
        <briefdescription>
<para>Index for ordering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="67" column="17" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="67" bodyend="-1"/>
        <referencedby refid="class_p_r_1_1_p_particle_1adae50eeb905813146d42bed5c850bc58" compoundref="_particle_reader_8_h" startline="267" endline="309">PR::PParticle&lt; real &gt;::read</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1a40fcbe2d8647d560e2a7eb1227cf4808" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long Particle::key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <qualifiedname>Particle::key</qualifiedname>
        <briefdescription>
<para>Hash key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="73" column="17" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1a01205d006724dc26a6f49758f2722382" prot="public" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned Particle::level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>Particle::level</qualifiedname>
        <briefdescription>
<para>Multistep level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="55" column="12" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1ae6d46dc24a6666d526f211151fecca5f" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Particle::mass</definition>
        <argsstring></argsstring>
        <name>mass</name>
        <qualifiedname>Particle::mass</qualifiedname>
        <briefdescription>
<para>Mass of particle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="31" column="10" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="31" bodyend="-1"/>
        <referencedby refid="class_s_particle_1ae35d1a9ebc6560653ba922177f1743c5" compoundref="_s_particle_8_h" startline="17" endline="24">SParticle::cpy</referencedby>
        <referencedby refid="class_p_r_1_1_p_particle_1adae50eeb905813146d42bed5c850bc58" compoundref="_particle_reader_8_h" startline="267" endline="309">PR::PParticle&lt; real &gt;::read</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1a3606e8a85c0b5ef30d7cf2777907e58e" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Particle::pos</definition>
        <argsstring>[3]</argsstring>
        <name>pos</name>
        <qualifiedname>Particle::pos</qualifiedname>
        <briefdescription>
<para>Position vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="34" column="10" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="34" bodyend="-1"/>
        <referencedby refid="class_s_particle_1ae35d1a9ebc6560653ba922177f1743c5" compoundref="_s_particle_8_h" startline="17" endline="24">SParticle::cpy</referencedby>
        <referencedby refid="class_p_r_1_1_p_particle_1adae50eeb905813146d42bed5c850bc58" compoundref="_particle_reader_8_h" startline="267" endline="309">PR::PParticle&lt; real &gt;::read</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1a235e3eb6c466429f43f4f4564e343724" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Particle::pot</definition>
        <argsstring></argsstring>
        <name>pot</name>
        <qualifiedname>Particle::pot</qualifiedname>
        <briefdescription>
<para>Gravitational potential due to particles <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="43" column="10" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1afffdbb3da7a0222fddde253f974b5f8a" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Particle::potext</definition>
        <argsstring></argsstring>
        <name>potext</name>
        <qualifiedname>Particle::potext</qualifiedname>
        <briefdescription>
<para>Gravitational potential from external forces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="46" column="10" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1a5c7aecc4ecec7c9e8c8b928bd80e35ea" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Particle::scale</definition>
        <argsstring></argsstring>
        <name>scale</name>
        <qualifiedname>Particle::scale</qualifiedname>
        <briefdescription>
<para>Internal size scale (&lt;0 means ignore) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="61" column="9" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1a25f2943d2559c9b00e52595585022a47" prot="public" static="no" mutable="no">
        <type><ref refid="class_particle_1a7cdcdaaa7c1177c733b888e9e60d0fb9" kindref="member">speciesKey</ref></type>
        <definition>speciesKey Particle::skey</definition>
        <argsstring></argsstring>
        <name>skey</name>
        <qualifiedname>Particle::skey</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Species key (this is a cache value to prevent endless on-the-fly reconstruction of the species key) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="80" column="14" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1a49d4f04b43b6200dd4cef28da20a739d" prot="public" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned Particle::tree</definition>
        <argsstring></argsstring>
        <name>tree</name>
        <qualifiedname>Particle::tree</qualifiedname>
        <briefdescription>
<para>Tree key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="70" column="12" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_particle_1a13bd0267040135a338f62130ca1614d6" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Particle::vel</definition>
        <argsstring>[3]</argsstring>
        <name>vel</name>
        <qualifiedname>Particle::vel</qualifiedname>
        <briefdescription>
<para>Velocity vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="37" column="10" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="37" bodyend="-1"/>
        <referencedby refid="class_s_particle_1ae35d1a9ebc6560653ba922177f1743c5" compoundref="_s_particle_8_h" startline="17" endline="24">SParticle::cpy</referencedby>
        <referencedby refid="class_p_r_1_1_p_particle_1adae50eeb905813146d42bed5c850bc58" compoundref="_particle_reader_8_h" startline="267" endline="309">PR::PParticle&lt; real &gt;::read</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_particle_1ab3e060354cd4e942646520e9af3fa341" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Particle::getMPIBufSize</definition>
        <argsstring>(unsigned rsize, bool indexing)</argsstring>
        <name>getMPIBufSize</name>
        <qualifiedname>Particle::getMPIBufSize</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>rsize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexing</declname>
        </param>
        <briefdescription>
<para><ref refid="class_particle" kindref="compound">Particle</ref> buffer size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="114" column="12" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="114" bodyend="119"/>
        <references refid="class_particle_1a04153827c29d7a278023801845f9c8f3" compoundref="include_2_particle_8_h" startline="52">dattrib</references>
        <references refid="class_particle_1a55c3bc6bd2f03824312414c219ee0d71" compoundref="include_2_particle_8_h" startline="49">iattrib</references>
      </memberdef>
      <memberdef kind="function" id="class_particle_1a40f4c7e248029d72e7714b7802d5e5e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Particle::Particle</definition>
        <argsstring>()</argsstring>
        <name>Particle</name>
        <qualifiedname>Particle::Particle</qualifiedname>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="83" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_particle_1a40f4c7e248029d72e7714b7802d5e5e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Particle::Particle</definition>
        <argsstring>()</argsstring>
        <name>Particle</name>
        <qualifiedname>Particle::Particle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/Particle.h" line="17" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_particle_1a875d390662507790e0b248f53bff2ad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Particle::Particle</definition>
        <argsstring>(const Particle &amp;)</argsstring>
        <name>Particle</name>
        <qualifiedname>Particle::Particle</qualifiedname>
        <param>
          <type>const <ref refid="class_particle" kindref="compound">Particle</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="89" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_particle_1a65da555cae2b76c9a6476797f3bbec14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Particle::Particle</definition>
        <argsstring>(const Particle &amp;p)</argsstring>
        <name>Particle</name>
        <qualifiedname>Particle::Particle</qualifiedname>
        <param>
          <type>const <ref refid="class_particle" kindref="compound">Particle</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/Particle.h" line="20" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_particle_1a56a5ccec698415615a050e9bfd820b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Particle::Particle</definition>
        <argsstring>(unsigned niatr, unsigned ndatr)</argsstring>
        <name>Particle</name>
        <qualifiedname>Particle::Particle</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>niatr</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>ndatr</declname>
        </param>
        <briefdescription>
<para>Constructor with presized attribute lists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="86" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_particle_1ad619d82125defc278a08e2908b6115c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Particle::readAscii</definition>
        <argsstring>(bool indexing, int seq, std::istream *fin)</argsstring>
        <name>readAscii</name>
        <qualifiedname>Particle::readAscii</qualifiedname>
        <param>
          <type>bool</type>
          <declname>indexing</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seq</declname>
        </param>
        <param>
          <type>std::istream *</type>
          <declname>fin</declname>
        </param>
        <briefdescription>
<para>Read particles from file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="92" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_particle_1a5522f47432b7ed4de4584dbea0ac12c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Particle::readBinary</definition>
        <argsstring>(unsigned rsize, bool indexing, int seq, std::istream *in)</argsstring>
        <name>readBinary</name>
        <qualifiedname>Particle::readBinary</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>rsize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexing</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seq</declname>
        </param>
        <param>
          <type>std::istream *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Read particles from file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="95" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_particle_1a63a4e5661ae98308893d86e33f059576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Particle::writeAscii</definition>
        <argsstring>(bool indexing, bool accel, std::ostream *out)</argsstring>
        <name>writeAscii</name>
        <qualifiedname>Particle::writeAscii</qualifiedname>
        <param>
          <type>bool</type>
          <declname>indexing</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>accel</declname>
        </param>
        <param>
          <type>std::ostream *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Write a particle in ascii format. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="98" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_particle_1a5bb1f74e19cebdb828f95af23bc386cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Particle::writeBinary</definition>
        <argsstring>(unsigned rsize, bool indexing, std::ostream *out) const</argsstring>
        <name>writeBinary</name>
        <qualifiedname>Particle::writeBinary</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>rsize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexing</declname>
        </param>
        <param>
          <type>std::ostream *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Write a particle in binary format (<ref refid="class_p_s_p" kindref="compound">PSP</ref>) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="108" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_particle_1ac36f173dd3cf6b19a6e8bf8538fabf4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Particle::writeBinaryBuffered</definition>
        <argsstring>(unsigned rsize, bool indexing, std::ostream *out, ParticleBuffer &amp;buf) const</argsstring>
        <name>writeBinaryBuffered</name>
        <qualifiedname>Particle::writeBinaryBuffered</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>rsize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexing</declname>
        </param>
        <param>
          <type>std::ostream *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="class_particle_buffer" kindref="compound">ParticleBuffer</ref> &amp;</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Write a particle in binary format (<ref refid="class_p_s_p" kindref="compound">PSP</ref>) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="101" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_particle_1a6a0d56643139eafef77b04372098e34a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Particle::writeBinaryMPI</definition>
        <argsstring>(char *buf, unsigned rsize, bool indexing)</argsstring>
        <name>writeBinaryMPI</name>
        <qualifiedname>Particle::writeBinaryMPI</qualifiedname>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>rsize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexing</declname>
        </param>
        <briefdescription>
<para>Write a particle in binary format (<ref refid="class_p_s_p" kindref="compound">PSP</ref>) to buffer for MPI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="111" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_particle_1aeae52277bb1d013be9080d87d3b6a436" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Particle::writeBinaryThreaded</definition>
        <argsstring>(unsigned rsize, bool indexing, ParticleBuffer &amp;buf, int count) const</argsstring>
        <name>writeBinaryThreaded</name>
        <qualifiedname>Particle::writeBinaryThreaded</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>rsize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexing</declname>
        </param>
        <param>
          <type><ref refid="class_particle_buffer" kindref="compound">ParticleBuffer</ref> &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Write a particle in binary format (<ref refid="class_p_s_p" kindref="compound">PSP</ref>), threaded version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="104" column="8"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Keeps track of all info for one particle. </para>
    </briefdescription>
    <detaileddescription>
<para>The iattrib and dattrib vectors are used by individual components to carry additional parameters specific to different particle types. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>PR::PParticle&lt; double &gt;</label>
        <link refid="class_p_r_1_1_p_particle"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>PR::PParticle&lt; float &gt;</label>
        <link refid="class_p_r_1_1_p_particle"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>PR::PParticle&lt; real &gt;</label>
        <link refid="class_p_r_1_1_p_particle"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Particle</label>
        <link refid="class_particle"/>
      </node>
    </inheritancegraph>
    <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="18" column="1" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="19" bodyend="120"/>
    <listofallmembers>
      <member refid="class_particle_1ac575fbf68c83530ee242ba22fb38a264" prot="public" virt="non-virtual"><scope>Particle</scope><name>acc</name></member>
      <member refid="class_particle_1a1fb0b2da600a8ad44057823c19938515" prot="private" virt="non-virtual"><scope>Particle</scope><name>buffer</name></member>
      <member refid="class_particle_1a04153827c29d7a278023801845f9c8f3" prot="public" virt="non-virtual"><scope>Particle</scope><name>dattrib</name></member>
      <member refid="class_particle_1a82e75d23385a26273d1d33fdde947a4a" prot="public" virt="non-virtual"><scope>Particle</scope><name>defaultKey</name></member>
      <member refid="class_particle_1aab8165b0c94a793caa326da0b1a5ed60" prot="public" virt="non-virtual"><scope>Particle</scope><name>dtreq</name></member>
      <member refid="class_particle_1a478372f50864a61ed194123ed219f721" prot="public" virt="non-virtual"><scope>Particle</scope><name>effort</name></member>
      <member refid="class_particle_1adf9aa4abfe0f5205fd71755d80fa36f0" prot="public" virt="non-virtual"><scope>Particle</scope><name>effort_default</name></member>
      <member refid="class_particle_1ab3e060354cd4e942646520e9af3fa341" prot="public" virt="non-virtual"><scope>Particle</scope><name>getMPIBufSize</name></member>
      <member refid="class_particle_1a55c3bc6bd2f03824312414c219ee0d71" prot="public" virt="non-virtual"><scope>Particle</scope><name>iattrib</name></member>
      <member refid="class_particle_1a041051e4763a83554abed7304dfda4a7" prot="public" virt="non-virtual"><scope>Particle</scope><name>indx</name></member>
      <member refid="class_particle_1a40fcbe2d8647d560e2a7eb1227cf4808" prot="public" virt="non-virtual"><scope>Particle</scope><name>key</name></member>
      <member refid="class_particle_1a01205d006724dc26a6f49758f2722382" prot="public" virt="non-virtual"><scope>Particle</scope><name>level</name></member>
      <member refid="class_particle_1ae6d46dc24a6666d526f211151fecca5f" prot="public" virt="non-virtual"><scope>Particle</scope><name>mass</name></member>
      <member refid="class_particle_1a40f4c7e248029d72e7714b7802d5e5e1" prot="public" virt="non-virtual"><scope>Particle</scope><name>Particle</name></member>
      <member refid="class_particle_1a56a5ccec698415615a050e9bfd820b3a" prot="public" virt="non-virtual"><scope>Particle</scope><name>Particle</name></member>
      <member refid="class_particle_1a875d390662507790e0b248f53bff2ad1" prot="public" virt="non-virtual"><scope>Particle</scope><name>Particle</name></member>
      <member refid="class_particle_1a40f4c7e248029d72e7714b7802d5e5e1" prot="public" virt="non-virtual"><scope>Particle</scope><name>Particle</name></member>
      <member refid="class_particle_1a65da555cae2b76c9a6476797f3bbec14" prot="public" virt="non-virtual"><scope>Particle</scope><name>Particle</name></member>
      <member refid="class_particle_1a3606e8a85c0b5ef30d7cf2777907e58e" prot="public" virt="non-virtual"><scope>Particle</scope><name>pos</name></member>
      <member refid="class_particle_1a235e3eb6c466429f43f4f4564e343724" prot="public" virt="non-virtual"><scope>Particle</scope><name>pot</name></member>
      <member refid="class_particle_1afffdbb3da7a0222fddde253f974b5f8a" prot="public" virt="non-virtual"><scope>Particle</scope><name>potext</name></member>
      <member refid="class_particle_1ad619d82125defc278a08e2908b6115c7" prot="public" virt="non-virtual"><scope>Particle</scope><name>readAscii</name></member>
      <member refid="class_particle_1a5522f47432b7ed4de4584dbea0ac12c7" prot="public" virt="non-virtual"><scope>Particle</scope><name>readBinary</name></member>
      <member refid="class_particle_1a5c7aecc4ecec7c9e8c8b928bd80e35ea" prot="public" virt="non-virtual"><scope>Particle</scope><name>scale</name></member>
      <member refid="class_particle_1a25f2943d2559c9b00e52595585022a47" prot="public" virt="non-virtual"><scope>Particle</scope><name>skey</name></member>
      <member refid="class_particle_1a7cdcdaaa7c1177c733b888e9e60d0fb9" prot="public" virt="non-virtual"><scope>Particle</scope><name>speciesKey</name></member>
      <member refid="class_particle_1a49d4f04b43b6200dd4cef28da20a739d" prot="public" virt="non-virtual"><scope>Particle</scope><name>tree</name></member>
      <member refid="class_particle_1a13bd0267040135a338f62130ca1614d6" prot="public" virt="non-virtual"><scope>Particle</scope><name>vel</name></member>
      <member refid="class_particle_1a63a4e5661ae98308893d86e33f059576" prot="public" virt="non-virtual"><scope>Particle</scope><name>writeAscii</name></member>
      <member refid="class_particle_1a5bb1f74e19cebdb828f95af23bc386cf" prot="public" virt="non-virtual"><scope>Particle</scope><name>writeBinary</name></member>
      <member refid="class_particle_1ac36f173dd3cf6b19a6e8bf8538fabf4b" prot="public" virt="non-virtual"><scope>Particle</scope><name>writeBinaryBuffered</name></member>
      <member refid="class_particle_1a6a0d56643139eafef77b04372098e34a" prot="public" virt="non-virtual"><scope>Particle</scope><name>writeBinaryMPI</name></member>
      <member refid="class_particle_1aeae52277bb1d013be9080d87d3b6a436" prot="public" virt="non-virtual"><scope>Particle</scope><name>writeBinaryThreaded</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
