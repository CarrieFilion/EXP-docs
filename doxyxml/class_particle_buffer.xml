<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_particle_buffer" kind="class" language="C++" prot="public">
    <compoundname>ParticleBuffer</compoundname>
    <includes refid="include_2_particle_8_h" local="no">Particle.H</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_particle_buffer_1ae0dbcb81d6e5c4f8db390f09461534ea" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* ParticleBuffer::Loc</definition>
        <argsstring></argsstring>
        <name>Loc</name>
        <qualifiedname>ParticleBuffer::Loc</qualifiedname>
        <briefdescription>
<para>Buffer location. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="147" column="8" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="147" bodyend="-1"/>
        <referencedby refid="class_particle_buffer_1aaec0c031810fad25ca9397494ebb34fc" compoundref="include_2_particle_8_h" startline="162" endline="162">setLocation</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_particle_buffer_1ad1234c964357d82be0677be6cd3a885c" prot="public" static="no" mutable="no">
        <type>const unsigned</type>
        <definition>const unsigned ParticleBuffer::maxBufCount</definition>
        <argsstring></argsstring>
        <name>maxBufCount</name>
        <qualifiedname>ParticleBuffer::maxBufCount</qualifiedname>
        <initializer>= 1048576</initializer>
        <briefdescription>
<para>Buffer maximum particle count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="128" column="18" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="128" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_particle_buffer_1ab9a31c4716fd288293660d9a5e6277fe" prot="protected" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned ParticleBuffer::bufCount</definition>
        <argsstring></argsstring>
        <name>bufCount</name>
        <qualifiedname>ParticleBuffer::bufCount</qualifiedname>
        <briefdescription>
<para>Buffer particle count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="142" column="12" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="142" bodyend="-1"/>
        <referencedby refid="class_particle_buffer_1ab7891de1d66a6109d9433c8c2a1f6249" compoundref="include_2_particle_8_h" startline="156" endline="156">operator++</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_particle_buffer_1a44acc0ab241b4073573b275d2accd74a" prot="protected" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned ParticleBuffer::bufSize</definition>
        <argsstring></argsstring>
        <name>bufSize</name>
        <qualifiedname>ParticleBuffer::bufSize</qualifiedname>
        <briefdescription>
<para>Buffer size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="139" column="12" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_particle_buffer_1a9214167348e2e3c4ed7cf0e1d180870b" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; char &gt;</type>
        <definition>std::vector&lt;char&gt; ParticleBuffer::charBuffer</definition>
        <argsstring></argsstring>
        <name>charBuffer</name>
        <qualifiedname>ParticleBuffer::charBuffer</qualifiedname>
        <briefdescription>
<para>Write buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="133" column="15" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="133" bodyend="-1"/>
        <referencedby refid="class_particle_buffer_1a6c457bb37d16e709eccbdb9861fd5991" compoundref="include_2_particle_8_h" startline="159" endline="159">operator()</referencedby>
        <referencedby refid="class_particle_buffer_1aaec0c031810fad25ca9397494ebb34fc" compoundref="include_2_particle_8_h" startline="162" endline="162">setLocation</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_particle_buffer_1ac4ed20cda1ff2f216fb886b0cd0ab41e" prot="protected" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned ParticleBuffer::parSize</definition>
        <argsstring></argsstring>
        <name>parSize</name>
        <qualifiedname>ParticleBuffer::parSize</qualifiedname>
        <briefdescription>
<para><ref refid="class_particle" kindref="compound">Particle</ref> size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="136" column="12" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="136" bodyend="-1"/>
        <referencedby refid="class_particle_buffer_1a26df2a34f52bd857b23a213246609816" compoundref="include_2_particle_8_h" startline="165" endline="165">pMemSize</referencedby>
        <referencedby refid="class_particle_buffer_1aaec0c031810fad25ca9397494ebb34fc" compoundref="include_2_particle_8_h" startline="162" endline="162">setLocation</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_particle_buffer_1a6c457bb37d16e709eccbdb9861fd5991" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char * ParticleBuffer::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <qualifiedname>ParticleBuffer::operator()</qualifiedname>
        <briefdescription>
<para>Raw access to particle buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="159" column="8" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="159" bodyend="159"/>
        <references refid="class_particle_buffer_1a9214167348e2e3c4ed7cf0e1d180870b" compoundref="include_2_particle_8_h" startline="133">charBuffer</references>
      </memberdef>
      <memberdef kind="function" id="class_particle_buffer_1ab7891de1d66a6109d9433c8c2a1f6249" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleBuffer::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <qualifiedname>ParticleBuffer::operator++</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Increment the particle counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="156" column="8" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="156" bodyend="156"/>
        <references refid="class_particle_buffer_1ab9a31c4716fd288293660d9a5e6277fe" compoundref="include_2_particle_8_h" startline="142">bufCount</references>
      </memberdef>
      <memberdef kind="function" id="class_particle_buffer_1a3f6250a8f96673dcc7548c6a7d56ac8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ParticleBuffer::ParticleBuffer</definition>
        <argsstring>(unsigned rsize, bool indexing, const Particle *p)</argsstring>
        <name>ParticleBuffer</name>
        <qualifiedname>ParticleBuffer::ParticleBuffer</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>rsize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexing</declname>
        </param>
        <param>
          <type>const <ref refid="class_particle" kindref="compound">Particle</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="150" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_particle_buffer_1a26df2a34f52bd857b23a213246609816" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned ParticleBuffer::pMemSize</definition>
        <argsstring>()</argsstring>
        <name>pMemSize</name>
        <qualifiedname>ParticleBuffer::pMemSize</qualifiedname>
        <briefdescription>
<para>Get memory per particle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="165" column="12" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="165" bodyend="165"/>
        <references refid="class_particle_buffer_1ac4ed20cda1ff2f216fb886b0cd0ab41e" compoundref="include_2_particle_8_h" startline="136">parSize</references>
      </memberdef>
      <memberdef kind="function" id="class_particle_buffer_1aaec0c031810fad25ca9397494ebb34fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleBuffer::setLocation</definition>
        <argsstring>(int n)</argsstring>
        <name>setLocation</name>
        <qualifiedname>ParticleBuffer::setLocation</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Set location to the nth particle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="162" column="8" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="162" bodyend="162"/>
        <references refid="class_particle_buffer_1a9214167348e2e3c4ed7cf0e1d180870b" compoundref="include_2_particle_8_h" startline="133">charBuffer</references>
        <references refid="class_particle_buffer_1ae0dbcb81d6e5c4f8db390f09461534ea" compoundref="include_2_particle_8_h" startline="147">Loc</references>
        <references refid="class_particle_buffer_1ac4ed20cda1ff2f216fb886b0cd0ab41e" compoundref="include_2_particle_8_h" startline="136">parSize</references>
      </memberdef>
      <memberdef kind="function" id="class_particle_buffer_1ae1db7eea29ba7f9add495c3931dc1e3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleBuffer::writeBuffer</definition>
        <argsstring>(std::ostream *out, bool finish=false)</argsstring>
        <name>writeBuffer</name>
        <qualifiedname>ParticleBuffer::writeBuffer</qualifiedname>
        <param>
          <type>std::ostream *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>finish</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Write buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="153" column="8"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Helper class for writing a buffer of particles. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/weinberg/Projects/EXP/include/Particle.H" line="123" column="1" bodyfile="/home/weinberg/Projects/EXP/include/Particle.H" bodystart="124" bodyend="167"/>
    <listofallmembers>
      <member refid="class_particle_buffer_1ab9a31c4716fd288293660d9a5e6277fe" prot="protected" virt="non-virtual"><scope>ParticleBuffer</scope><name>bufCount</name></member>
      <member refid="class_particle_buffer_1a44acc0ab241b4073573b275d2accd74a" prot="protected" virt="non-virtual"><scope>ParticleBuffer</scope><name>bufSize</name></member>
      <member refid="class_particle_buffer_1a9214167348e2e3c4ed7cf0e1d180870b" prot="protected" virt="non-virtual"><scope>ParticleBuffer</scope><name>charBuffer</name></member>
      <member refid="class_particle_buffer_1ae0dbcb81d6e5c4f8db390f09461534ea" prot="public" virt="non-virtual"><scope>ParticleBuffer</scope><name>Loc</name></member>
      <member refid="class_particle_buffer_1ad1234c964357d82be0677be6cd3a885c" prot="public" virt="non-virtual"><scope>ParticleBuffer</scope><name>maxBufCount</name></member>
      <member refid="class_particle_buffer_1a6c457bb37d16e709eccbdb9861fd5991" prot="public" virt="non-virtual"><scope>ParticleBuffer</scope><name>operator()</name></member>
      <member refid="class_particle_buffer_1ab7891de1d66a6109d9433c8c2a1f6249" prot="public" virt="non-virtual"><scope>ParticleBuffer</scope><name>operator++</name></member>
      <member refid="class_particle_buffer_1ac4ed20cda1ff2f216fb886b0cd0ab41e" prot="protected" virt="non-virtual"><scope>ParticleBuffer</scope><name>parSize</name></member>
      <member refid="class_particle_buffer_1a3f6250a8f96673dcc7548c6a7d56ac8e" prot="public" virt="non-virtual"><scope>ParticleBuffer</scope><name>ParticleBuffer</name></member>
      <member refid="class_particle_buffer_1a26df2a34f52bd857b23a213246609816" prot="public" virt="non-virtual"><scope>ParticleBuffer</scope><name>pMemSize</name></member>
      <member refid="class_particle_buffer_1aaec0c031810fad25ca9397494ebb34fc" prot="public" virt="non-virtual"><scope>ParticleBuffer</scope><name>setLocation</name></member>
      <member refid="class_particle_buffer_1ae1db7eea29ba7f9add495c3931dc1e3b" prot="public" virt="non-virtual"><scope>ParticleBuffer</scope><name>writeBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
