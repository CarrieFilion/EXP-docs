<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_pot_r_z" kind="class" language="C++" prot="public">
    <compoundname>PotRZ</compoundname>
    <includes refid="_pot_r_z_8_h" local="no">PotRZ.H</includes>
    <innerclass refid="class_pot_r_z_1_1_sk" prot="protected">PotRZ::Sk</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49" prot="public" static="no" strong="yes">
        <type></type>
        <name>Field</name>
        <qualifiedname>PotRZ::Field</qualifiedname>
        <enumvalue id="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49ad6614b55766ec7598b66c763af368a86" prot="public">
          <name>potential</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a0412371a6f379b32238a840927f69a59" prot="public">
          <name>rforce</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a7d99b11816e890714319466b5641071e" prot="public">
          <name>zforce</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Which field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PotRZ.H" line="69" column="3" bodyfile="/home/weinberg/Projects/EXP/include/PotRZ.H" bodystart="69" bodyend="69"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_pot_r_z_1ac9418a8a416f340d0e6374ebd21dfde4" prot="protected" static="no" mutable="no">
        <type>std::function&lt; double(double)&gt;</type>
        <definition>std::function&lt;double(double)&gt; PotRZ::mass</definition>
        <argsstring></argsstring>
        <name>mass</name>
        <qualifiedname>PotRZ::mass</qualifiedname>
        <briefdescription>
<para>Sigma(R) functor instance stored by the constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PotRZ.H" line="15" column="17" bodyfile="/home/weinberg/Projects/EXP/include/PotRZ.H" bodystart="15" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int PotRZ::M</definition>
        <argsstring></argsstring>
        <name>M</name>
        <qualifiedname>PotRZ::M</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PotRZ.H" line="53" column="8" bodyfile="/home/weinberg/Projects/EXP/include/PotRZ.H" bodystart="53" bodyend="-1"/>
        <referencedby refid="class_pot_r_z_1aa605b2c0e95c83b100b9a151cf665ae6" compoundref="_pot_r_z_8_h" startline="115" endline="152">operator()</referencedby>
        <referencedby refid="class_pot_r_z_1a7b01917cb94ccc4e139f831f85f1cded" compoundref="_pot_r_z_8_h" startline="73" endline="111">operator()</referencedby>
        <referencedby refid="class_pot_r_z_1a6b7d396bb83407d96f2581b71d6ac8d8" compoundref="_pot_r_z_8_h" startline="60" endline="66">PotRZ</referencedby>
        <referencedby refid="class_pot_r_z_1_1_sk_1a1a01e40c1096829cbd337c6d89a14267" compoundref="_pot_r_z_8_h" startline="32" endline="35">PotRZ::Sk::Sk</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pot_r_z_1a0173a3ff4d68cb063489211fe95c1d85" prot="private" static="no" mutable="no">
        <type><ref refid="class_pot_r_z_1_1_sk" kindref="compound">Sk</ref></type>
        <definition>Sk PotRZ::u</definition>
        <argsstring></argsstring>
        <name>u</name>
        <qualifiedname>PotRZ::u</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PotRZ.H" line="52" column="8" bodyfile="/home/weinberg/Projects/EXP/include/PotRZ.H" bodystart="52" bodyend="-1"/>
        <referencedby refid="class_pot_r_z_1a946c0104998195fd35f0a87a19171b59" compoundref="_pot_r_z_8_h" startline="156" endline="159">getKT</referencedby>
        <referencedby refid="class_pot_r_z_1aa605b2c0e95c83b100b9a151cf665ae6" compoundref="_pot_r_z_8_h" startline="115" endline="152">operator()</referencedby>
        <referencedby refid="class_pot_r_z_1a7b01917cb94ccc4e139f831f85f1cded" compoundref="_pot_r_z_8_h" startline="73" endline="111">operator()</referencedby>
        <referencedby refid="class_pot_r_z_1a6b7d396bb83407d96f2581b71d6ac8d8" compoundref="_pot_r_z_8_h" startline="60" endline="66">PotRZ</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pot_r_z_1aff5ef98880da3485610bf74720f00eee" prot="private" static="no" mutable="no">
        <type><ref refid="class_q_d_h_t" kindref="compound">QDHT</ref></type>
        <definition>QDHT PotRZ::v</definition>
        <argsstring></argsstring>
        <name>v</name>
        <qualifiedname>PotRZ::v</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PotRZ.H" line="51" column="8" bodyfile="/home/weinberg/Projects/EXP/include/PotRZ.H" bodystart="51" bodyend="-1"/>
        <referencedby refid="class_pot_r_z_1aa605b2c0e95c83b100b9a151cf665ae6" compoundref="_pot_r_z_8_h" startline="115" endline="152">operator()</referencedby>
        <referencedby refid="class_pot_r_z_1a7b01917cb94ccc4e139f831f85f1cded" compoundref="_pot_r_z_8_h" startline="73" endline="111">operator()</referencedby>
        <referencedby refid="class_pot_r_z_1a6b7d396bb83407d96f2581b71d6ac8d8" compoundref="_pot_r_z_8_h" startline="60" endline="66">PotRZ</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pot_r_z_1aadafff4888fc29771c1a19a960c7efdd" prot="private" static="no" mutable="no">
        <type><ref refid="class_q_d_h_t" kindref="compound">QDHT</ref></type>
        <definition>QDHT PotRZ::vm</definition>
        <argsstring></argsstring>
        <name>vm</name>
        <qualifiedname>PotRZ::vm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PotRZ.H" line="51" column="10" bodyfile="/home/weinberg/Projects/EXP/include/PotRZ.H" bodystart="51" bodyend="-1"/>
        <referencedby refid="class_pot_r_z_1aa605b2c0e95c83b100b9a151cf665ae6" compoundref="_pot_r_z_8_h" startline="115" endline="152">operator()</referencedby>
        <referencedby refid="class_pot_r_z_1a7b01917cb94ccc4e139f831f85f1cded" compoundref="_pot_r_z_8_h" startline="73" endline="111">operator()</referencedby>
        <referencedby refid="class_pot_r_z_1a6b7d396bb83407d96f2581b71d6ac8d8" compoundref="_pot_r_z_8_h" startline="60" endline="66">PotRZ</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pot_r_z_1a0ca5eb32496b6da272e1991446fa005f" prot="private" static="no" mutable="no">
        <type><ref refid="class_q_d_h_t" kindref="compound">QDHT</ref></type>
        <definition>QDHT PotRZ::vp</definition>
        <argsstring></argsstring>
        <name>vp</name>
        <qualifiedname>PotRZ::vp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PotRZ.H" line="51" column="13" bodyfile="/home/weinberg/Projects/EXP/include/PotRZ.H" bodystart="51" bodyend="-1"/>
        <referencedby refid="class_pot_r_z_1aa605b2c0e95c83b100b9a151cf665ae6" compoundref="_pot_r_z_8_h" startline="115" endline="152">operator()</referencedby>
        <referencedby refid="class_pot_r_z_1a7b01917cb94ccc4e139f831f85f1cded" compoundref="_pot_r_z_8_h" startline="73" endline="111">operator()</referencedby>
        <referencedby refid="class_pot_r_z_1a6b7d396bb83407d96f2581b71d6ac8d8" compoundref="_pot_r_z_8_h" startline="60" endline="66">PotRZ</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pot_r_z_1a946c0104998195fd35f0a87a19171b59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</type>
        <definition>std::tuple&lt; Eigen::VectorXd, Eigen::VectorXd &gt; PotRZ::getKT</definition>
        <argsstring>(std::function&lt; double(double)&gt; func)</argsstring>
        <name>getKT</name>
        <qualifiedname>PotRZ::getKT</qualifiedname>
        <param>
          <type>std::function&lt; double(double)&gt;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
<para>Evalute the forward transform: <ref refid="class_pot_r_z_1_1_sk" kindref="compound">Sk</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PotRZ.H" line="156" column="3" bodyfile="/home/weinberg/Projects/EXP/include/PotRZ.H" bodystart="156" bodyend="159"/>
        <references refid="class_pot_r_z_1a0173a3ff4d68cb063489211fe95c1d85" compoundref="_pot_r_z_8_h" startline="52">u</references>
      </memberdef>
      <memberdef kind="function" id="class_pot_r_z_1aa605b2c0e95c83b100b9a151cf665ae6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double PotRZ::operator()</definition>
        <argsstring>(double r, double z, std::function&lt; double(double)&gt; dens, Field f=Field::potential)</argsstring>
        <name>operator()</name>
        <qualifiedname>PotRZ::operator()</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>std::function&lt; double(double)&gt;</type>
          <declname>dens</declname>
        </param>
        <param>
          <type><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49" kindref="member">Field</ref></type>
          <declname>f</declname>
          <defval><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49ad6614b55766ec7598b66c763af368a86" kindref="member">Field::potential</ref></defval>
        </param>
        <briefdescription>
<para>Perform the evaluation at a particular r. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PotRZ.H" line="114" column="10" bodyfile="/home/weinberg/Projects/EXP/include/PotRZ.H" bodystart="115" bodyend="152"/>
        <references refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" compoundref="_pot_r_z_8_h" startline="53">M</references>
        <references refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49ad6614b55766ec7598b66c763af368a86">potential</references>
        <references refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a0412371a6f379b32238a840927f69a59">rforce</references>
        <references refid="class_pot_r_z_1a0173a3ff4d68cb063489211fe95c1d85" compoundref="_pot_r_z_8_h" startline="52">u</references>
        <references refid="class_pot_r_z_1aff5ef98880da3485610bf74720f00eee" compoundref="_pot_r_z_8_h" startline="51">v</references>
        <references refid="class_pot_r_z_1aadafff4888fc29771c1a19a960c7efdd" compoundref="_pot_r_z_8_h" startline="51">vm</references>
        <references refid="class_pot_r_z_1a0ca5eb32496b6da272e1991446fa005f" compoundref="_pot_r_z_8_h" startline="51">vp</references>
        <references refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a7d99b11816e890714319466b5641071e">zforce</references>
      </memberdef>
      <memberdef kind="function" id="class_pot_r_z_1a7b01917cb94ccc4e139f831f85f1cded" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</type>
        <definition>std::tuple&lt; Eigen::VectorXd, Eigen::VectorXd &gt; PotRZ::operator()</definition>
        <argsstring>(double z, std::function&lt; double(double)&gt; dens, Field f=Field::potential)</argsstring>
        <name>operator()</name>
        <qualifiedname>PotRZ::operator()</qualifiedname>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>std::function&lt; double(double)&gt;</type>
          <declname>dens</declname>
        </param>
        <param>
          <type><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49" kindref="member">Field</ref></type>
          <declname>f</declname>
          <defval><ref refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49ad6614b55766ec7598b66c763af368a86" kindref="member">Field::potential</ref></defval>
        </param>
        <briefdescription>
<para>Perform the evaluation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PotRZ.H" line="72" column="14" bodyfile="/home/weinberg/Projects/EXP/include/PotRZ.H" bodystart="73" bodyend="111"/>
        <references refid="class_q_d_h_t_1a3698a331a45c81e36acc1b23e8e51861" compoundref="_q_d_h_t_8_h" startline="75" endline="75">QDHT::getR</references>
        <references refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" compoundref="_pot_r_z_8_h" startline="53">M</references>
        <references refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49ad6614b55766ec7598b66c763af368a86">potential</references>
        <references refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a0412371a6f379b32238a840927f69a59">rforce</references>
        <references refid="class_pot_r_z_1a0173a3ff4d68cb063489211fe95c1d85" compoundref="_pot_r_z_8_h" startline="52">u</references>
        <references refid="class_pot_r_z_1aff5ef98880da3485610bf74720f00eee" compoundref="_pot_r_z_8_h" startline="51">v</references>
        <references refid="class_pot_r_z_1aadafff4888fc29771c1a19a960c7efdd" compoundref="_pot_r_z_8_h" startline="51">vm</references>
        <references refid="class_pot_r_z_1a0ca5eb32496b6da272e1991446fa005f" compoundref="_pot_r_z_8_h" startline="51">vp</references>
        <references refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49a7d99b11816e890714319466b5641071e">zforce</references>
      </memberdef>
      <memberdef kind="function" id="class_pot_r_z_1a6b7d396bb83407d96f2581b71d6ac8d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PotRZ::PotRZ</definition>
        <argsstring>(double R, int N, int M)</argsstring>
        <name>PotRZ</name>
        <qualifiedname>PotRZ::PotRZ</qualifiedname>
        <param>
          <type>double</type>
          <declname>R</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The gravitational potential by Hankel transform</para>
<para>Constructor <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PotRZ.H" line="60" column="3" bodyfile="/home/weinberg/Projects/EXP/include/PotRZ.H" bodystart="60" bodyend="66"/>
        <references refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" compoundref="_pot_r_z_8_h" startline="53">M</references>
        <references refid="class_pot_r_z_1a0173a3ff4d68cb063489211fe95c1d85" compoundref="_pot_r_z_8_h" startline="52">u</references>
        <references refid="class_pot_r_z_1aff5ef98880da3485610bf74720f00eee" compoundref="_pot_r_z_8_h" startline="51">v</references>
        <references refid="class_pot_r_z_1aadafff4888fc29771c1a19a960c7efdd" compoundref="_pot_r_z_8_h" startline="51">vm</references>
        <references refid="class_pot_r_z_1a0ca5eb32496b6da272e1991446fa005f" compoundref="_pot_r_z_8_h" startline="51">vp</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Compute the inverse Hankel transform using the quasi-discrete Hankel transform to get the potential based on Gauss&apos; Law applied to the cylindrical Laplacian. The user supplies a functor containing the surface density. E.g. B&amp;T equations 2.184-2.185. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>PotRZ</label>
        <link refid="class_pot_r_z"/>
        <childnode refid="2" relation="usage">
          <edgelabel>v</edgelabel>
          <edgelabel>vm</edgelabel>
          <edgelabel>vp</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>u</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>PotRZ::Sk</label>
        <link refid="class_pot_r_z_1_1_sk"/>
        <childnode refid="2" relation="usage">
          <edgelabel>v</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QDHT</label>
        <link refid="class_q_d_h_t"/>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/include/PotRZ.H" line="11" column="1" bodyfile="/home/weinberg/Projects/EXP/include/PotRZ.H" bodystart="12" bodyend="160"/>
    <listofallmembers>
      <member refid="class_pot_r_z_1a4df97f77d977fe37bea7072f3cb14b49" prot="public" virt="non-virtual"><scope>PotRZ</scope><name>Field</name></member>
      <member refid="class_pot_r_z_1a946c0104998195fd35f0a87a19171b59" prot="public" virt="non-virtual"><scope>PotRZ</scope><name>getKT</name></member>
      <member refid="class_pot_r_z_1a62ad3a85a26b28fb94567f4e04895aee" prot="private" virt="non-virtual"><scope>PotRZ</scope><name>M</name></member>
      <member refid="class_pot_r_z_1ac9418a8a416f340d0e6374ebd21dfde4" prot="protected" virt="non-virtual"><scope>PotRZ</scope><name>mass</name></member>
      <member refid="class_pot_r_z_1a7b01917cb94ccc4e139f831f85f1cded" prot="public" virt="non-virtual"><scope>PotRZ</scope><name>operator()</name></member>
      <member refid="class_pot_r_z_1aa605b2c0e95c83b100b9a151cf665ae6" prot="public" virt="non-virtual"><scope>PotRZ</scope><name>operator()</name></member>
      <member refid="class_pot_r_z_1a6b7d396bb83407d96f2581b71d6ac8d8" prot="public" virt="non-virtual"><scope>PotRZ</scope><name>PotRZ</name></member>
      <member refid="class_pot_r_z_1a0173a3ff4d68cb063489211fe95c1d85" prot="private" virt="non-virtual"><scope>PotRZ</scope><name>u</name></member>
      <member refid="class_pot_r_z_1aff5ef98880da3485610bf74720f00eee" prot="private" virt="non-virtual"><scope>PotRZ</scope><name>v</name></member>
      <member refid="class_pot_r_z_1aadafff4888fc29771c1a19a960c7efdd" prot="private" virt="non-virtual"><scope>PotRZ</scope><name>vm</name></member>
      <member refid="class_pot_r_z_1a0ca5eb32496b6da272e1991446fa005f" prot="private" virt="non-virtual"><scope>PotRZ</scope><name>vp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
