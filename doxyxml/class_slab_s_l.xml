<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_slab_s_l" kind="class" language="C++" prot="public">
    <compoundname>SlabSL</compoundname>
    <basecompoundref refid="class_pot_accel" prot="public" virt="non-virtual">PotAccel</basecompoundref>
    <includes refid="_slab_s_l_8_h" local="no">SlabSL.H</includes>
    <innerclass refid="struct_slab_s_l_1_1_slab_s_l_coef_header" prot="private">SlabSL::SlabSLCoefHeader</innerclass>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_slab_s_l_1a522d719367477fc609ef5da4851c77c2" prot="private" static="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 3 &gt;</type>
        <definition>using SlabSL::coefType =  Eigen::Tensor&lt;std::complex&lt;double&gt;, 3&gt;</definition>
        <argsstring></argsstring>
        <name>coefType</name>
        <qualifiedname>SlabSL::coefType</qualifiedname>
        <briefdescription>
<para>Coefficients are a 3-tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="42" column="3" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_slab_s_l_1a0cf74b3103814010731c05f9cba94498" prot="private" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_slab_s_l_1a522d719367477fc609ef5da4851c77c2" kindref="member">coefType</ref> &gt;</type>
        <definition>using SlabSL::coefTypePtr =  std::shared_ptr&lt;coefType&gt;</definition>
        <argsstring></argsstring>
        <name>coefTypePtr</name>
        <qualifiedname>SlabSL::coefTypePtr</qualifiedname>
        <briefdescription>
<para>Interpolation arrays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="167" column="3" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="167" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_slab_s_l_1ab55c0c05f5a2dccc43553ba98cda8887" prot="private" static="no" mutable="no">
        <type><ref refid="struct_slab_s_l_1_1_slab_s_l_coef_header" kindref="compound">SlabSLCoefHeader</ref></type>
        <definition>SlabSLCoefHeader SlabSL::coefheader</definition>
        <argsstring></argsstring>
        <name>coefheader</name>
        <qualifiedname>SlabSL::coefheader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="57" column="20" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a55e8654aada27a263c2e81bfce30a3df" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SlabSL::dfac</definition>
        <argsstring></argsstring>
        <name>dfac</name>
        <qualifiedname>SlabSL::dfac</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="52" column="11" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a3d092fffb3a9ad22e087da55836793cb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="class_slab_s_l_1a522d719367477fc609ef5da4851c77c2" kindref="member">coefType</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt;coefType&gt; &gt; SlabSL::differ1</definition>
        <argsstring></argsstring>
        <name>differ1</name>
        <qualifiedname>SlabSL::differ1</qualifiedname>
        <briefdescription>
<para>For updating levels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="161" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a83072280d47480e7f24ac4b269ee8a1e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_slab_s_l_1a522d719367477fc609ef5da4851c77c2" kindref="member">coefType</ref> &gt;</type>
        <definition>std::vector&lt;coefType&gt; SlabSL::expccof</definition>
        <argsstring></argsstring>
        <name>expccof</name>
        <qualifiedname>SlabSL::expccof</qualifiedname>
        <briefdescription>
<para>Current coefficient tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="45" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a62f99bc0a639b0f1bd29e9ee1fd6d715" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_slab_s_l_1a0cf74b3103814010731c05f9cba94498" kindref="member">coefTypePtr</ref> &gt;</type>
        <definition>std::vector&lt;coefTypePtr&gt; SlabSL::expccofL</definition>
        <argsstring></argsstring>
        <name>expccofL</name>
        <qualifiedname>SlabSL::expccofL</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="169" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a00bf7aee439434580338f8897173c695" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_slab_s_l_1a0cf74b3103814010731c05f9cba94498" kindref="member">coefTypePtr</ref> &gt;</type>
        <definition>std::vector&lt;coefTypePtr&gt; SlabSL::expccofN</definition>
        <argsstring></argsstring>
        <name>expccofN</name>
        <qualifiedname>SlabSL::expccofN</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="168" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a967832769efea804b747310387fc079c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_slab_s_l_1a522d719367477fc609ef5da4851c77c2" kindref="member">coefType</ref> &gt;</type>
        <definition>std::vector&lt;coefType&gt; SlabSL::expccofP</definition>
        <argsstring></argsstring>
        <name>expccofP</name>
        <qualifiedname>SlabSL::expccofP</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="45" column="23" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1aa1d43333ba857a58169ec6a428be3473" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_s_l_grid_slab" kindref="compound">SLGridSlab</ref> &gt;</type>
        <definition>std::shared_ptr&lt;SLGridSlab&gt; SlabSL::grid</definition>
        <argsstring></argsstring>
        <name>grid</name>
        <qualifiedname>SlabSL::grid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="39" column="19" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a903fb381cdeac5f01e9b843b744ed95c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SlabSL::hslab</definition>
        <argsstring></argsstring>
        <name>hslab</name>
        <qualifiedname>SlabSL::hslab</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="49" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1ad925b2d5584e06879723ae032f733200" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SlabSL::imx</definition>
        <argsstring></argsstring>
        <name>imx</name>
        <qualifiedname>SlabSL::imx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="51" column="7" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1aefff3111543608ef2c99cb272edc1d27" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SlabSL::imy</definition>
        <argsstring></argsstring>
        <name>imy</name>
        <qualifiedname>SlabSL::imy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="51" column="11" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a825046f581f2299dbb00385839277fb5" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SlabSL::imz</definition>
        <argsstring></argsstring>
        <name>imz</name>
        <qualifiedname>SlabSL::imz</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="51" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a33bdd3ed77e3316b2737359f3d8206d7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SlabSL::jmax</definition>
        <argsstring></argsstring>
        <name>jmax</name>
        <qualifiedname>SlabSL::jmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="51" column="19" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a514cf61d01c6ae9cc8aa8715b7fae940" prot="private" static="no" mutable="no">
        <type>std::complex&lt; double &gt;</type>
        <definition>std::complex&lt;double&gt; SlabSL::kfac</definition>
        <argsstring></argsstring>
        <name>kfac</name>
        <qualifiedname>SlabSL::kfac</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="53" column="16" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a61a7a2f2d1306ae8e71ccd9fc049d7a7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SlabSL::ngrid</definition>
        <argsstring></argsstring>
        <name>ngrid</name>
        <qualifiedname>SlabSL::ngrid</qualifiedname>
        <initializer>= 1000</initializer>
        <briefdescription>
<para>Default number of grid points for <ref refid="class_s_l_grid_slab" kindref="compound">SLGridSlab</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="121" column="7" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1af25aba0a9911049fa651f9f9ec7f8182" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SlabSL::nmaxx</definition>
        <argsstring></argsstring>
        <name>nmaxx</name>
        <qualifiedname>SlabSL::nmaxx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="48" column="7" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1aeb08b2c1dd672a3f6171fe67db1daa20" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SlabSL::nmaxy</definition>
        <argsstring></argsstring>
        <name>nmaxy</name>
        <qualifiedname>SlabSL::nmaxy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="48" column="13" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1aa98601cf636258c046366cf1cd3f2f94" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SlabSL::nmaxz</definition>
        <argsstring></argsstring>
        <name>nmaxz</name>
        <qualifiedname>SlabSL::nmaxz</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="48" column="19" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a5230854427d717fc77cfdff6aedd5d2c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SlabSL::nminx</definition>
        <argsstring></argsstring>
        <name>nminx</name>
        <qualifiedname>SlabSL::nminx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="47" column="7" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1af072d42e03227a25d0a5034a85d6e77e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SlabSL::nminy</definition>
        <argsstring></argsstring>
        <name>nminy</name>
        <qualifiedname>SlabSL::nminy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="47" column="13" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a7429986d460d82594e47a4ffda7a91c2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SlabSL::nnmax</definition>
        <argsstring></argsstring>
        <name>nnmax</name>
        <qualifiedname>SlabSL::nnmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="51" column="24" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a218f2b58cceddc3f6e806abf2f398986" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::complex&lt; double &gt; &gt;</type>
        <definition>std::vector&lt; std::complex&lt;double&gt; &gt; SlabSL::pack</definition>
        <argsstring></argsstring>
        <name>pack</name>
        <qualifiedname>SlabSL::pack</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="162" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1abcc90c9b4986352c5ba1fc19bd07f47d" prot="private" static="no" mutable="no">
        <type>CoefClasses::SlabCoefs</type>
        <definition>CoefClasses::SlabCoefs SlabSL::slabCoefs</definition>
        <argsstring></argsstring>
        <name>slabCoefs</name>
        <qualifiedname>SlabSL::slabCoefs</qualifiedname>
        <briefdescription>
<para>Coefficient container instance for writing HDF5. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="183" column="26" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a90f47058bbda05bc7ad8771fa567b354" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SlabSL::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>SlabSL::type</qualifiedname>
        <initializer>= &quot;isothermal&quot;</initializer>
        <briefdescription>
<para>Default slab type (must be &quot;isothermal&quot;, &quot;parabolic&quot;, or &quot;constant&quot;) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="124" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a240fe5a1f485bf015eacb51ac09c10d9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::complex&lt; double &gt; &gt;</type>
        <definition>std::vector&lt; std::complex&lt;double&gt; &gt; SlabSL::unpack</definition>
        <argsstring></argsstring>
        <name>unpack</name>
        <qualifiedname>SlabSL::unpack</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="162" column="20" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1ae1bc4f4db8f0a8db04f594aa5c0ecff7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; SlabSL::zfrc</definition>
        <argsstring></argsstring>
        <name>zfrc</name>
        <qualifiedname>SlabSL::zfrc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="55" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1aa755c07fffc17ecb46106348e26f135e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SlabSL::zmax</definition>
        <argsstring></argsstring>
        <name>zmax</name>
        <qualifiedname>SlabSL::zmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="49" column="10" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_slab_s_l_1a2e3a20f13e1612d7dea594a118ef5d2e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; SlabSL::zpot</definition>
        <argsstring></argsstring>
        <name>zpot</name>
        <qualifiedname>SlabSL::zpot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="55" column="20" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="55" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_slab_s_l_1a6d0b51f5f0db708c5eabc84c9d5a56b8" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int SlabSL::ID</definition>
        <argsstring></argsstring>
        <name>ID</name>
        <qualifiedname>SlabSL::ID</qualifiedname>
        <initializer>=1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="186" column="20" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="186" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_slab_s_l_1a0657ce43ccefeb7b32ce5ef83d31f747" prot="protected" static="yes" mutable="no">
        <type>const std::set&lt; std::string &gt;</type>
        <definition>const std::set&lt;std::string&gt; SlabSL::valid_keys</definition>
        <argsstring></argsstring>
        <name>valid_keys</name>
        <qualifiedname>SlabSL::valid_keys</qualifiedname>
        <briefdescription>
<para>Valid keys for YAML configurations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="194" column="25" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="194" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_slab_s_l_1aa5680ab11124aa23c2cb1fdcb5c511a8" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SlabSL::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <qualifiedname>SlabSL::id</qualifiedname>
        <briefdescription>
<para>Id string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="199" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="199" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_slab_s_l_1a1b767b7d6539901a8cd4a2c95f2587f3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SlabSL::compute_multistep_coefficients</definition>
        <argsstring>()</argsstring>
        <name>compute_multistep_coefficients</name>
        <qualifiedname>SlabSL::compute_multistep_coefficients</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extrapolate and sum coefficents per multistep level to get a complete set of coefficients for force evaluation at an intermediate time step </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="157" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_slab_s_l_1ac45b33a96db109994ba0fe35547a3269" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * SlabSL::determine_acceleration_and_potential_thread</definition>
        <argsstring>(void *arg)</argsstring>
        <name>determine_acceleration_and_potential_thread</name>
        <qualifiedname>SlabSL::determine_acceleration_and_potential_thread</qualifiedname>
        <reimplements refid="class_pot_accel_1a45b09387fd7083e15a11522454f4c4b3">determine_acceleration_and_potential_thread</reimplements>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Multithreading implementation of the force computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="150" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_slab_s_l_1ade2ef48d95981861d5dba8eb8fe1b392" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SlabSL::determine_coefficients</definition>
        <argsstring>(void)</argsstring>
        <name>determine_coefficients</name>
        <qualifiedname>SlabSL::determine_coefficients</qualifiedname>
        <reimplements refid="class_pot_accel_1a30dac3c15c2a7a67e9860e086cda27b8">determine_coefficients</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Usual evaluation interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="128" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_slab_s_l_1a86e9fff4171b9d29f9550ce73727f1c0" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * SlabSL::determine_coefficients_thread</definition>
        <argsstring>(void *arg)</argsstring>
        <name>determine_coefficients_thread</name>
        <qualifiedname>SlabSL::determine_coefficients_thread</qualifiedname>
        <reimplements refid="class_pot_accel_1a28536cd936e5c94562d5bccff2470d49">determine_coefficients_thread</reimplements>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Threading. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="149" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_slab_s_l_1a0424b21e20c21a17fd2180fc0b5eeba1" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SlabSL::get_acceleration_and_potential</definition>
        <argsstring>(Component *)</argsstring>
        <name>get_acceleration_and_potential</name>
        <qualifiedname>SlabSL::get_acceleration_and_potential</qualifiedname>
        <reimplements refid="class_pot_accel_1ab78f20762031db204f636fc8e74ea986">get_acceleration_and_potential</reimplements>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>The main force evaluation routine to be called by clients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="129" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_slab_s_l_1a4a725652fef931de51889699f6f942db" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SlabSL::multistep_update</definition>
        <argsstring>(int cur, int next, Component *c, int i, int id)</argsstring>
        <name>multistep_update</name>
        <qualifiedname>SlabSL::multistep_update</qualifiedname>
        <reimplements refid="class_pot_accel_1aa6c3661783144fd643ebaf1a2fa6278a">multistep_update</reimplements>
        <param>
          <type>int</type>
          <declname>cur</declname>
        </param>
        <param>
          <type>int</type>
          <declname>next</declname>
        </param>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Implementation of level shifts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="178" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_slab_s_l_1a200cb31ebcaa0d7573aece5765d5a0bb" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SlabSL::multistep_update_begin</definition>
        <argsstring>()</argsstring>
        <name>multistep_update_begin</name>
        <qualifiedname>SlabSL::multistep_update_begin</qualifiedname>
        <reimplements refid="class_pot_accel_1a0e720b605350a9fb4e0d24dae2a1c381">multistep_update_begin</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the multi time step coefficient table when moving particle <computeroutput>i</computeroutput> from level <computeroutput>cur</computeroutput> to level <computeroutput>next</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="177" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_slab_s_l_1a7cffd18e053e3cdf8cfc459430019238" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SlabSL::multistep_update_finish</definition>
        <argsstring>()</argsstring>
        <name>multistep_update_finish</name>
        <qualifiedname>SlabSL::multistep_update_finish</qualifiedname>
        <reimplements refid="class_pot_accel_1acb0c9d88466949f2bf84da42439f2a1e">multistep_update_finish</reimplements>
        <briefdescription>
<para>Execute to finish level shifts for particles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="179" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_slab_s_l_1acf131843a426e15f93065da298737934" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SlabSL::swap_coefs</definition>
        <argsstring>(std::vector&lt; coefType &gt; &amp;from, std::vector&lt; coefType &gt; &amp;to)</argsstring>
        <name>swap_coefs</name>
        <qualifiedname>SlabSL::swap_coefs</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="class_slab_s_l_1a522d719367477fc609ef5da4851c77c2" kindref="member">coefType</ref> &gt; &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_slab_s_l_1a522d719367477fc609ef5da4851c77c2" kindref="member">coefType</ref> &gt; &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para><ref refid="class_swap" kindref="compound">Swap</ref> coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="133" column="8" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="133" bodyend="145"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_slab_s_l_1adcfe2a7cda812280a978793ccd8997e8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SlabSL::initialize</definition>
        <argsstring>(void)</argsstring>
        <name>initialize</name>
        <qualifiedname>SlabSL::initialize</qualifiedname>
        <reimplements refid="class_pot_accel_1ada60d03bc82b8740fc7275d4c3f2149d">initialize</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Parse parameters and initialize on first call. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="191" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_slab_s_l_1aa35f069d1743fa627eea28b53e78f514" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SlabSL::dump_coefs_h5</definition>
        <argsstring>(const std::string &amp;file)</argsstring>
        <name>dump_coefs_h5</name>
        <qualifiedname>SlabSL::dump_coefs_h5</qualifiedname>
        <reimplements refid="class_pot_accel_1ac53a3ab4bdfa2be33fbe4286b939230c">dump_coefs_h5</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Coefficient output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="208" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_slab_s_l_1a794cfa67733dd42c028a7f966c743218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SlabSL::SlabSL</definition>
        <argsstring>(Component *c0, const YAML::Node &amp;conf)</argsstring>
        <name>SlabSL</name>
        <qualifiedname>SlabSL::SlabSL</qualifiedname>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c0</declname>
        </param>
        <param>
          <type>const YAML::Node &amp;</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="202" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_slab_s_l_1a7635145cb28d52b58c2863045ec0d410" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual SlabSL::~SlabSL</definition>
        <argsstring>()</argsstring>
        <name>~SlabSL</name>
        <qualifiedname>SlabSL::~SlabSL</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="205" column="11"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This routine computes the potential, acceleration and density using expansion periodic in X &amp; Y and outgoing vacuum boundary condtions in Z </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>PotAccel</label>
        <link refid="class_pot_accel"/>
      </node>
      <node id="1">
        <label>SlabSL</label>
        <link refid="class_slab_s_l"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>Component</label>
        <link refid="class_component"/>
        <childnode refid="4" relation="usage">
          <edgelabel>c0</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>force</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>orient</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>time_so_far</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>EL3</label>
        <link refid="class_e_l3"/>
      </node>
      <node id="5">
        <label>Orient</label>
        <link refid="class_orient"/>
        <childnode refid="6" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>PotAccel</label>
        <link refid="class_pot_accel"/>
        <childnode refid="3" relation="usage">
          <edgelabel>td</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>cC</edgelabel>
          <edgelabel>component</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>SlabSL</label>
        <link refid="class_slab_s_l"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>coefheader</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>SlabSL::SlabSLCoefHeader</label>
        <link refid="struct_slab_s_l_1_1_slab_s_l_coef_header"/>
      </node>
      <node id="7">
        <label>Timer</label>
        <link refid="class_timer"/>
      </node>
      <node id="3">
        <label>thrd_pass_PotAccel</label>
        <link refid="structthrd__pass___pot_accel"/>
        <childnode refid="2" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/src/SlabSL.H" line="23" column="1" bodyfile="/home/weinberg/Projects/EXP/src/SlabSL.H" bodystart="24" bodyend="209"/>
    <listofallmembers>
      <member refid="class_pot_accel_1a6a637997f73ca85ce78d8c92eec7ad1b" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>atol</name></member>
      <member refid="class_pot_accel_1afa2cd3b0bf51e23d8bfc54aac73ef010" prot="protected" virt="non-virtual"><scope>SlabSL</scope><name>cC</name></member>
      <member refid="class_pot_accel_1a630b9cdcae4ed4915cc72179fe9821c6" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>cc_lock</name></member>
      <member refid="class_pot_accel_1a944213bbf31fca1508ba817e392b9fc6" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>ClearExternal</name></member>
      <member refid="class_pot_accel_1ac7ab5e578b5b2bbd29fe35738b03d771" prot="protected" virt="non-virtual"><scope>SlabSL</scope><name>coef_dump</name></member>
      <member refid="class_slab_s_l_1ab55c0c05f5a2dccc43553ba98cda8887" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>coefheader</name></member>
      <member refid="class_slab_s_l_1a522d719367477fc609ef5da4851c77c2" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>coefType</name></member>
      <member refid="class_slab_s_l_1a0cf74b3103814010731c05f9cba94498" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>coefTypePtr</name></member>
      <member refid="class_pot_accel_1aa6d9bde455e08dc9fead4f152357cb15" prot="protected" virt="non-virtual"><scope>SlabSL</scope><name>component</name></member>
      <member refid="class_pot_accel_1a49e2936503ffdad1dd86d3f0c934d25a" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>compute</name></member>
      <member refid="class_slab_s_l_1a1b767b7d6539901a8cd4a2c95f2587f3" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>compute_multistep_coefficients</name></member>
      <member refid="class_pot_accel_1ab682d4480d7d2946a7bef7f93ac0c6a0" prot="protected" virt="non-virtual"><scope>SlabSL</scope><name>conf</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda489785884cf0770efb348b919878bf23" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>cube</name></member>
      <member refid="class_pot_accel_1ac4def6f1c9318d8b49e62a4c9f2d6786" prot="protected" virt="non-virtual"><scope>SlabSL</scope><name>cuda_aware</name></member>
      <member refid="class_pot_accel_1a5029810ccad93845aab9919e005bafe0" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>cudaAware</name></member>
      <member refid="class_pot_accel_1a823dbb4c07cab1541d7ee738c6baef99" prot="protected" virt="non-virtual"><scope>SlabSL</scope><name>current_keys</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fdac215da2d633c31e7278fb1a3dd6af268" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>cylinder</name></member>
      <member refid="class_slab_s_l_1ac45b33a96db109994ba0fe35547a3269" prot="private" virt="virtual"><scope>SlabSL</scope><name>determine_acceleration_and_potential_thread</name></member>
      <member refid="class_slab_s_l_1ade2ef48d95981861d5dba8eb8fe1b392" prot="private" virt="virtual"><scope>SlabSL</scope><name>determine_coefficients</name></member>
      <member refid="class_pot_accel_1a3a9722c6b123ba2a0dd3671dec6cf724" prot="public" virt="virtual" ambiguityscope="PotAccel::"><scope>SlabSL</scope><name>determine_coefficients</name></member>
      <member refid="class_slab_s_l_1a86e9fff4171b9d29f9550ce73727f1c0" prot="private" virt="virtual"><scope>SlabSL</scope><name>determine_coefficients_thread</name></member>
      <member refid="class_slab_s_l_1a55e8654aada27a263c2e81bfce30a3df" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>dfac</name></member>
      <member refid="class_slab_s_l_1a3d092fffb3a9ad22e087da55836793cb" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>differ1</name></member>
      <member refid="class_pot_accel_1a6a9ec23d29b553c1625bd8e88fe7692d" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>dof</name></member>
      <member refid="class_pot_accel_1a10f4dd971b1a056bb6dacf01f2e2bcbf" prot="public" virt="virtual"><scope>SlabSL</scope><name>dump_coefs</name></member>
      <member refid="class_slab_s_l_1aa35f069d1743fa627eea28b53e78f514" prot="public" virt="virtual"><scope>SlabSL</scope><name>dump_coefs_h5</name></member>
      <member refid="class_pot_accel_1abee9651463af53460b622250d311329e" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>exp_thread_fork</name></member>
      <member refid="class_slab_s_l_1a83072280d47480e7f24ac4b269ee8a1e" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>expccof</name></member>
      <member refid="class_slab_s_l_1a62f99bc0a639b0f1bd29e9ee1fd6d715" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>expccofL</name></member>
      <member refid="class_slab_s_l_1a00bf7aee439434580338f8897173c695" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>expccofN</name></member>
      <member refid="class_slab_s_l_1a967832769efea804b747310387fc079c" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>expccofP</name></member>
      <member refid="class_pot_accel_1adb6ef0bdae7d3520ca1f9fd8a6d648ea" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>geometry</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fd" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>Geometry</name></member>
      <member refid="class_pot_accel_1ade38f6ecdf80f80cde847d463b14909b" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>geoname</name></member>
      <member refid="class_slab_s_l_1a0424b21e20c21a17fd2180fc0b5eeba1" prot="private" virt="virtual"><scope>SlabSL</scope><name>get_acceleration_and_potential</name></member>
      <member refid="class_pot_accel_1a0998c361bca277b3bba95f59acaba203" prot="public" virt="virtual"><scope>SlabSL</scope><name>getScale</name></member>
      <member refid="class_slab_s_l_1aa1d43333ba857a58169ec6a428be3473" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>grid</name></member>
      <member refid="class_pot_accel_1a4a812594dff363f07bf57d69a60e4a13" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>HaveCoefDump</name></member>
      <member refid="class_slab_s_l_1a903fb381cdeac5f01e9b843b744ed95c" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>hslab</name></member>
      <member refid="class_slab_s_l_1a6d0b51f5f0db708c5eabc84c9d5a56b8" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>ID</name></member>
      <member refid="class_slab_s_l_1aa5680ab11124aa23c2cb1fdcb5c511a8" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>id</name></member>
      <member refid="class_slab_s_l_1ad925b2d5584e06879723ae032f733200" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>imx</name></member>
      <member refid="class_slab_s_l_1aefff3111543608ef2c99cb272edc1d27" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>imy</name></member>
      <member refid="class_slab_s_l_1a825046f581f2299dbb00385839277fb5" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>imz</name></member>
      <member refid="class_slab_s_l_1adcfe2a7cda812280a978793ccd8997e8" prot="protected" virt="virtual"><scope>SlabSL</scope><name>initialize</name></member>
      <member refid="class_slab_s_l_1a33bdd3ed77e3316b2737359f3d8206d7" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>jmax</name></member>
      <member refid="class_slab_s_l_1a514cf61d01c6ae9cc8aa8715b7fae940" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>kfac</name></member>
      <member refid="class_pot_accel_1a706b04f03c8beb4369dd125406770116" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>kill_mutex</name></member>
      <member refid="class_pot_accel_1a65fa890eea987e18d552825ab074939b" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>make_mutex</name></member>
      <member refid="class_pot_accel_1ad9ff6c9f431ad2f8ad2e5895c222ede8" prot="protected" virt="non-virtual"><scope>SlabSL</scope><name>mlevel</name></member>
      <member refid="class_pot_accel_1a2ba58ca0219d337b13c87697353d4121" prot="public" virt="virtual"><scope>SlabSL</scope><name>multistep_debug</name></member>
      <member refid="class_pot_accel_1aaada1d8e8970e63332269b0d00aed97f" prot="public" virt="virtual"><scope>SlabSL</scope><name>multistep_reset</name></member>
      <member refid="class_slab_s_l_1a4a725652fef931de51889699f6f942db" prot="private" virt="virtual"><scope>SlabSL</scope><name>multistep_update</name></member>
      <member refid="class_slab_s_l_1a200cb31ebcaa0d7573aece5765d5a0bb" prot="private" virt="virtual"><scope>SlabSL</scope><name>multistep_update_begin</name></member>
      <member refid="class_slab_s_l_1a7cffd18e053e3cdf8cfc459430019238" prot="private" virt="virtual"><scope>SlabSL</scope><name>multistep_update_finish</name></member>
      <member refid="class_pot_accel_1a73976f361ed7abf13001835bfcdee639" prot="protected" virt="non-virtual"><scope>SlabSL</scope><name>nbodies</name></member>
      <member refid="class_slab_s_l_1a61a7a2f2d1306ae8e71ccd9fc049d7a7" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>ngrid</name></member>
      <member refid="class_slab_s_l_1af25aba0a9911049fa651f9f9ec7f8182" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>nmaxx</name></member>
      <member refid="class_slab_s_l_1aeb08b2c1dd672a3f6171fe67db1daa20" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>nmaxy</name></member>
      <member refid="class_slab_s_l_1aa98601cf636258c046366cf1cd3f2f94" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>nmaxz</name></member>
      <member refid="class_slab_s_l_1a5230854427d717fc77cfdff6aedd5d2c" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>nminx</name></member>
      <member refid="class_slab_s_l_1af072d42e03227a25d0a5034a85d6e77e" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>nminy</name></member>
      <member refid="class_slab_s_l_1a7429986d460d82594e47a4ffda7a91c2" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>nnmax</name></member>
      <member refid="class_pot_accel_1a4f2099b1b705731b909e63c90ea59f04" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>NoCoefs</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda7c49f38007dad33fb1e48fdebdd2f8c1" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>other</name></member>
      <member refid="class_slab_s_l_1a218f2b58cceddc3f6e806abf2f398986" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>pack</name></member>
      <member refid="class_pot_accel_1a74b41dd5c2f102dd3184ac53b6172462" prot="protected" virt="non-virtual"><scope>SlabSL</scope><name>play_back</name></member>
      <member refid="class_pot_accel_1aea1c756cd9616a1daf73541780b45798" prot="protected" virt="non-virtual"><scope>SlabSL</scope><name>play_cnew</name></member>
      <member refid="class_pot_accel_1a801fdbd01e551033e79f274e4a7c1d1e" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>PotAccel</name></member>
      <member refid="class_pot_accel_1a5e257d38dbf5c3d9630906a96abf6915" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>print_timings</name></member>
      <member refid="class_pot_accel_1a37a3c348c0febbf70ff94949071c3beb" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>print_timings</name></member>
      <member refid="class_pot_accel_1a8aea0d1740bf7432e1193dda7121a8bb" prot="public" virt="virtual"><scope>SlabSL</scope><name>RegisterComponent</name></member>
      <member refid="class_pot_accel_1added387424e4e4d23bac8500822e4324" prot="protected" virt="non-virtual"><scope>SlabSL</scope><name>scale</name></member>
      <member refid="class_pot_accel_1ac65dfca720c42ea4a773024d1eaf977f" prot="public" virt="virtual"><scope>SlabSL</scope><name>set_multistep_level</name></member>
      <member refid="class_pot_accel_1a6dc784a141afdec5f4daad63eba20b81" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>SetExternal</name></member>
      <member refid="class_pot_accel_1ad528efbd280a21543addaf7747e9089a" prot="public" virt="virtual"><scope>SlabSL</scope><name>setScale</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda0a1acd8c0d6e745fb0ae3e33e458a9b8" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>slab</name></member>
      <member refid="class_slab_s_l_1abcc90c9b4986352c5ba1fc19bd07f47d" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>slabCoefs</name></member>
      <member refid="class_slab_s_l_1a794cfa67733dd42c028a7f966c743218" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>SlabSL</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda996ce4577548b6da6b1330a78b1c6f6a" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>sphere</name></member>
      <member refid="class_slab_s_l_1acf131843a426e15f93065da298737934" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>swap_coefs</name></member>
      <member refid="class_pot_accel_1aff158a74d7328a080ed619c1456836f5" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>t</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda1792d3c00a41ee78957c83611fd368a2" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>table</name></member>
      <member refid="class_pot_accel_1a125d7343a34d292a3e4a48a5d984cac4" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>td</name></member>
      <member refid="class_pot_accel_1a86d0d012a44e2eb7c3e385d852a5fdde" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>thread_timing_beg</name></member>
      <member refid="class_pot_accel_1a76c805cd8d0d134d37929eeb48115b33" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>thread_timing_end</name></member>
      <member refid="class_pot_accel_1a4315e73a641c54eefc548b7d14cb06b6" prot="protected" virt="non-virtual"><scope>SlabSL</scope><name>timer_list</name></member>
      <member refid="class_pot_accel_1aabce5ff868883c6191b8b7f8f6281c04" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>TList</name></member>
      <member refid="class_slab_s_l_1a90f47058bbda05bc7ad8771fa567b354" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>type</name></member>
      <member refid="class_pot_accel_1a0355cfe43cdde5237f7be234e94de64b" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>unmatched</name></member>
      <member refid="class_slab_s_l_1a240fe5a1f485bf015eacb51ac09c10d9" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>unpack</name></member>
      <member refid="class_pot_accel_1acd32c6464b705469911df718114187b9" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>use</name></member>
      <member refid="class_pot_accel_1a59a4a86ea8d2b3a9a5d420ef7e712697" prot="protected" virt="non-virtual"><scope>SlabSL</scope><name>use_external</name></member>
      <member refid="class_pot_accel_1a8fe5beef77e790f0d7bf6f455f5bf1d3" prot="protected" virt="non-virtual"><scope>SlabSL</scope><name>used</name></member>
      <member refid="class_pot_accel_1ae2e0dbf849707704a3d42a1fa91ce060" prot="public" virt="non-virtual"><scope>SlabSL</scope><name>Used</name></member>
      <member refid="class_slab_s_l_1a0657ce43ccefeb7b32ce5ef83d31f747" prot="protected" virt="non-virtual"><scope>SlabSL</scope><name>valid_keys</name></member>
      <member refid="class_slab_s_l_1ae1bc4f4db8f0a8db04f594aa5c0ecff7" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>zfrc</name></member>
      <member refid="class_slab_s_l_1aa755c07fffc17ecb46106348e26f135e" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>zmax</name></member>
      <member refid="class_slab_s_l_1a2e3a20f13e1612d7dea594a118ef5d2e" prot="private" virt="non-virtual"><scope>SlabSL</scope><name>zpot</name></member>
      <member refid="class_pot_accel_1adcc326688bb152249f81e88d6edfde62" prot="public" virt="virtual"><scope>SlabSL</scope><name>~PotAccel</name></member>
      <member refid="class_slab_s_l_1a7635145cb28d52b58c2863045ec0d410" prot="public" virt="virtual"><scope>SlabSL</scope><name>~SlabSL</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
