<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_sph_s_l" kind="class" language="C++" prot="public">
    <compoundname>SphSL</compoundname>
    <includes refid="_sph_s_l_8_h" local="no">SphSL.H</includes>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_sph_s_l_1a8bab3f49b8435b6dc775e56f0af89054" prot="private" static="no">
        <type>Eigen::Matrix&lt; double, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor &gt;</type>
        <definition>typedef Eigen::Matrix&lt;double, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor&gt; SphSL::EigenColMajor</definition>
        <argsstring></argsstring>
        <name>EigenColMajor</name>
        <qualifiedname>SphSL::EigenColMajor</qualifiedname>
        <briefdescription>
<para>For coefficient writing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="58" column="3" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sph_s_l_1a4c0055b5874cdaef33d778ace1805ea5" prot="private" static="no">
        <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
        <definition>using SphSL::matT =  std::vector&lt;Eigen::MatrixXd&gt;</definition>
        <argsstring></argsstring>
        <name>matT</name>
        <qualifiedname>SphSL::matT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="34" column="3" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sph_s_l_1ab061fb52a395bc192430ddae492f6c5e" prot="private" static="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>using SphSL::vecT =  std::vector&lt;Eigen::VectorXd&gt;</definition>
        <argsstring></argsstring>
        <name>vecT</name>
        <qualifiedname>SphSL::vecT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="35" column="3" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="35" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_sph_s_l_1a930da1da9375b59ba66d77f6744e22c7" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int SphSL::cmagic</definition>
        <argsstring></argsstring>
        <name>cmagic</name>
        <qualifiedname>SphSL::cmagic</qualifiedname>
        <initializer>= 0xc0a57a2</initializer>
        <briefdescription>
<para>Coefficient magic number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="54" column="22" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a78463bb857162b66ebc22d7476c6ba2b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SphSL::coefs_defined</definition>
        <argsstring></argsstring>
        <name>coefs_defined</name>
        <qualifiedname>SphSL::coefs_defined</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="26" column="8" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a30744f045b72d41197971f26588cf73a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SphSL::compute_covar</definition>
        <argsstring></argsstring>
        <name>compute_covar</name>
        <qualifiedname>SphSL::compute_covar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="32" column="8" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1add31a346d78f04aa42f8193359a71d3d" prot="private" static="no" mutable="no">
        <type><ref refid="class_sph_s_l_1a4c0055b5874cdaef33d778ace1805ea5" kindref="member">matT</ref></type>
        <definition>matT SphSL::covar</definition>
        <argsstring></argsstring>
        <name>covar</name>
        <qualifiedname>SphSL::covar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="37" column="8" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="37" bodyend="-1"/>
        <referencedby refid="class_sph_s_l_1a057b1e689049e1e87203bcefb8962a70" compoundref="_sph_s_l_8_h" startline="123" endline="123">retrieve_covar</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1ab6a104467e2eee94aed94037fd6d9256" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SphSL::curbin</definition>
        <argsstring></argsstring>
        <name>curbin</name>
        <qualifiedname>SphSL::curbin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="45" column="13" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a87bfdfe5179e2274b3eefc0023bf362a" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphSL::d2legs</definition>
        <argsstring></argsstring>
        <name>d2legs</name>
        <qualifiedname>SphSL::d2legs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="24" column="30" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a7c888d9035d66d0952f5f916e529aa94" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphSL::dend</definition>
        <argsstring></argsstring>
        <name>dend</name>
        <qualifiedname>SphSL::dend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="23" column="34" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a501c85f6c8e807f525ddd048fbf2f846" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphSL::dlegs</definition>
        <argsstring></argsstring>
        <name>dlegs</name>
        <qualifiedname>SphSL::dlegs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="24" column="24" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1aaa36e6af43205045b09a4f0aaba2e9d3" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphSL::dpot</definition>
        <argsstring></argsstring>
        <name>dpot</name>
        <qualifiedname>SphSL::dpot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="23" column="24" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1af5a5f1d5f05d009fe6e0ecd877bdd937" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphSL::dpt2</definition>
        <argsstring></argsstring>
        <name>dpt2</name>
        <qualifiedname>SphSL::dpt2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="23" column="29" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a04d70545f5f2c8e1865fba292a4c3bdf" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphSL::expcoef</definition>
        <argsstring></argsstring>
        <name>expcoef</name>
        <qualifiedname>SphSL::expcoef</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="28" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="28" bodyend="-1"/>
        <referencedby refid="class_sph_s_l_1a0aa7582a73c17d16ba25f8e860748dc9" compoundref="_sph_s_l_8_h" startline="105" endline="105">retrieve_coefs</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a4ec7b43106f56c54f8fa19a47e5fb67f" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphSL::factorial</definition>
        <argsstring></argsstring>
        <name>factorial</name>
        <qualifiedname>SphSL::factorial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="27" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a8abf3dfbafd87bfc9c0f08b9a305bf5b" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphSL::legs</definition>
        <argsstring></argsstring>
        <name>legs</name>
        <qualifiedname>SphSL::legs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="24" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1abc22876a683448046156a54269e8bc73" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SphSL::lmax</definition>
        <argsstring></argsstring>
        <name>lmax</name>
        <qualifiedname>SphSL::lmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="20" column="7" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="20" bodyend="-1"/>
        <referencedby refid="class_sph_s_l_1a1af10e4a0d69d827f25fef84a36787f2" compoundref="_sph_s_l_8_h" startline="153" endline="153">getLmax</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a172a37c4b0918902a6d326c298d3bba7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; SphSL::massB</definition>
        <argsstring></argsstring>
        <name>massB</name>
        <qualifiedname>SphSL::massB</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="44" column="15" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a18b3cdc7761fe54afdbb9fafbc8432c2" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphSL::maxSNR</definition>
        <argsstring></argsstring>
        <name>maxSNR</name>
        <qualifiedname>SphSL::maxSNR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="47" column="17" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="47" bodyend="-1"/>
        <referencedby refid="class_sph_s_l_1a140d9cf383f197b5e79ef6a3335303ee" compoundref="_sph_s_l_8_h" startline="111" endline="111">getMaxSNR</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1ae0ea8b274b0356391d1031532abc6811" prot="private" static="no" mutable="no">
        <type><ref refid="class_sph_s_l_1ab061fb52a395bc192430ddae492f6c5e" kindref="member">vecT</ref></type>
        <definition>vecT SphSL::mean</definition>
        <argsstring></argsstring>
        <name>mean</name>
        <qualifiedname>SphSL::mean</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="38" column="8" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a127b51dfd6b985b1f227e5e939f1a1bd" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_sph_s_l_1ab061fb52a395bc192430ddae492f6c5e" kindref="member">vecT</ref> &gt;</type>
        <definition>std::vector&lt;vecT&gt; SphSL::meanB</definition>
        <argsstring></argsstring>
        <name>meanB</name>
        <qualifiedname>SphSL::meanB</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="43" column="15" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a48df205c40b2338b96208f0ec93e8a03" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphSL::minSNR</definition>
        <argsstring></argsstring>
        <name>minSNR</name>
        <qualifiedname>SphSL::minSNR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="47" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="47" bodyend="-1"/>
        <referencedby refid="class_sph_s_l_1a3a07394c4dd0445d597db2dd6d46b88a" compoundref="_sph_s_l_8_h" startline="108" endline="108">getMinSNR</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a05d4ce6810932347899461c845e985c9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SphSL::nmax</definition>
        <argsstring></argsstring>
        <name>nmax</name>
        <qualifiedname>SphSL::nmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="20" column="12" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="20" bodyend="-1"/>
        <referencedby refid="class_sph_s_l_1a2421f46e29dc076412c8294c2f96ae5a" compoundref="_sph_s_l_8_h" startline="156" endline="156">getNmax</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a63b337ab800bb0789204dfa255286e11" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SphSL::npart</definition>
        <argsstring></argsstring>
        <name>npart</name>
        <qualifiedname>SphSL::npart</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="45" column="7" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a8a72b80960d628509aea5ead8d5bb5eb" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphSL::potd</definition>
        <argsstring></argsstring>
        <name>potd</name>
        <qualifiedname>SphSL::potd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="23" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="23" bodyend="-1"/>
        <referencedby refid="class_sph_s_l_1a6e45fb63b6d26033af1b94d87bd87b96" compoundref="_sph_s_l_8_h" startline="126" endline="126">get_pot</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1ac84a9750582da713a137eda0d6285984" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphSL::rmax</definition>
        <argsstring></argsstring>
        <name>rmax</name>
        <qualifiedname>SphSL::rmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="21" column="15" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a9db5cca67563e686232fe6ac05dad282" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphSL::rmin</definition>
        <argsstring></argsstring>
        <name>rmin</name>
        <qualifiedname>SphSL::rmin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="21" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1ad36aa73535e8c1d427d1129d2f96b006" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphSL::rscl</definition>
        <argsstring></argsstring>
        <name>rscl</name>
        <qualifiedname>SphSL::rscl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="29" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="29" bodyend="-1"/>
        <referencedby refid="class_sph_s_l_1ad14bfbb766ace476d4211ad8caab176e" compoundref="_sph_s_l_8_h" startline="90" endline="90">set_scale</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a646da787ac7598df4c4faeea9c882e72" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_s_l_grid_sph" kindref="compound">SLGridSph</ref> &gt;</type>
        <definition>std::shared_ptr&lt;SLGridSph&gt; SphSL::sl</definition>
        <argsstring></argsstring>
        <name>sl</name>
        <qualifiedname>SphSL::sl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="19" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="19" bodyend="-1"/>
        <referencedby refid="class_sph_s_l_1a87c1d60465a1d18ffa2665b05fedae3d" compoundref="_sph_s_l_8_h" startline="166" endline="166">basis</referencedby>
        <referencedby refid="class_sph_s_l_1a6e45fb63b6d26033af1b94d87bd87b96" compoundref="_sph_s_l_8_h" startline="126" endline="126">get_pot</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1ad641e1328aed1c0c56e35bebf847b0e8" prot="private" static="no" mutable="no">
        <type><ref refid="class_sph_s_l_1ab061fb52a395bc192430ddae492f6c5e" kindref="member">vecT</ref></type>
        <definition>vecT SphSL::svar</definition>
        <argsstring></argsstring>
        <name>svar</name>
        <qualifiedname>SphSL::svar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="39" column="8" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a0e213fdbc73023e17600f40f5337a04d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphSL::totalMass</definition>
        <argsstring></argsstring>
        <name>totalMass</name>
        <qualifiedname>SphSL::totalMass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="41" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="41" bodyend="-1"/>
        <referencedby refid="class_sph_s_l_1a17812bffe550498ed83972cad844a308" compoundref="_sph_s_l_8_h" startline="114" endline="114">getMass</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a6b9d4c1067f35ba9473f68495a620b1a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SphSL::used</definition>
        <argsstring></argsstring>
        <name>used</name>
        <qualifiedname>SphSL::used</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="30" column="7" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a9425160621626af51cc9df5e4af59520" prot="private" static="no" mutable="no">
        <type><ref refid="class_sph_s_l_1a4c0055b5874cdaef33d778ace1805ea5" kindref="member">matT</ref></type>
        <definition>matT SphSL::uvec</definition>
        <argsstring></argsstring>
        <name>uvec</name>
        <qualifiedname>SphSL::uvec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="40" column="8" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1ad2a1e490eea1a7ace6a4164d92c8b934" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd SphSL::work</definition>
        <argsstring></argsstring>
        <name>work</name>
        <qualifiedname>SphSL::work</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="49" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="49" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_sph_s_l_1a122af0e8ffe78ea0fdb1a0892fa14d21" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>double SphSL::HEXP</definition>
        <argsstring></argsstring>
        <name>HEXP</name>
        <qualifiedname>SphSL::HEXP</qualifiedname>
        <briefdescription>
<para>Hall exponent (default: 1) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="72" column="17" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a67986223672bb1114d69afe782c5da95" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool SphSL::mpi</definition>
        <argsstring></argsstring>
        <name>mpi</name>
        <qualifiedname>SphSL::mpi</qualifiedname>
        <briefdescription>
<para>Use MPI? (default: false) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="69" column="15" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a5341da43cd684f8d4bc2ac8dbd79b946" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int SphSL::NEV</definition>
        <argsstring></argsstring>
        <name>NEV</name>
        <qualifiedname>SphSL::NEV</qualifiedname>
        <briefdescription>
<para>Number of eigenfunctions for each subspace for PNG figure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="63" column="14" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sph_s_l_1a0befac0479ce8dfb2c082f03165dbd56" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int SphSL::NUMR</definition>
        <argsstring></argsstring>
        <name>NUMR</name>
        <qualifiedname>SphSL::NUMR</qualifiedname>
        <briefdescription>
<para>Number of radial points in table (default: 800) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="66" column="14" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="66" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_sph_s_l_1aa274dd1580e64807ea77d08661b4f272" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphSL::bomb</definition>
        <argsstring>(char *s)</argsstring>
        <name>bomb</name>
        <qualifiedname>SphSL::bomb</qualifiedname>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="51" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sph_s_l_1a5f4b82b3684bcdfa5b15770152065fab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphSL::accumulate</definition>
        <argsstring>(double x, double y, double z, double mass)</argsstring>
        <name>accumulate</name>
        <qualifiedname>SphSL::accumulate</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mass</declname>
        </param>
        <briefdescription>
<para>Accumulate new coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="133" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a60c76935b78787bb3c25d2d3bcbbd27f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphSL::all_eval</definition>
        <argsstring>(double r, double costh, double phi, double &amp;den0, double &amp;den1, double &amp;pot0, double &amp;pot1, double &amp;potr, double &amp;pott, double &amp;potp, int L1=0, int L2=10000, int N1=0, int N2=10000)</argsstring>
        <name>all_eval</name>
        <qualifiedname>SphSL::all_eval</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>costh</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>den0</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>den1</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>pot0</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>pot1</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>potr</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>pott</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>potp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>L1</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>L2</declname>
          <defval>10000</defval>
        </param>
        <param>
          <type>int</type>
          <declname>N1</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>N2</declname>
          <defval>10000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="146" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a87c1d60465a1d18ffa2665b05fedae3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_s_l_grid_sph" kindref="compound">SLGridSph</ref> &gt;</type>
        <definition>std::shared_ptr&lt; SLGridSph &gt; SphSL::basis</definition>
        <argsstring>(void)</argsstring>
        <name>basis</name>
        <qualifiedname>SphSL::basis</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Access to basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="166" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="166" bodyend="166"/>
        <references refid="class_sph_s_l_1a646da787ac7598df4c4faeea9c882e72" compoundref="_sph_s_l_8_h" startline="19">sl</references>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a382d88ecd625ea72257d1a822ce405cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphSL::dens_pot_eval</definition>
        <argsstring>(double r, double costh, double phi, double &amp;dens0, double &amp;dens, double &amp;potl0, double &amp;potl, int L1=0, int L2=10000, int N1=0, int N2=10000)</argsstring>
        <name>dens_pot_eval</name>
        <qualifiedname>SphSL::dens_pot_eval</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>costh</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dens0</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dens</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>potl0</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>potl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>L1</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>L2</declname>
          <defval>10000</defval>
        </param>
        <param>
          <type>int</type>
          <declname>N1</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>N2</declname>
          <defval>10000</defval>
        </param>
        <briefdescription>
<para>Evaluate potential and density. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="136" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1ab3a34ae7efa8a490566ecb632254baed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphSL::dump_coefs</definition>
        <argsstring>(double time, std::ostream &amp;out)</argsstring>
        <name>dump_coefs</name>
        <qualifiedname>SphSL::dump_coefs</qualifiedname>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Dump coefficients using the standard header. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="169" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a6e45fb63b6d26033af1b94d87bd87b96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphSL::get_pot</definition>
        <argsstring>(double x)</argsstring>
        <name>get_pot</name>
        <qualifiedname>SphSL::get_pot</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Retrieve potential. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="126" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="126" bodyend="126"/>
        <references refid="class_sph_s_l_1a8a72b80960d628509aea5ead8d5bb5eb" compoundref="_sph_s_l_8_h" startline="23">potd</references>
        <references refid="class_sph_s_l_1a646da787ac7598df4c4faeea9c882e72" compoundref="_sph_s_l_8_h" startline="19">sl</references>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1ad6105c4e0e77a9e631e4ec125c35d7b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SphSL::get_power</definition>
        <argsstring>(double snr, double mass)</argsstring>
        <name>get_power</name>
        <qualifiedname>SphSL::get_power</qualifiedname>
        <param>
          <type>double</type>
          <declname>snr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mass</declname>
        </param>
        <briefdescription>
<para>Get fractional power in trimmed coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="120" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a34a104932ca9367c7c1eba7a0bee96a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphSL::get_trimmed</definition>
        <argsstring>(double snr, double mass, bool Hall=false)</argsstring>
        <name>get_trimmed</name>
        <qualifiedname>SphSL::get_trimmed</qualifiedname>
        <param>
          <type>double</type>
          <declname>snr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>Hall</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Retrieve coefficients with SNR trim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="117" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a1af10e4a0d69d827f25fef84a36787f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int SphSL::getLmax</definition>
        <argsstring>()</argsstring>
        <name>getLmax</name>
        <qualifiedname>SphSL::getLmax</qualifiedname>
        <briefdescription>
<para>Return current maximum harmonic order in expansion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="153" column="7" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="153" bodyend="153"/>
        <references refid="class_sph_s_l_1abc22876a683448046156a54269e8bc73" compoundref="_sph_s_l_8_h" startline="20">lmax</references>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a17812bffe550498ed83972cad844a308" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SphSL::getMass</definition>
        <argsstring>(void)</argsstring>
        <name>getMass</name>
        <qualifiedname>SphSL::getMass</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get mass on grid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="114" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="114" bodyend="114"/>
        <references refid="class_sph_s_l_1a0e213fdbc73023e17600f40f5337a04d" compoundref="_sph_s_l_8_h" startline="41">totalMass</references>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a140d9cf383f197b5e79ef6a3335303ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SphSL::getMaxSNR</definition>
        <argsstring>(void)</argsstring>
        <name>getMaxSNR</name>
        <qualifiedname>SphSL::getMaxSNR</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Maximum SNR coefficient value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="111" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="111" bodyend="111"/>
        <references refid="class_sph_s_l_1a18b3cdc7761fe54afdbb9fafbc8432c2" compoundref="_sph_s_l_8_h" startline="47">maxSNR</references>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a3a07394c4dd0445d597db2dd6d46b88a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SphSL::getMinSNR</definition>
        <argsstring>(void)</argsstring>
        <name>getMinSNR</name>
        <qualifiedname>SphSL::getMinSNR</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Minimum SNR coefficient value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="108" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="108" bodyend="108"/>
        <references refid="class_sph_s_l_1a48df205c40b2338b96208f0ec93e8a03" compoundref="_sph_s_l_8_h" startline="47">minSNR</references>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a2421f46e29dc076412c8294c2f96ae5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int SphSL::getNmax</definition>
        <argsstring>()</argsstring>
        <name>getNmax</name>
        <qualifiedname>SphSL::getNmax</qualifiedname>
        <briefdescription>
<para>Return current maximum order in radial expansion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="156" column="7" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="156" bodyend="156"/>
        <references refid="class_sph_s_l_1a05d4ce6810932347899461c845e985c9" compoundref="_sph_s_l_8_h" startline="20">nmax</references>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a68903756b0a162ba408129701b3823b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphSL::install_coefs</definition>
        <argsstring>(Eigen::MatrixXd &amp;newcoef)</argsstring>
        <name>install_coefs</name>
        <qualifiedname>SphSL::install_coefs</qualifiedname>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>newcoef</declname>
        </param>
        <briefdescription>
<para>Install coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="102" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a3705afbc885f51e099f865fc0dd4e859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphSL::legendre_R</definition>
        <argsstring>(int lmax, double x, Eigen::MatrixXd &amp;p)</argsstring>
        <name>legendre_R</name>
        <qualifiedname>SphSL::legendre_R</qualifiedname>
        <param>
          <type>int</type>
          <declname>lmax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="159" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a5fb28740b25c0cba8e6244bd51da0ba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphSL::legendre_R</definition>
        <argsstring>(int lmax, double x, Eigen::MatrixXd &amp;p, Eigen::MatrixXd &amp;dp)</argsstring>
        <name>legendre_R</name>
        <qualifiedname>SphSL::legendre_R</qualifiedname>
        <param>
          <type>int</type>
          <declname>lmax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>dp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="160" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1abc4dea9519450ac243bbcf0dce9b11cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphSL::legendre_R</definition>
        <argsstring>(int lmax, double x, Eigen::MatrixXd &amp;p, Eigen::MatrixXd &amp;dp, Eigen::MatrixXd &amp;d2p)</argsstring>
        <name>legendre_R</name>
        <qualifiedname>SphSL::legendre_R</qualifiedname>
        <param>
          <type>int</type>
          <declname>lmax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>dp</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>d2p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="161" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a6454c41a1d59f53ba6b6c77f4e08930a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphSL::make_coefs</definition>
        <argsstring>(void)</argsstring>
        <name>make_coefs</name>
        <qualifiedname>SphSL::make_coefs</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Make coefficients after accumulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="96" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a0be9194b63b9e0a0864306231973bcab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphSL::make_covar</definition>
        <argsstring>(bool verbose=false)</argsstring>
        <name>make_covar</name>
        <qualifiedname>SphSL::make_covar</qualifiedname>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Covariance analysis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="99" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a071751f784e4cbb08cbe63885e7c4564" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphSL::pot_force_eval</definition>
        <argsstring>(double r, double costh, double phi, double &amp;potl, double &amp;potr, double &amp;pott, double &amp;potp, int L1=0, int L2=10000, int N1=0, int N2=10000)</argsstring>
        <name>pot_force_eval</name>
        <qualifiedname>SphSL::pot_force_eval</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>costh</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>potl</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>potr</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>pott</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>potp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>L1</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>L2</declname>
          <defval>10000</defval>
        </param>
        <param>
          <type>int</type>
          <declname>N1</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>N2</declname>
          <defval>10000</defval>
        </param>
        <briefdescription>
<para>Evaluate potential and force. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="142" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a78fa63af82f500d5beb58b700cc5f477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphSL::reset_coefs</definition>
        <argsstring>(void)</argsstring>
        <name>reset_coefs</name>
        <qualifiedname>SphSL::reset_coefs</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Zero out coefficients to prepare for a new expansion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="93" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a0aa7582a73c17d16ba25f8e860748dc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphSL::retrieve_coefs</definition>
        <argsstring>(void)</argsstring>
        <name>retrieve_coefs</name>
        <qualifiedname>SphSL::retrieve_coefs</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retrieve coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="105" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="105" bodyend="105"/>
        <references refid="class_sph_s_l_1a04d70545f5f2c8e1865fba292a4c3bdf" compoundref="_sph_s_l_8_h" startline="28">expcoef</references>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1a057b1e689049e1e87203bcefb8962a70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
        <definition>std::vector&lt; Eigen::MatrixXd &gt; SphSL::retrieve_covar</definition>
        <argsstring>(void)</argsstring>
        <name>retrieve_covar</name>
        <qualifiedname>SphSL::retrieve_covar</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retrieve coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="123" column="15" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="123" bodyend="123"/>
        <references refid="class_sph_s_l_1add31a346d78f04aa42f8193359a71d3d" compoundref="_sph_s_l_8_h" startline="37">covar</references>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1ad14bfbb766ace476d4211ad8caab176e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SphSL::set_scale</definition>
        <argsstring>(const double scl)</argsstring>
        <name>set_scale</name>
        <qualifiedname>SphSL::set_scale</qualifiedname>
        <param>
          <type>const double</type>
          <declname>scl</declname>
        </param>
        <briefdescription>
<para>Prescaling factor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="90" column="8" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="90" bodyend="90"/>
        <references refid="class_sph_s_l_1ad36aa73535e8c1d427d1129d2f96b006" compoundref="_sph_s_l_8_h" startline="29">rscl</references>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1ac660e765c2fb2132756ff99d28b8764a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SphSL::SphSL</definition>
        <argsstring>(std::shared_ptr&lt; SphericalModelTable &gt; mod, int LMAX, int NMAX, int CMAP=0, double SCALE=0.067, bool COVAR=false, int NPART=0)</argsstring>
        <name>SphSL</name>
        <qualifiedname>SphSL::SphSL</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_spherical_model_table" kindref="compound">SphericalModelTable</ref> &gt;</type>
          <declname>mod</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LMAX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NMAX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CMAP</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>SCALE</declname>
          <defval>0.067</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>COVAR</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>NPART</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>instance of <ref refid="class_spherical_model_table" kindref="compound">SphericalModelTable</ref> to condition eigenfunctions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LMAX</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum harmonic order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NMAX</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum radial order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CMAP</parametername>
</parameternamelist>
<parameterdescription>
<para>is the <ref refid="class_s_l_grid_sph" kindref="compound">SLGridSph</ref> coordindate mapping type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SCALE</parametername>
</parameternamelist>
<parameterdescription>
<para>is the <ref refid="class_s_l_grid_sph" kindref="compound">SLGridSph</ref> coordindate scale length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>COVAR</parametername>
</parameternamelist>
<parameterdescription>
<para>true will evaluate the covariance matrix for coeffficients </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NPART</parametername>
</parameternamelist>
<parameterdescription>
<para>&gt;0 will evaluate the covariance matrix using a jackknife partition with number given </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="83" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_sph_s_l_1aeafe895d9b063bf8b99a1b4d50354571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SphSL::~SphSL</definition>
        <argsstring>(void)</argsstring>
        <name>~SphSL</name>
        <qualifiedname>SphSL::~SphSL</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="87" column="3"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Uses <ref refid="class_s_l_grid_sph" kindref="compound">SLGridSph</ref> basis to evaluate expansion coeffients and provide potential and density basis fields </para>
    </detaileddescription>
    <location file="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" line="14" column="1" bodyfile="/home/weinberg/Projects/EXP/utils/Analysis/SphSL.H" bodystart="15" bodyend="171"/>
    <listofallmembers>
      <member refid="class_sph_s_l_1a5f4b82b3684bcdfa5b15770152065fab" prot="public" virt="non-virtual"><scope>SphSL</scope><name>accumulate</name></member>
      <member refid="class_sph_s_l_1a60c76935b78787bb3c25d2d3bcbbd27f" prot="public" virt="non-virtual"><scope>SphSL</scope><name>all_eval</name></member>
      <member refid="class_sph_s_l_1a87c1d60465a1d18ffa2665b05fedae3d" prot="public" virt="non-virtual"><scope>SphSL</scope><name>basis</name></member>
      <member refid="class_sph_s_l_1aa274dd1580e64807ea77d08661b4f272" prot="private" virt="non-virtual"><scope>SphSL</scope><name>bomb</name></member>
      <member refid="class_sph_s_l_1a930da1da9375b59ba66d77f6744e22c7" prot="private" virt="non-virtual"><scope>SphSL</scope><name>cmagic</name></member>
      <member refid="class_sph_s_l_1a78463bb857162b66ebc22d7476c6ba2b" prot="private" virt="non-virtual"><scope>SphSL</scope><name>coefs_defined</name></member>
      <member refid="class_sph_s_l_1a30744f045b72d41197971f26588cf73a" prot="private" virt="non-virtual"><scope>SphSL</scope><name>compute_covar</name></member>
      <member refid="class_sph_s_l_1add31a346d78f04aa42f8193359a71d3d" prot="private" virt="non-virtual"><scope>SphSL</scope><name>covar</name></member>
      <member refid="class_sph_s_l_1ab6a104467e2eee94aed94037fd6d9256" prot="private" virt="non-virtual"><scope>SphSL</scope><name>curbin</name></member>
      <member refid="class_sph_s_l_1a87bfdfe5179e2274b3eefc0023bf362a" prot="private" virt="non-virtual"><scope>SphSL</scope><name>d2legs</name></member>
      <member refid="class_sph_s_l_1a7c888d9035d66d0952f5f916e529aa94" prot="private" virt="non-virtual"><scope>SphSL</scope><name>dend</name></member>
      <member refid="class_sph_s_l_1a382d88ecd625ea72257d1a822ce405cb" prot="public" virt="non-virtual"><scope>SphSL</scope><name>dens_pot_eval</name></member>
      <member refid="class_sph_s_l_1a501c85f6c8e807f525ddd048fbf2f846" prot="private" virt="non-virtual"><scope>SphSL</scope><name>dlegs</name></member>
      <member refid="class_sph_s_l_1aaa36e6af43205045b09a4f0aaba2e9d3" prot="private" virt="non-virtual"><scope>SphSL</scope><name>dpot</name></member>
      <member refid="class_sph_s_l_1af5a5f1d5f05d009fe6e0ecd877bdd937" prot="private" virt="non-virtual"><scope>SphSL</scope><name>dpt2</name></member>
      <member refid="class_sph_s_l_1ab3a34ae7efa8a490566ecb632254baed" prot="public" virt="non-virtual"><scope>SphSL</scope><name>dump_coefs</name></member>
      <member refid="class_sph_s_l_1a8bab3f49b8435b6dc775e56f0af89054" prot="private" virt="non-virtual"><scope>SphSL</scope><name>EigenColMajor</name></member>
      <member refid="class_sph_s_l_1a04d70545f5f2c8e1865fba292a4c3bdf" prot="private" virt="non-virtual"><scope>SphSL</scope><name>expcoef</name></member>
      <member refid="class_sph_s_l_1a4ec7b43106f56c54f8fa19a47e5fb67f" prot="private" virt="non-virtual"><scope>SphSL</scope><name>factorial</name></member>
      <member refid="class_sph_s_l_1a6e45fb63b6d26033af1b94d87bd87b96" prot="public" virt="non-virtual"><scope>SphSL</scope><name>get_pot</name></member>
      <member refid="class_sph_s_l_1ad6105c4e0e77a9e631e4ec125c35d7b0" prot="public" virt="non-virtual"><scope>SphSL</scope><name>get_power</name></member>
      <member refid="class_sph_s_l_1a34a104932ca9367c7c1eba7a0bee96a8" prot="public" virt="non-virtual"><scope>SphSL</scope><name>get_trimmed</name></member>
      <member refid="class_sph_s_l_1a1af10e4a0d69d827f25fef84a36787f2" prot="public" virt="non-virtual"><scope>SphSL</scope><name>getLmax</name></member>
      <member refid="class_sph_s_l_1a17812bffe550498ed83972cad844a308" prot="public" virt="non-virtual"><scope>SphSL</scope><name>getMass</name></member>
      <member refid="class_sph_s_l_1a140d9cf383f197b5e79ef6a3335303ee" prot="public" virt="non-virtual"><scope>SphSL</scope><name>getMaxSNR</name></member>
      <member refid="class_sph_s_l_1a3a07394c4dd0445d597db2dd6d46b88a" prot="public" virt="non-virtual"><scope>SphSL</scope><name>getMinSNR</name></member>
      <member refid="class_sph_s_l_1a2421f46e29dc076412c8294c2f96ae5a" prot="public" virt="non-virtual"><scope>SphSL</scope><name>getNmax</name></member>
      <member refid="class_sph_s_l_1a122af0e8ffe78ea0fdb1a0892fa14d21" prot="public" virt="non-virtual"><scope>SphSL</scope><name>HEXP</name></member>
      <member refid="class_sph_s_l_1a68903756b0a162ba408129701b3823b8" prot="public" virt="non-virtual"><scope>SphSL</scope><name>install_coefs</name></member>
      <member refid="class_sph_s_l_1a3705afbc885f51e099f865fc0dd4e859" prot="public" virt="non-virtual"><scope>SphSL</scope><name>legendre_R</name></member>
      <member refid="class_sph_s_l_1a5fb28740b25c0cba8e6244bd51da0ba3" prot="public" virt="non-virtual"><scope>SphSL</scope><name>legendre_R</name></member>
      <member refid="class_sph_s_l_1abc4dea9519450ac243bbcf0dce9b11cb" prot="public" virt="non-virtual"><scope>SphSL</scope><name>legendre_R</name></member>
      <member refid="class_sph_s_l_1a8abf3dfbafd87bfc9c0f08b9a305bf5b" prot="private" virt="non-virtual"><scope>SphSL</scope><name>legs</name></member>
      <member refid="class_sph_s_l_1abc22876a683448046156a54269e8bc73" prot="private" virt="non-virtual"><scope>SphSL</scope><name>lmax</name></member>
      <member refid="class_sph_s_l_1a6454c41a1d59f53ba6b6c77f4e08930a" prot="public" virt="non-virtual"><scope>SphSL</scope><name>make_coefs</name></member>
      <member refid="class_sph_s_l_1a0be9194b63b9e0a0864306231973bcab" prot="public" virt="non-virtual"><scope>SphSL</scope><name>make_covar</name></member>
      <member refid="class_sph_s_l_1a172a37c4b0918902a6d326c298d3bba7" prot="private" virt="non-virtual"><scope>SphSL</scope><name>massB</name></member>
      <member refid="class_sph_s_l_1a4c0055b5874cdaef33d778ace1805ea5" prot="private" virt="non-virtual"><scope>SphSL</scope><name>matT</name></member>
      <member refid="class_sph_s_l_1a18b3cdc7761fe54afdbb9fafbc8432c2" prot="private" virt="non-virtual"><scope>SphSL</scope><name>maxSNR</name></member>
      <member refid="class_sph_s_l_1ae0ea8b274b0356391d1031532abc6811" prot="private" virt="non-virtual"><scope>SphSL</scope><name>mean</name></member>
      <member refid="class_sph_s_l_1a127b51dfd6b985b1f227e5e939f1a1bd" prot="private" virt="non-virtual"><scope>SphSL</scope><name>meanB</name></member>
      <member refid="class_sph_s_l_1a48df205c40b2338b96208f0ec93e8a03" prot="private" virt="non-virtual"><scope>SphSL</scope><name>minSNR</name></member>
      <member refid="class_sph_s_l_1a67986223672bb1114d69afe782c5da95" prot="public" virt="non-virtual"><scope>SphSL</scope><name>mpi</name></member>
      <member refid="class_sph_s_l_1a5341da43cd684f8d4bc2ac8dbd79b946" prot="public" virt="non-virtual"><scope>SphSL</scope><name>NEV</name></member>
      <member refid="class_sph_s_l_1a05d4ce6810932347899461c845e985c9" prot="private" virt="non-virtual"><scope>SphSL</scope><name>nmax</name></member>
      <member refid="class_sph_s_l_1a63b337ab800bb0789204dfa255286e11" prot="private" virt="non-virtual"><scope>SphSL</scope><name>npart</name></member>
      <member refid="class_sph_s_l_1a0befac0479ce8dfb2c082f03165dbd56" prot="public" virt="non-virtual"><scope>SphSL</scope><name>NUMR</name></member>
      <member refid="class_sph_s_l_1a071751f784e4cbb08cbe63885e7c4564" prot="public" virt="non-virtual"><scope>SphSL</scope><name>pot_force_eval</name></member>
      <member refid="class_sph_s_l_1a8a72b80960d628509aea5ead8d5bb5eb" prot="private" virt="non-virtual"><scope>SphSL</scope><name>potd</name></member>
      <member refid="class_sph_s_l_1a78fa63af82f500d5beb58b700cc5f477" prot="public" virt="non-virtual"><scope>SphSL</scope><name>reset_coefs</name></member>
      <member refid="class_sph_s_l_1a0aa7582a73c17d16ba25f8e860748dc9" prot="public" virt="non-virtual"><scope>SphSL</scope><name>retrieve_coefs</name></member>
      <member refid="class_sph_s_l_1a057b1e689049e1e87203bcefb8962a70" prot="public" virt="non-virtual"><scope>SphSL</scope><name>retrieve_covar</name></member>
      <member refid="class_sph_s_l_1ac84a9750582da713a137eda0d6285984" prot="private" virt="non-virtual"><scope>SphSL</scope><name>rmax</name></member>
      <member refid="class_sph_s_l_1a9db5cca67563e686232fe6ac05dad282" prot="private" virt="non-virtual"><scope>SphSL</scope><name>rmin</name></member>
      <member refid="class_sph_s_l_1ad36aa73535e8c1d427d1129d2f96b006" prot="private" virt="non-virtual"><scope>SphSL</scope><name>rscl</name></member>
      <member refid="class_sph_s_l_1ad14bfbb766ace476d4211ad8caab176e" prot="public" virt="non-virtual"><scope>SphSL</scope><name>set_scale</name></member>
      <member refid="class_sph_s_l_1a646da787ac7598df4c4faeea9c882e72" prot="private" virt="non-virtual"><scope>SphSL</scope><name>sl</name></member>
      <member refid="class_sph_s_l_1ac660e765c2fb2132756ff99d28b8764a" prot="public" virt="non-virtual"><scope>SphSL</scope><name>SphSL</name></member>
      <member refid="class_sph_s_l_1ad641e1328aed1c0c56e35bebf847b0e8" prot="private" virt="non-virtual"><scope>SphSL</scope><name>svar</name></member>
      <member refid="class_sph_s_l_1a0e213fdbc73023e17600f40f5337a04d" prot="private" virt="non-virtual"><scope>SphSL</scope><name>totalMass</name></member>
      <member refid="class_sph_s_l_1a6b9d4c1067f35ba9473f68495a620b1a" prot="private" virt="non-virtual"><scope>SphSL</scope><name>used</name></member>
      <member refid="class_sph_s_l_1a9425160621626af51cc9df5e4af59520" prot="private" virt="non-virtual"><scope>SphSL</scope><name>uvec</name></member>
      <member refid="class_sph_s_l_1ab061fb52a395bc192430ddae492f6c5e" prot="private" virt="non-virtual"><scope>SphSL</scope><name>vecT</name></member>
      <member refid="class_sph_s_l_1ad2a1e490eea1a7ace6a4164d92c8b934" prot="private" virt="non-virtual"><scope>SphSL</scope><name>work</name></member>
      <member refid="class_sph_s_l_1aeafe895d9b063bf8b99a1b4d50354571" prot="public" virt="non-virtual"><scope>SphSL</scope><name>~SphSL</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
