<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_sphere" kind="class" language="C++" prot="public">
    <compoundname>Sphere</compoundname>
    <basecompoundref refid="class_spherical_basis" prot="public" virt="non-virtual">SphericalBasis</basecompoundref>
    <includes refid="_sphere_8_h" local="no">Sphere.H</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_sphere_1a4be924f21c7dc76a1ebc008da7ab3035" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Sphere::cache_file</definition>
        <argsstring></argsstring>
        <name>cache_file</name>
        <qualifiedname>Sphere::cache_file</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="100" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_1a624cdbd8af6d8239e0d51c551cdaa2c3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Sphere::cmap</definition>
        <argsstring></argsstring>
        <name>cmap</name>
        <qualifiedname>Sphere::cmap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="96" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_1a368d1dbf2eb3b9cc269cfb2a6aa12fa4" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Sphere::dfac</definition>
        <argsstring></argsstring>
        <name>dfac</name>
        <qualifiedname>Sphere::dfac</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="98" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_1aff508dfdf616fedad98c3c1afceb7a5f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Sphere::diverge</definition>
        <argsstring></argsstring>
        <name>diverge</name>
        <qualifiedname>Sphere::diverge</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="97" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_1abb1ec3fb8249f1baad4ac0a371140865" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Sphere::dtime</definition>
        <argsstring></argsstring>
        <name>dtime</name>
        <qualifiedname>Sphere::dtime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="92" column="16" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_1ac3492a52339889ef2ce0357bdbc5ecc9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Sphere::logr</definition>
        <argsstring></argsstring>
        <name>logr</name>
        <qualifiedname>Sphere::logr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="103" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_1a5fe02164759ca90df854c1fced09444d" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Sphere::model_file</definition>
        <argsstring></argsstring>
        <name>model_file</name>
        <qualifiedname>Sphere::model_file</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="99" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_1a2a4d4939bbd407cf72138097de9f15df" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Sphere::noff</definition>
        <argsstring></argsstring>
        <name>noff</name>
        <qualifiedname>Sphere::noff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="95" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_1adb0b2bc43a2ee2dc14c2da9ee8fd5aa2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Sphere::numr</definition>
        <argsstring></argsstring>
        <name>numr</name>
        <qualifiedname>Sphere::numr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="93" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_1a04f2b8606239e7b2a49a22efc4978a1a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Sphere::nums</definition>
        <argsstring></argsstring>
        <name>nums</name>
        <qualifiedname>Sphere::nums</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="94" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_1a5ed1ee6094cdc1a966ee425b9df9db81" prot="private" static="no" mutable="no">
        <type><ref refid="_sphere_8_h_1ae7aad8a2e9c295a94ae01ec5ec2f35b8" kindref="member">SLGridSphPtr</ref></type>
        <definition>SLGridSphPtr Sphere::ortho</definition>
        <argsstring></argsstring>
        <name>ortho</name>
        <qualifiedname>Sphere::ortho</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="52" column="16" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="52" bodyend="-1"/>
        <referencedby refid="class_sphere_1a5f0f6e819b476dfa29d1dad5b267a14a" compoundref="_sphere_8_h" startline="112" endline="112">d_r_to_xi</referencedby>
        <referencedby refid="class_sphere_1a2c3b6d03a4ba8aa60b2eff871ead655b" compoundref="_sphere_8_h" startline="113" endline="113">d_xi_to_r</referencedby>
        <referencedby refid="class_sphere_1a60b2648f82fede09d60f0bc36bc4cd96" compoundref="_sphere_8_h" startline="110" endline="110">r_to_xi</referencedby>
        <referencedby refid="class_sphere_1a6699301c6969c5499ddf669f7f4fbffc" compoundref="_sphere_8_h" startline="111" endline="111">xi_to_r</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_1a89f73c9ad44a2eb0522626631034e052" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Sphere::plummer</definition>
        <argsstring></argsstring>
        <name>plummer</name>
        <qualifiedname>Sphere::plummer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="102" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="102" bodyend="-1"/>
        <referencedby refid="class_sphere_1a08f150878ea2e0a03f1417eb07e90c8d" compoundref="_sphere_8_h" startline="63" endline="66">make_model</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_1a28294bdd15c2bc06642281e4d2113983" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Sphere::recompute</definition>
        <argsstring></argsstring>
        <name>recompute</name>
        <qualifiedname>Sphere::recompute</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="101" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="101" bodyend="-1"/>
        <referencedby refid="class_sphere_1a6d9c19cd5b655fb7e47fdbb680fe3e25" compoundref="_sphere_8_h" startline="139" endline="143">determine_coefficients</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_1a15fbbf33f59128fbfb1d33b2545714d4" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Sphere::rmap</definition>
        <argsstring></argsstring>
        <name>rmap</name>
        <qualifiedname>Sphere::rmap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="91" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_1aec235175b0942662e52ce083070fc820" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Sphere::rsphSL</definition>
        <argsstring></argsstring>
        <name>rsphSL</name>
        <qualifiedname>Sphere::rsphSL</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="90" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_1a598ccc4dc3fe0818aedba36666be68d8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Sphere::tnext</definition>
        <argsstring></argsstring>
        <name>tnext</name>
        <qualifiedname>Sphere::tnext</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="92" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="92" bodyend="-1"/>
        <referencedby refid="class_sphere_1a6d9c19cd5b655fb7e47fdbb680fe3e25" compoundref="_sphere_8_h" startline="139" endline="143">determine_coefficients</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_sphere_1a69e5f2cb1fe98554c8ed7b1b9ed28f79" prot="private" static="yes" mutable="no">
        <type>const std::set&lt; std::string &gt;</type>
        <definition>const std::set&lt;std::string&gt; Sphere::valid_keys</definition>
        <argsstring></argsstring>
        <name>valid_keys</name>
        <qualifiedname>Sphere::valid_keys</qualifiedname>
        <briefdescription>
<para>Valid keys for YAML configurations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="106" column="25" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="106" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_sphere_1a5f0f6e819b476dfa29d1dad5b267a14a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double Sphere::d_r_to_xi</definition>
        <argsstring>(double r)</argsstring>
        <name>d_r_to_xi</name>
        <qualifiedname>Sphere::d_r_to_xi</qualifiedname>
        <reimplements refid="class_spherical_basis_1a8371f1f235cbd49dbf0bd89541d8fdaf">d_r_to_xi</reimplements>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="112" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="112" bodyend="112"/>
        <references refid="class_sphere_1a5ed1ee6094cdc1a966ee425b9df9db81" compoundref="_sphere_8_h" startline="52">ortho</references>
        <references refid="class_sphere_1a60b2648f82fede09d60f0bc36bc4cd96" compoundref="_sphere_8_h" startline="110" endline="110">r_to_xi</references>
      </memberdef>
      <memberdef kind="function" id="class_sphere_1a2c3b6d03a4ba8aa60b2eff871ead655b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Sphere::d_xi_to_r</definition>
        <argsstring>(double x)</argsstring>
        <name>d_xi_to_r</name>
        <qualifiedname>Sphere::d_xi_to_r</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="113" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="113" bodyend="113"/>
        <references refid="class_sphere_1a5ed1ee6094cdc1a966ee425b9df9db81" compoundref="_sphere_8_h" startline="52">ortho</references>
      </memberdef>
      <memberdef kind="function" id="class_sphere_1ac5738f6eed896da5c7c53d463decdf00" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Sphere::get_dens</definition>
        <argsstring>(int lmax, int nmax, double r, Eigen::MatrixXd &amp;p, int tid)</argsstring>
        <name>get_dens</name>
        <qualifiedname>Sphere::get_dens</qualifiedname>
        <reimplements refid="class_spherical_basis_1a0e2377c1cdc1335562343e01e4dee7cd">get_dens</reimplements>
        <param>
          <type>int</type>
          <declname>lmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nmax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get derivative of potential <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum harmonic order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum radial order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>is the evaluation radius </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the density </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>is the thread enumerator that allows the function to provide some thread safety </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="84" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_1a8c6a7bce9e2621c37ae76e1f863fa80c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Sphere::get_dpotl</definition>
        <argsstring>(int lmax, int nmax, double r, Eigen::MatrixXd &amp;p, Eigen::MatrixXd &amp;dp, int tid)</argsstring>
        <name>get_dpotl</name>
        <qualifiedname>Sphere::get_dpotl</qualifiedname>
        <reimplements refid="class_spherical_basis_1ac3eafe5175c669b7b7b86932c764af32">get_dpotl</reimplements>
        <param>
          <type>int</type>
          <declname>lmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nmax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>dp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get derivative of potential <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum harmonic order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum radial order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>is the evaluation radius </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the potential </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dp</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the derivative of the potential </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>is the thread enumerator that allows the function to provide some thread safety </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="56" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_1a652173e111f6605982c6adbc65f32293" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Sphere::get_potl</definition>
        <argsstring>(int lmax, int nmax, double r, Eigen::MatrixXd &amp;p, int tid)</argsstring>
        <name>get_potl</name>
        <qualifiedname>Sphere::get_potl</qualifiedname>
        <reimplements refid="class_spherical_basis_1a63cdde991a10a6309a97e3af6b5833b3">get_potl</reimplements>
        <param>
          <type>int</type>
          <declname>lmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nmax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get derivative of potential <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum harmonic order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum radial order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>is the evaluation radius </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the potential </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>is the thread enumerator that allows the function to provide some thread safety </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="58" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_1a2c795a70918899c354bb33176957103f" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Sphere::get_potl_dens</definition>
        <argsstring>(int lmax, int nmax, double r, Eigen::MatrixXd &amp;p, Eigen::MatrixXd &amp;d, int tid)</argsstring>
        <name>get_potl_dens</name>
        <qualifiedname>Sphere::get_potl_dens</qualifiedname>
        <reimplements refid="class_spherical_basis_1a2823c30f130d1a33768cce788b05c34e">get_potl_dens</reimplements>
        <param>
          <type>int</type>
          <declname>lmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nmax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get derivative of potential <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum harmonic order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum radial order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>is the evaluation radius </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the potential </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the density </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>is the thread enumerator that allows the function to provide some thread safety </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="86" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_1aba7d59251bc70b4b2f45271025f285ff" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Sphere::initialize</definition>
        <argsstring>(void)</argsstring>
        <name>initialize</name>
        <qualifiedname>Sphere::initialize</qualifiedname>
        <reimplements refid="class_spherical_basis_1a33f78daf1c5dcf5ac4d327662963b1a5">initialize</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="54" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_1a08f150878ea2e0a03f1417eb07e90c8d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Sphere::make_model</definition>
        <argsstring>()</argsstring>
        <name>make_model</name>
        <qualifiedname>Sphere::make_model</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="63" column="8" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="63" bodyend="66"/>
        <references refid="class_sphere_1a21810f9c6a9dd31ec9b119e6bccfc453">make_model_bin</references>
        <references refid="class_sphere_1ab444f846661c7e7113ca1cf21f0cc4ce">make_model_plummer</references>
        <references refid="class_sphere_1a89f73c9ad44a2eb0522626631034e052" compoundref="_sphere_8_h" startline="102">plummer</references>
        <referencedby refid="class_sphere_1a6d9c19cd5b655fb7e47fdbb680fe3e25" compoundref="_sphere_8_h" startline="139" endline="143">determine_coefficients</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_sphere_1a21810f9c6a9dd31ec9b119e6bccfc453" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sphere::make_model_bin</definition>
        <argsstring>()</argsstring>
        <name>make_model_bin</name>
        <qualifiedname>Sphere::make_model_bin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="68" column="8"/>
        <referencedby refid="class_sphere_1a08f150878ea2e0a03f1417eb07e90c8d" compoundref="_sphere_8_h" startline="63" endline="66">make_model</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_sphere_1ab444f846661c7e7113ca1cf21f0cc4ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sphere::make_model_plummer</definition>
        <argsstring>()</argsstring>
        <name>make_model_plummer</name>
        <qualifiedname>Sphere::make_model_plummer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="69" column="8"/>
        <referencedby refid="class_sphere_1a08f150878ea2e0a03f1417eb07e90c8d" compoundref="_sphere_8_h" startline="63" endline="66">make_model</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_sphere_1a440de5d82772eccff93c7b86d3598a7b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Sphere::mapDeriv</definition>
        <argsstring>(const std::map&lt; double, double &gt; &amp;data, double x)</argsstring>
        <name>mapDeriv</name>
        <qualifiedname>Sphere::mapDeriv</qualifiedname>
        <param>
          <type>const std::map&lt; double, double &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="61" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_1aa6bfd72abb2e011e94585977ea2b3350" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Sphere::mapIntrp</definition>
        <argsstring>(const std::map&lt; double, double &gt; &amp;data, double x)</argsstring>
        <name>mapIntrp</name>
        <qualifiedname>Sphere::mapIntrp</qualifiedname>
        <param>
          <type>const std::map&lt; double, double &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="60" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_1a60b2648f82fede09d60f0bc36bc4cd96" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double Sphere::r_to_xi</definition>
        <argsstring>(double r)</argsstring>
        <name>r_to_xi</name>
        <qualifiedname>Sphere::r_to_xi</qualifiedname>
        <reimplements refid="class_spherical_basis_1ad1b2e558ad5f084a43d5368e86910763">r_to_xi</reimplements>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Coordinate mapping. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="110" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="110" bodyend="110"/>
        <references refid="class_sphere_1a5ed1ee6094cdc1a966ee425b9df9db81" compoundref="_sphere_8_h" startline="52">ortho</references>
        <referencedby refid="class_sphere_1a5f0f6e819b476dfa29d1dad5b267a14a" compoundref="_sphere_8_h" startline="112" endline="112">d_r_to_xi</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_sphere_1a6699301c6969c5499ddf669f7f4fbffc" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double Sphere::xi_to_r</definition>
        <argsstring>(double x)</argsstring>
        <name>xi_to_r</name>
        <qualifiedname>Sphere::xi_to_r</qualifiedname>
        <reimplements refid="class_spherical_basis_1a84edfe45c66d8221046d65aa63d19f8a">xi_to_r</reimplements>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="111" column="10" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="111" bodyend="111"/>
        <references refid="class_sphere_1a5ed1ee6094cdc1a966ee425b9df9db81" compoundref="_sphere_8_h" startline="52">ortho</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sphere_1a6d9c19cd5b655fb7e47fdbb680fe3e25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Sphere::determine_coefficients</definition>
        <argsstring>(void)</argsstring>
        <name>determine_coefficients</name>
        <qualifiedname>Sphere::determine_coefficients</qualifiedname>
        <reimplements refid="class_spherical_basis_1a91e8b02d7a7482ba2dd12cbae311533c">determine_coefficients</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Override to redetermine basis, as desired. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="139" column="16" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="139" bodyend="143"/>
        <references refid="class_spherical_basis_1a91e8b02d7a7482ba2dd12cbae311533c">SphericalBasis::determine_coefficients</references>
        <references refid="class_sphere_1a08f150878ea2e0a03f1417eb07e90c8d" compoundref="_sphere_8_h" startline="63" endline="66">make_model</references>
        <references refid="class_sphere_1a28294bdd15c2bc06642281e4d2113983" compoundref="_sphere_8_h" startline="101">recompute</references>
        <references refid="class_sphere_1a598ccc4dc3fe0818aedba36666be68d8" compoundref="_sphere_8_h" startline="92">tnext</references>
        <references refid="global_8_h_1aee2e12c455ac1712da2b8c5a7eadb147">tnow</references>
      </memberdef>
      <memberdef kind="function" id="class_sphere_1aa23162c4c21959d46257a150931e2f56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Sphere::Sphere</definition>
        <argsstring>(Component *c0, const YAML::Node &amp;conf, MixtureBasis *m=0)</argsstring>
        <name>Sphere</name>
        <qualifiedname>Sphere::Sphere</qualifiedname>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c0</declname>
        </param>
        <param>
          <type>const YAML::Node &amp;</type>
          <declname>conf</declname>
        </param>
        <param>
          <type><ref refid="class_mixture_basis" kindref="compound">MixtureBasis</ref> *</type>
          <declname>m</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c0</parametername>
</parameternamelist>
<parameterdescription>
<para>is the instantiating caller (<ref refid="class_component" kindref="compound">Component</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>passes any parameters to basis instance (rsphSL, rmin and numr </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>allows the spherical basis to be used for multiple center expansions</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Input line parameters include: <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rmapping</parametername>
</parameternamelist>
<parameterdescription>
<para>is the radius for coordinate scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numr</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of radial grid points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmap</parametername>
</parameternamelist>
<parameterdescription>
<para>set to true for scaling coordinates from the semi-infinite to finite segment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diverge</parametername>
</parameternamelist>
<parameterdescription>
<para>set to true means assume a cuspy profile </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dfac</parametername>
</parameternamelist>
<parameterdescription>
<para>is the power of the &quot;divergent&quot; cusp </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>modelname</parametername>
</parameternamelist>
<parameterdescription>
<para>is the file containing the input background model profile </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cachename</parametername>
</parameternamelist>
<parameterdescription>
<para>is the name for the SL grid cache file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtime</parametername>
</parameternamelist>
<parameterdescription>
<para>is the interval between basis recomputations (&lt;=0 for never) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="133" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_1acde2697064cbc2c64ea34aed1b3efac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Sphere::~Sphere</definition>
        <argsstring>()</argsstring>
        <name>~Sphere</name>
        <qualifiedname>Sphere::~Sphere</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="136" column="11"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Computes the potential, acceleration and density using the Sturm Liouville direct solution</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rmin</parametername>
</parameternamelist>
<parameterdescription>
<para>is the minimum value in the table for the radial basis functions (default is 0.001)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rmapping</parametername>
</parameternamelist>
<parameterdescription>
<para>is the halo scale length (default is 0.067*rmax). This is used to for the coordinate mapping (see below).</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmap</parametername>
</parameternamelist>
<parameterdescription>
<para>should be 1 for algebraic coordinate scaling, 2 for log coordinate scaling, 0 for no scaling as follows:  <formula id="95">\[ 
x = {r/r_s-1 \over r/r_s+1} 
\]</formula> when <computeroutput>cmap=1</computeroutput> and  <formula id="96">\[
x =  \log(r)
\]</formula> when <computeroutput>cmap=2</computeroutput>. Algebraic coordinate scaling is a good general choice. For spherical models with a very large dynamic range (e.g. deep, cuspy halos), logarithmic scaling will be a better choice. <ref refid="class_logarithmic" kindref="compound">Logarithmic</ref> scaling will insist that the <computeroutput>rmin&gt;0</computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numr</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number radial coordinate knots in the table (default is 1000)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diverge</parametername>
</parameternamelist>
<parameterdescription>
<para>sets the power law extrapolation of a cusp profile</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dfac</parametername>
</parameternamelist>
<parameterdescription>
<para>is the inverse slope of the power law </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>AxisymmetricBasis</label>
        <link refid="class_axisymmetric_basis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Basis</label>
        <link refid="class_basis"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>PotAccel</label>
        <link refid="class_pot_accel"/>
      </node>
      <node id="1">
        <label>Sphere</label>
        <link refid="class_sphere"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SphericalBasis</label>
        <link refid="class_spherical_basis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>AxisymmetricBasis</label>
        <link refid="class_axisymmetric_basis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Basis</label>
        <link refid="class_basis"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Component</label>
        <link refid="class_component"/>
        <childnode refid="7" relation="usage">
          <edgelabel>c0</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>force</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>orient</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>time_so_far</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>EL3</label>
        <link refid="class_e_l3"/>
      </node>
      <node id="11">
        <label>MixtureBasis</label>
        <link refid="class_mixture_basis"/>
        <childnode refid="12" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>Orient</label>
        <link refid="class_orient"/>
        <childnode refid="9" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>PotAccel</label>
        <link refid="class_pot_accel"/>
        <childnode refid="6" relation="usage">
          <edgelabel>td</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>cC</edgelabel>
          <edgelabel>component</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Sphere</label>
        <link refid="class_sphere"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SphericalBasis</label>
        <link refid="class_spherical_basis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>mix</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>Timer</label>
        <link refid="class_timer"/>
      </node>
      <node id="12">
        <label>TwoCenter</label>
        <link refid="class_two_center"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>exp_in</edgelabel>
          <edgelabel>exp_out</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>mix_in</edgelabel>
          <edgelabel>mix_out</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>thrd_pass_PotAccel</label>
        <link refid="structthrd__pass___pot_accel"/>
        <childnode refid="5" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/src/Sphere.H" line="47" column="1" bodyfile="/home/weinberg/Projects/EXP/src/Sphere.H" bodystart="48" bodyend="145"/>
    <listofallmembers>
      <member refid="class_pot_accel_1a6a637997f73ca85ce78d8c92eec7ad1b" prot="public" virt="non-virtual"><scope>Sphere</scope><name>atol</name></member>
      <member refid="class_axisymmetric_basis_1ab965e325410d79d567903f51dd2c6dd0" prot="public" virt="non-virtual"><scope>Sphere</scope><name>AxisymmetricBasis</name></member>
      <member refid="class_axisymmetric_basis_1aa4fc18ccf44bdf56ac60b7caa68b1cfc" prot="private" virt="non-virtual"><scope>Sphere</scope><name>b_Hall</name></member>
      <member refid="class_basis_1a3deeb360a898d1c144f7f6ad44813b3e" prot="public" virt="non-virtual"><scope>Sphere</scope><name>Basis</name></member>
      <member refid="class_spherical_basis_1a1066050b6ba526768710115eced4144f" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>biorthogonality_check</name></member>
      <member refid="class_sphere_1a4be924f21c7dc76a1ebc008da7ab3035" prot="private" virt="non-virtual"><scope>Sphere</scope><name>cache_file</name></member>
      <member refid="class_pot_accel_1afa2cd3b0bf51e23d8bfc54aac73ef010" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>cC</name></member>
      <member refid="class_pot_accel_1a630b9cdcae4ed4915cc72179fe9821c6" prot="public" virt="non-virtual"><scope>Sphere</scope><name>cc_lock</name></member>
      <member refid="class_spherical_basis_1a1fb812ef3e4559b795aa1407ceaa6079" prot="protected" virt="virtual"><scope>Sphere</scope><name>check_range</name></member>
      <member refid="class_pot_accel_1a944213bbf31fca1508ba817e392b9fc6" prot="public" virt="non-virtual"><scope>Sphere</scope><name>ClearExternal</name></member>
      <member refid="class_spherical_basis_1aac8c95f365acb42630d38d2b8a2c79f4" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>cmagic</name></member>
      <member refid="class_sphere_1a624cdbd8af6d8239e0d51c551cdaa2c3" prot="private" virt="non-virtual"><scope>Sphere</scope><name>cmap</name></member>
      <member refid="class_pot_accel_1ac7ab5e578b5b2bbd29fe35738b03d771" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>coef_dump</name></member>
      <member refid="class_spherical_basis_1a27cb5e14065b26a1eaf8fecde6210db9" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>coefMaster</name></member>
      <member refid="class_pot_accel_1aa6d9bde455e08dc9fead4f152357cb15" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>component</name></member>
      <member refid="class_pot_accel_1a49e2936503ffdad1dd86d3f0c934d25a" prot="public" virt="non-virtual"><scope>Sphere</scope><name>compute</name></member>
      <member refid="class_spherical_basis_1ac6b350512a9ae518f4c8cbecb4a46593" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>compute_multistep_coefficients</name></member>
      <member refid="class_spherical_basis_1ac6d657e39329e543766a4503f25d3a37" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>compute_rms_coefs</name></member>
      <member refid="class_pot_accel_1ab682d4480d7d2946a7bef7f93ac0c6a0" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>conf</name></member>
      <member refid="class_spherical_basis_1a843a19b3a3dc282c24cd1a6e19aab3ca" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>cosm</name></member>
      <member refid="class_axisymmetric_basis_1a7bd4492f833f728f99891d38b7493631" prot="private" virt="non-virtual"><scope>Sphere</scope><name>covar</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda489785884cf0770efb348b919878bf23" prot="public" virt="non-virtual"><scope>Sphere</scope><name>cube</name></member>
      <member refid="class_pot_accel_1ac4def6f1c9318d8b49e62a4c9f2d6786" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>cuda_aware</name></member>
      <member refid="class_pot_accel_1a5029810ccad93845aab9919e005bafe0" prot="public" virt="non-virtual"><scope>Sphere</scope><name>cudaAware</name></member>
      <member refid="class_axisymmetric_basis_1a739cec07895fdd02850006d6a52639a8" prot="private" virt="non-virtual"><scope>Sphere</scope><name>cuml</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6a1dbf0ed28469f49a393a25a7b67753c3" prot="public" virt="non-virtual"><scope>Sphere</scope><name>CumulativeCut</name></member>
      <member refid="class_pot_accel_1a823dbb4c07cab1541d7ee738c6baef99" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>current_keys</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fdac215da2d633c31e7278fb1a3dd6af268" prot="public" virt="non-virtual"><scope>Sphere</scope><name>cylinder</name></member>
      <member refid="class_sphere_1a5f0f6e819b476dfa29d1dad5b267a14a" prot="private" virt="virtual"><scope>Sphere</scope><name>d_r_to_xi</name></member>
      <member refid="class_sphere_1a2c3b6d03a4ba8aa60b2eff871ead655b" prot="private" virt="non-virtual"><scope>Sphere</scope><name>d_xi_to_r</name></member>
      <member refid="class_axisymmetric_basis_1ad3b6c5272fa2aae68be0177ebb3f2edd" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>defSampT</name></member>
      <member refid="class_spherical_basis_1a3cfea1dc5ab6ba11187c8ce618f4bd22" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>dend</name></member>
      <member refid="class_spherical_basis_1a73773546d4e45c0ac442a9853ef42225" prot="public" virt="virtual"><scope>Sphere</scope><name>determine_acceleration_and_potential</name></member>
      <member refid="class_spherical_basis_1a45f237bae8eb688588b95f8a0522b10d" prot="protected" virt="virtual"><scope>Sphere</scope><name>determine_acceleration_and_potential_thread</name></member>
      <member refid="class_sphere_1a6d9c19cd5b655fb7e47fdbb680fe3e25" prot="public" virt="virtual"><scope>Sphere</scope><name>determine_coefficients</name></member>
      <member refid="class_spherical_basis_1a8ff7907cd7af5f79b63f11282c277cb2" prot="public" virt="virtual" ambiguityscope="SphericalBasis::"><scope>Sphere</scope><name>determine_coefficients</name></member>
      <member refid="class_spherical_basis_1af9309f6e0f2eb72d4e3c046a15634a70" prot="protected" virt="virtual"><scope>Sphere</scope><name>determine_coefficients_particles</name></member>
      <member refid="class_spherical_basis_1a100361ca78665ea58fb37f141f98bf07" prot="protected" virt="virtual"><scope>Sphere</scope><name>determine_coefficients_playback</name></member>
      <member refid="class_spherical_basis_1a7ad9fad36d8b7074c7b47d0126ca26ef" prot="protected" virt="virtual"><scope>Sphere</scope><name>determine_coefficients_thread</name></member>
      <member refid="class_spherical_basis_1a84fc725d4e62f743a3846b8b5908a42e" prot="public" virt="virtual"><scope>Sphere</scope><name>determine_fields_at_point</name></member>
      <member refid="class_spherical_basis_1ab11fe59ba8d3a8e251ea96e72d93b654" prot="public" virt="virtual"><scope>Sphere</scope><name>determine_fields_at_point_cyl</name></member>
      <member refid="class_spherical_basis_1ab139a46a2cc6813b375b041dbe3b6498" prot="public" virt="virtual"><scope>Sphere</scope><name>determine_fields_at_point_sph</name></member>
      <member refid="class_sphere_1a368d1dbf2eb3b9cc269cfb2a6aa12fa4" prot="private" virt="non-virtual"><scope>Sphere</scope><name>dfac</name></member>
      <member refid="class_spherical_basis_1acf7e4a3d55ca7d250a2b814bd95321ba" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>differ1</name></member>
      <member refid="class_sphere_1aff508dfdf616fedad98c3c1afceb7a5f" prot="private" virt="non-virtual"><scope>Sphere</scope><name>diverge</name></member>
      <member refid="class_basis_1ad9a9f2f2d18335ae482b1d4e12490d0b" prot="public" virt="non-virtual"><scope>Sphere</scope><name>dlegendre_R</name></member>
      <member refid="class_spherical_basis_1aff89452a2ddcef22eb9333b5c04df0ef" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>dlegs</name></member>
      <member refid="class_pot_accel_1a6a9ec23d29b553c1625bd8e88fe7692d" prot="public" virt="non-virtual"><scope>Sphere</scope><name>dof</name></member>
      <member refid="class_spherical_basis_1aa1ad955dd550cd637a32cc11cccc3100" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>dpot</name></member>
      <member refid="class_sphere_1abb1ec3fb8249f1baad4ac0a371140865" prot="private" virt="non-virtual"><scope>Sphere</scope><name>dtime</name></member>
      <member refid="class_spherical_basis_1a91d743a30554403f62492950613bea5b" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>du</name></member>
      <member refid="class_spherical_basis_1a518203f6db28e171c7dccd04611994b5" prot="public" virt="virtual"><scope>Sphere</scope><name>dump_coefs</name></member>
      <member refid="class_spherical_basis_1a34866d25c28ce00edf20be346f43361f" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>dump_coefs_all</name></member>
      <member refid="class_spherical_basis_1aababccfd0ab296c683963963caead0be" prot="public" virt="virtual"><scope>Sphere</scope><name>dump_coefs_h5</name></member>
      <member refid="class_axisymmetric_basis_1a45362e008f1389402494647b75931e1e" prot="private" virt="non-virtual"><scope>Sphere</scope><name>eval</name></member>
      <member refid="class_axisymmetric_basis_1ae30dc4a6d54a9b90dbe31e2b03821382" prot="private" virt="non-virtual"><scope>Sphere</scope><name>evec</name></member>
      <member refid="class_spherical_basis_1a68de61b1e9ba7549723513791436e087" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>EVEN_L</name></member>
      <member refid="class_spherical_basis_1acb6cedabe692304779492aaea2efb698" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>EVEN_M</name></member>
      <member refid="class_pot_accel_1abee9651463af53460b622250d311329e" prot="public" virt="non-virtual"><scope>Sphere</scope><name>exp_thread_fork</name></member>
      <member refid="class_axisymmetric_basis_1afae69589bd4f7341ab42b8c48c22b707" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>expcoef</name></member>
      <member refid="class_spherical_basis_1a678f0fd3cf6338763c2acd325a3e3b18" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>expcoef0</name></member>
      <member refid="class_axisymmetric_basis_1ad68406307042d772a285f40728a70cf6" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>expcoef1</name></member>
      <member refid="class_axisymmetric_basis_1ad60eac81d3f5d960af091345128485a8" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>expcoefL</name></member>
      <member refid="class_axisymmetric_basis_1acc9740eafab3aa6d3b935bb310c568bd" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>expcoefM</name></member>
      <member refid="class_axisymmetric_basis_1a11d3819929833b80de31120b99912e96" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>expcoefM1</name></member>
      <member refid="class_axisymmetric_basis_1abe415ce8067b52c57aeb4beccbd85d7f" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>expcoefN</name></member>
      <member refid="class_axisymmetric_basis_1ad344d65e16dfdea9aed2e478185bc8e7" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>expcoefP</name></member>
      <member refid="class_axisymmetric_basis_1acd8494e7bb875fc2c8677ca92a0c6f01" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>expcoefT</name></member>
      <member refid="class_axisymmetric_basis_1a699990cc53ec82eb867cf9c85cb57f70" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>expcoefT1</name></member>
      <member refid="class_axisymmetric_basis_1ae6dd8f205982c2e3ef87f6f467976018" prot="private" virt="non-virtual"><scope>Sphere</scope><name>fac02</name></member>
      <member refid="class_spherical_basis_1a39e31915305ef9daa6b39d3c5cbd9dad" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>factorial</name></member>
      <member refid="class_spherical_basis_1a31522511eefb3602a9201dd0d3fd3bb8" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>firstime_accel</name></member>
      <member refid="class_spherical_basis_1aef3567656d31d9a8d694f015e0ff87fe" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>firstime_coef</name></member>
      <member refid="class_pot_accel_1adb6ef0bdae7d3520ca1f9fd8a6d648ea" prot="public" virt="non-virtual"><scope>Sphere</scope><name>geometry</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fd" prot="public" virt="non-virtual"><scope>Sphere</scope><name>Geometry</name></member>
      <member refid="class_pot_accel_1ade38f6ecdf80f80cde847d463b14909b" prot="public" virt="non-virtual"><scope>Sphere</scope><name>geoname</name></member>
      <member refid="class_spherical_basis_1a05f775f3bae56543829492fae9a0b75f" prot="public" virt="virtual"><scope>Sphere</scope><name>get_acceleration_and_potential</name></member>
      <member refid="class_sphere_1ac5738f6eed896da5c7c53d463decdf00" prot="private" virt="virtual"><scope>Sphere</scope><name>get_dens</name></member>
      <member refid="class_spherical_basis_1ababeb377d9cc8f3150b3dac614fed0bb" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>get_dens_coefs</name></member>
      <member refid="class_sphere_1a8c6a7bce9e2621c37ae76e1f863fa80c" prot="private" virt="virtual"><scope>Sphere</scope><name>get_dpotl</name></member>
      <member refid="class_spherical_basis_1ab38a879d817874f75e324347afe33cb6" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>get_pot_coefs</name></member>
      <member refid="class_spherical_basis_1a590da9389de7deca03880fc5b1c6e3a4" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>get_pot_coefs_safe</name></member>
      <member refid="class_sphere_1a652173e111f6605982c6adbc65f32293" prot="private" virt="virtual"><scope>Sphere</scope><name>get_potl</name></member>
      <member refid="class_sphere_1a2c795a70918899c354bb33176957103f" prot="private" virt="virtual"><scope>Sphere</scope><name>get_potl_dens</name></member>
      <member refid="class_axisymmetric_basis_1a81196ff99fb4254c4e37866ca3d2c7de" prot="public" virt="non-virtual"><scope>Sphere</scope><name>getCoefs</name></member>
      <member refid="class_axisymmetric_basis_1a392660898c9be95471072adb3f0faa25" prot="public" virt="non-virtual"><scope>Sphere</scope><name>getLmax</name></member>
      <member refid="class_axisymmetric_basis_1ab09be7b0782949e27379ea930eb10171" prot="public" virt="non-virtual"><scope>Sphere</scope><name>getMmax</name></member>
      <member refid="class_axisymmetric_basis_1a3026462dfa88e923d7673f3d56dc4de4" prot="public" virt="non-virtual"><scope>Sphere</scope><name>getNmax</name></member>
      <member refid="class_pot_accel_1a0998c361bca277b3bba95f59acaba203" prot="public" virt="virtual"><scope>Sphere</scope><name>getScale</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6a355c2a93725cd932da5408330dec2a6b" prot="public" virt="non-virtual"><scope>Sphere</scope><name>Hall</name></member>
      <member refid="class_pot_accel_1a4a812594dff363f07bf57d69a60e4a13" prot="public" virt="non-virtual"><scope>Sphere</scope><name>HaveCoefDump</name></member>
      <member refid="class_axisymmetric_basis_1af0b7e5ba06a1acf652e61b9b4ecadfec" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>hexp</name></member>
      <member refid="class_pot_accel_1a1cdb2381070d7772caf533433455284c" prot="public" virt="non-virtual"><scope>Sphere</scope><name>id</name></member>
      <member refid="class_sphere_1aba7d59251bc70b4b2f45271025f285ff" prot="private" virt="virtual"><scope>Sphere</scope><name>initialize</name></member>
      <member refid="class_axisymmetric_basis_1abe6cac911f0415ee15378c104bd3fd16" prot="private" virt="non-virtual"><scope>Sphere</scope><name>inv</name></member>
      <member refid="class_pot_accel_1a706b04f03c8beb4369dd125406770116" prot="public" virt="non-virtual"><scope>Sphere</scope><name>kill_mutex</name></member>
      <member refid="class_spherical_basis_1a601c0bfd766bc3de1f4983430b110663" prot="public" virt="virtual"><scope>Sphere</scope><name>knl</name></member>
      <member refid="class_spherical_basis_1a79dc94b3d9151be5c82758e785f27102" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>krnl</name></member>
      <member refid="class_axisymmetric_basis_1a77c3332bf7286f04c94af7d068c7b2c4" prot="private" virt="non-virtual"><scope>Sphere</scope><name>L0</name></member>
      <member refid="class_spherical_basis_1aa594052066fda40758b8e4757fbab0aa" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>lastPlayTime</name></member>
      <member refid="class_axisymmetric_basis_1a570f3d24187073d3354933ace93a6bd6" prot="private" virt="non-virtual"><scope>Sphere</scope><name>Ldim</name></member>
      <member refid="class_basis_1a80975218d67cc019d69fefb7a207d344" prot="public" virt="non-virtual"><scope>Sphere</scope><name>legendre_R</name></member>
      <member refid="class_spherical_basis_1a172c954d497270d8bb6561367b990b5d" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>legs</name></member>
      <member refid="class_axisymmetric_basis_1abed8db010c45ad27e769043c68ab3101" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>Lmax</name></member>
      <member refid="class_sphere_1ac3492a52339889ef2ce0357bdbc5ecc9" prot="private" virt="non-virtual"><scope>Sphere</scope><name>logr</name></member>
      <member refid="class_spherical_basis_1a463dfd0a4b7a6f16a7a814e887dce037" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>M0_only</name></member>
      <member refid="class_sphere_1a08f150878ea2e0a03f1417eb07e90c8d" prot="private" virt="non-virtual"><scope>Sphere</scope><name>make_model</name></member>
      <member refid="class_sphere_1a21810f9c6a9dd31ec9b119e6bccfc453" prot="private" virt="non-virtual"><scope>Sphere</scope><name>make_model_bin</name></member>
      <member refid="class_sphere_1ab444f846661c7e7113ca1cf21f0cc4ce" prot="private" virt="non-virtual"><scope>Sphere</scope><name>make_model_plummer</name></member>
      <member refid="class_pot_accel_1a65fa890eea987e18d552825ab074939b" prot="public" virt="non-virtual"><scope>Sphere</scope><name>make_mutex</name></member>
      <member refid="class_sphere_1a440de5d82772eccff93c7b86d3598a7b" prot="private" virt="non-virtual"><scope>Sphere</scope><name>mapDeriv</name></member>
      <member refid="class_sphere_1aa6bfd72abb2e011e94585977ea2b3350" prot="private" virt="non-virtual"><scope>Sphere</scope><name>mapIntrp</name></member>
      <member refid="class_axisymmetric_basis_1a0c051b9729ad5af02ed9ca626b56d999" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>massT</name></member>
      <member refid="class_axisymmetric_basis_1a695b88eea00afd8f04b80c7f08be1b82" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>massT1</name></member>
      <member refid="class_axisymmetric_basis_1a4f7fd256528b06fa3124aa070e558c9a" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>MatrixP</name></member>
      <member refid="class_spherical_basis_1ae90709b119fc3f5df1c76abb8145bee8" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>meanC</name></member>
      <member refid="class_spherical_basis_1af0c80585c72228373e886563448ba6e2" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>mix</name></member>
      <member refid="class_pot_accel_1ad9ff6c9f431ad2f8ad2e5895c222ede8" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>mlevel</name></member>
      <member refid="class_axisymmetric_basis_1a2307130cf92a81e6cfb6f69fb2279585" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>Mmax</name></member>
      <member refid="class_sphere_1a5fe02164759ca90df854c1fced09444d" prot="private" virt="non-virtual"><scope>Sphere</scope><name>model_file</name></member>
      <member refid="class_spherical_basis_1af0aaa7a1ef27c5ccb866190e5cefd90a" prot="public" virt="virtual"><scope>Sphere</scope><name>multistep_add_debug</name></member>
      <member refid="class_pot_accel_1a2ba58ca0219d337b13c87697353d4121" prot="public" virt="virtual"><scope>Sphere</scope><name>multistep_debug</name></member>
      <member refid="class_spherical_basis_1aef978544ce5d90a116759fd3a87a8634" prot="public" virt="virtual"><scope>Sphere</scope><name>multistep_reset</name></member>
      <member refid="class_spherical_basis_1a92c55df02156ac2f3633bfa950eb795b" prot="public" virt="virtual"><scope>Sphere</scope><name>multistep_update</name></member>
      <member refid="class_spherical_basis_1af2393d23ec465c58280cc952a92c6fa8" prot="public" virt="virtual"><scope>Sphere</scope><name>multistep_update_begin</name></member>
      <member refid="class_spherical_basis_1a50f766814b5eb9fd2d3922da477c16e5" prot="public" virt="virtual"><scope>Sphere</scope><name>multistep_update_finish</name></member>
      <member refid="class_axisymmetric_basis_1a066a011ea1511b649a093b17a01bee1e" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>muse</name></member>
      <member refid="class_spherical_basis_1a5d72272244c58109d29a4d3e03f51ce9" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>muse0</name></member>
      <member refid="class_spherical_basis_1aee6466e0b29f8c1f9c4df8baa0e607d6" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>muse1</name></member>
      <member refid="class_pot_accel_1a73976f361ed7abf13001835bfcdee639" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>nbodies</name></member>
      <member refid="class_spherical_basis_1a3a81bde48ab3654d1dbe004efcd06782" prot="public" virt="non-virtual"><scope>Sphere</scope><name>NewCoefs</name></member>
      <member refid="class_axisymmetric_basis_1acee029d0e3afc656f5fb5d8f063a97d9" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>nmax</name></member>
      <member refid="class_spherical_basis_1a67a78c946ad3a87bafd4be8ea267f266" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>NO_L0</name></member>
      <member refid="class_spherical_basis_1ae51f8f0ffc23b5826245038719998eb6" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>NO_L1</name></member>
      <member refid="class_pot_accel_1a4f2099b1b705731b909e63c90ea59f04" prot="public" virt="non-virtual"><scope>Sphere</scope><name>NoCoefs</name></member>
      <member refid="class_sphere_1a2a4d4939bbd407cf72138097de9f15df" prot="private" virt="non-virtual"><scope>Sphere</scope><name>noff</name></member>
      <member refid="class_spherical_basis_1a27229561fbae3c1f7bf416933767a494" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>NOISE</name></member>
      <member refid="class_spherical_basis_1a3cbbfe1042e83cf11ab096ec01b5a518" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>noise_model_file</name></member>
      <member refid="class_spherical_basis_1af4a0835e95c0e0f5406977a92c11ed6f" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>noiseN</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6a85300903a059bd6e3a193bd92112a16f" prot="public" virt="non-virtual"><scope>Sphere</scope><name>None</name></member>
      <member refid="class_spherical_basis_1ad436a9e7fe4b8dca580322b59dd1b9fe" prot="public" virt="virtual"><scope>Sphere</scope><name>norm</name></member>
      <member refid="class_axisymmetric_basis_1a5cffa9ce5ca3b98aeca288e4c5e11c73" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>normM</name></member>
      <member refid="class_axisymmetric_basis_1afa81d9394890b9ebc0a7989651b021d9" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>npca</name></member>
      <member refid="class_axisymmetric_basis_1a68be4e14ebd23388b75d8df12af76667" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>npca0</name></member>
      <member refid="class_spherical_basis_1a64ddd550a0b2994a5800a064883814e6" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>nrand</name></member>
      <member refid="class_sphere_1adb0b2bc43a2ee2dc14c2da9ee8fd5aa2" prot="private" virt="non-virtual"><scope>Sphere</scope><name>numr</name></member>
      <member refid="class_sphere_1a04f2b8606239e7b2a49a22efc4978a1a" prot="private" virt="non-virtual"><scope>Sphere</scope><name>nums</name></member>
      <member refid="class_spherical_basis_1a2c45c3e7a097ab190a77f882dac5c2c2" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>occt</name></member>
      <member refid="class_spherical_basis_1a7db3a78056025d8c840dd22bae0b2692" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>occt_output</name></member>
      <member refid="class_sphere_1a5ed1ee6094cdc1a966ee425b9df9db81" prot="private" virt="non-virtual"><scope>Sphere</scope><name>ortho</name></member>
      <member refid="class_spherical_basis_1a69a29f7fd957e20aebe7797ba7f266bf" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>ortho_check</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda7c49f38007dad33fb1e48fdebdd2f8c1" prot="public" virt="non-virtual"><scope>Sphere</scope><name>other</name></member>
      <member refid="class_spherical_basis_1aa78ad9fca6de2d329ffc43522b1f067c" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>pack</name></member>
      <member refid="class_axisymmetric_basis_1a0ba9093da208645ba67931e04a61f4c7" prot="protected" virt="virtual"><scope>Sphere</scope><name>parallel_distribute_coefficients</name></member>
      <member refid="class_axisymmetric_basis_1a1aba7be747336c8e6a67613a3109e285" prot="protected" virt="virtual"><scope>Sphere</scope><name>parallel_gather_coef2</name></member>
      <member refid="class_axisymmetric_basis_1a01ab8064885a073b48ad562790b89f86" prot="protected" virt="virtual"><scope>Sphere</scope><name>parallel_gather_coefficients</name></member>
      <member refid="class_axisymmetric_basis_1a408a19fff1093c88f6a9bcf9ad2601d4" prot="public" virt="non-virtual"><scope>Sphere</scope><name>pca_hall</name></member>
      <member refid="class_axisymmetric_basis_1ae0353b5d1b82b19517ede95a862d7484" prot="public" virt="non-virtual"><scope>Sphere</scope><name>pca_hall_2d</name></member>
      <member refid="class_axisymmetric_basis_1ab971c10417b2e844c9251d6a667103d4" prot="public" virt="non-virtual"><scope>Sphere</scope><name>pca_hall_3d</name></member>
      <member refid="class_axisymmetric_basis_1aea08169a329b6608c42fdeeb1db91183" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>pcadiag</name></member>
      <member refid="class_axisymmetric_basis_1af2a1f4efbdc887b29a6d49b770c1f060" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>pcaeof</name></member>
      <member refid="class_axisymmetric_basis_1a8da7266925e30ee0056cf97e84d4809e" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>pcavar</name></member>
      <member refid="class_axisymmetric_basis_1ad53aa251aa38d7645a4d3eece99dc9d5" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>pcavtk</name></member>
      <member refid="class_pot_accel_1a74b41dd5c2f102dd3184ac53b6172462" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>play_back</name></member>
      <member refid="class_pot_accel_1aea1c756cd9616a1daf73541780b45798" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>play_cnew</name></member>
      <member refid="class_spherical_basis_1a4c8c57602fd3b7eb58c08c35c2964f90" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>playback</name></member>
      <member refid="class_sphere_1a89f73c9ad44a2eb0522626631034e052" prot="private" virt="non-virtual"><scope>Sphere</scope><name>plummer</name></member>
      <member refid="class_pot_accel_1a801fdbd01e551033e79f274e4a7c1d1e" prot="public" virt="non-virtual"><scope>Sphere</scope><name>PotAccel</name></member>
      <member refid="class_spherical_basis_1a843909b7df76df454ca77ca502e05065" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>potd</name></member>
      <member refid="class_pot_accel_1a5e257d38dbf5c3d9630906a96abf6915" prot="public" virt="non-virtual"><scope>Sphere</scope><name>print_timings</name></member>
      <member refid="class_pot_accel_1a37a3c348c0febbf70ff94949071c3beb" prot="public" virt="non-virtual"><scope>Sphere</scope><name>print_timings</name></member>
      <member refid="class_sphere_1a60b2648f82fede09d60f0bc36bc4cd96" prot="private" virt="virtual"><scope>Sphere</scope><name>r_to_xi</name></member>
      <member refid="class_sphere_1a28294bdd15c2bc06642281e4d2113983" prot="private" virt="non-virtual"><scope>Sphere</scope><name>recompute</name></member>
      <member refid="class_pot_accel_1a8aea0d1740bf7432e1193dda7121a8bb" prot="public" virt="virtual"><scope>Sphere</scope><name>RegisterComponent</name></member>
      <member refid="class_spherical_basis_1ab5d753ab8f0ddfb814fe73a027af323d" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>resetT</name></member>
      <member refid="class_spherical_basis_1a99942ed4bb5830034724f7f32c284cea" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>rgen</name></member>
      <member refid="class_sphere_1a15fbbf33f59128fbfb1d33b2545714d4" prot="private" virt="non-virtual"><scope>Sphere</scope><name>rmap</name></member>
      <member refid="class_spherical_basis_1a498d5da25a19e0eaf75cb539fcda5227" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>rmax</name></member>
      <member refid="class_spherical_basis_1a1eda652331347885bac46d659ae02b8d" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>rmin</name></member>
      <member refid="class_spherical_basis_1a89d96243aa9a5c5932555116a3ce59e9" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>rmsC</name></member>
      <member refid="class_sphere_1aec235175b0942662e52ce083070fc820" prot="private" virt="non-virtual"><scope>Sphere</scope><name>rsphSL</name></member>
      <member refid="class_axisymmetric_basis_1a5116daa842c0f604c2a312db8e0ce97e" prot="private" virt="non-virtual"><scope>Sphere</scope><name>s_Hall</name></member>
      <member refid="class_axisymmetric_basis_1a9e5bccb2a796e19083511f4e637cffda" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>sampT</name></member>
      <member refid="class_pot_accel_1added387424e4e4d23bac8500822e4324" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>scale</name></member>
      <member refid="class_spherical_basis_1a73e589dd6b66a1a015e065d34021f525" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>seedN</name></member>
      <member refid="class_spherical_basis_1a8a21a2f59849e53f52c532be168a5800" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>self_consistent</name></member>
      <member refid="class_pot_accel_1ac65dfca720c42ea4a773024d1eaf977f" prot="public" virt="virtual"><scope>Sphere</scope><name>set_multistep_level</name></member>
      <member refid="class_pot_accel_1a6dc784a141afdec5f4daad63eba20b81" prot="public" virt="non-virtual"><scope>Sphere</scope><name>SetExternal</name></member>
      <member refid="class_pot_accel_1ad528efbd280a21543addaf7747e9089a" prot="public" virt="virtual"><scope>Sphere</scope><name>setScale</name></member>
      <member refid="class_axisymmetric_basis_1a6af1bcb2359adc5091625d457a953efa" prot="public" virt="non-virtual"><scope>Sphere</scope><name>setTK</name></member>
      <member refid="class_spherical_basis_1aa6cc607bac98ab8abef4c46a6a06fee2" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>setup</name></member>
      <member refid="class_spherical_basis_1ad9ea2d324f62151073b6cb3b4da9f28a" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>setup_noise</name></member>
      <member refid="class_basis_1a0779c0b0f74361d7861bbc19a194b63c" prot="public" virt="non-virtual"><scope>Sphere</scope><name>sinecosine_R</name></member>
      <member refid="class_spherical_basis_1a01e5435d45829ea1fa2a7eaa94ca967a" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>sinm</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda0a1acd8c0d6e745fb0ae3e33e458a9b8" prot="public" virt="non-virtual"><scope>Sphere</scope><name>slab</name></member>
      <member refid="class_axisymmetric_basis_1a52873b88250c954ccca613fab178c5ee" prot="private" virt="non-virtual"><scope>Sphere</scope><name>smth</name></member>
      <member refid="class_axisymmetric_basis_1ac4fce6a4930030f49b46844753ce3052" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>snr</name></member>
      <member refid="class_spherical_basis_1a985aeb555ac7cadb48ada5aa0b87a0a4" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>sphCoefs</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda996ce4577548b6da6b1330a78b1c6f6a" prot="public" virt="non-virtual"><scope>Sphere</scope><name>sphere</name></member>
      <member refid="class_sphere_1aa23162c4c21959d46257a150931e2f56" prot="public" virt="non-virtual"><scope>Sphere</scope><name>Sphere</name></member>
      <member refid="class_spherical_basis_1a597c70fc53eab8ec04f7ab86c04fec42" prot="public" virt="non-virtual"><scope>Sphere</scope><name>SphericalBasis</name></member>
      <member refid="class_spherical_basis_1a37942ed713092a019dbc750b2c44c2d7" prot="public" virt="non-virtual"><scope>Sphere</scope><name>SphericalBasis</name></member>
      <member refid="class_axisymmetric_basis_1a2dd973d8ace9db32c65938425d159af9" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>sqnorm</name></member>
      <member refid="class_spherical_basis_1aa69f1ee5a2a5ab8269b4cd0b97aa274a" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>ssfrac</name></member>
      <member refid="class_axisymmetric_basis_1a592dd952d0301e3c55da82f78eb3cfe8" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>subsamp</name></member>
      <member refid="class_spherical_basis_1ac8ace6001c8d041fb39f13cb27b2ca19" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>subset</name></member>
      <member refid="class_axisymmetric_basis_1a8298f44c8cc6e6401b471c4a50c52662" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>swap_coefs</name></member>
      <member refid="class_pot_accel_1aff158a74d7328a080ed619c1456836f5" prot="private" virt="non-virtual"><scope>Sphere</scope><name>t</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda1792d3c00a41ee78957c83611fd368a2" prot="public" virt="non-virtual"><scope>Sphere</scope><name>table</name></member>
      <member refid="class_pot_accel_1a125d7343a34d292a3e4a48a5d984cac4" prot="private" virt="non-virtual"><scope>Sphere</scope><name>td</name></member>
      <member refid="class_axisymmetric_basis_1a196db3f26a946c2dcbaabcbe31883b4a" prot="private" virt="non-virtual"><scope>Sphere</scope><name>Tevec</name></member>
      <member refid="class_pot_accel_1a86d0d012a44e2eb7c3e385d852a5fdde" prot="public" virt="non-virtual"><scope>Sphere</scope><name>thread_timing_beg</name></member>
      <member refid="class_pot_accel_1a76c805cd8d0d134d37929eeb48115b33" prot="public" virt="non-virtual"><scope>Sphere</scope><name>thread_timing_end</name></member>
      <member refid="class_pot_accel_1a4315e73a641c54eefc548b7d14cb06b6" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>timer_list</name></member>
      <member refid="class_axisymmetric_basis_1a3e85225ea1c3c408fe2bcf23ad09b555" prot="private" virt="non-virtual"><scope>Sphere</scope><name>tk_type</name></member>
      <member refid="class_axisymmetric_basis_1a3a98442a6149253a6881c33cf6792e38" prot="private" virt="non-virtual"><scope>Sphere</scope><name>tkcum</name></member>
      <member refid="class_axisymmetric_basis_1ad4dabce5bd04809a4644cb36705312f9" prot="private" virt="non-virtual"><scope>Sphere</scope><name>tksmooth</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6" prot="public" virt="non-virtual"><scope>Sphere</scope><name>TKType</name></member>
      <member refid="class_pot_accel_1aabce5ff868883c6191b8b7f8f6281c04" prot="public" virt="non-virtual"><scope>Sphere</scope><name>TList</name></member>
      <member refid="class_sphere_1a598ccc4dc3fe0818aedba36666be68d8" prot="private" virt="non-virtual"><scope>Sphere</scope><name>tnext</name></member>
      <member refid="class_axisymmetric_basis_1a8acdd32795c612cdcefee5da62cc5b3a" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>tvar</name></member>
      <member refid="class_spherical_basis_1a3c3e727fad925e72690bb0dbd39a2676" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>u</name></member>
      <member refid="class_pot_accel_1a0355cfe43cdde5237f7be234e94de64b" prot="public" virt="non-virtual"><scope>Sphere</scope><name>unmatched</name></member>
      <member refid="class_spherical_basis_1adb25dced63b1f56d205dd7d8e659f0ef" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>unpack</name></member>
      <member refid="class_spherical_basis_1aeee5549cb30e7c608c8255783ab10a52" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>update_noise</name></member>
      <member refid="class_pot_accel_1acd32c6464b705469911df718114187b9" prot="public" virt="non-virtual"><scope>Sphere</scope><name>use</name></member>
      <member refid="class_pot_accel_1a59a4a86ea8d2b3a9a5d420ef7e712697" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>use_external</name></member>
      <member refid="class_pot_accel_1ae2e0dbf849707704a3d42a1fa91ce060" prot="public" virt="non-virtual"><scope>Sphere</scope><name>Used</name></member>
      <member refid="class_pot_accel_1a8fe5beef77e790f0d7bf6f455f5bf1d3" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>used</name></member>
      <member refid="class_sphere_1a69e5f2cb1fe98554c8ed7b1b9ed28f79" prot="private" virt="non-virtual"><scope>Sphere</scope><name>valid_keys</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6a27bdb8b3a4040b794e7418581fda2615" prot="public" virt="non-virtual"><scope>Sphere</scope><name>VarianceCut</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6a7381bdf9e2231e55827cf72d86f7f415" prot="public" virt="non-virtual"><scope>Sphere</scope><name>VarianceWeighted</name></member>
      <member refid="class_axisymmetric_basis_1a90258bc4c31858abd74719a452f7f807" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>VectorP</name></member>
      <member refid="class_spherical_basis_1a4927dfcbaf0910033fcc37a4892f8bde" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>VectorXdP</name></member>
      <member refid="class_axisymmetric_basis_1ab0d1d51da0dc7f33cf3091bab41866d1" prot="protected" virt="non-virtual"><scope>Sphere</scope><name>vtkfreq</name></member>
      <member refid="class_axisymmetric_basis_1a3708ccfcde62cc3e88dbde5994d08f26" prot="private" virt="non-virtual"><scope>Sphere</scope><name>weight</name></member>
      <member refid="class_sphere_1a6699301c6969c5499ddf669f7f4fbffc" prot="private" virt="virtual"><scope>Sphere</scope><name>xi_to_r</name></member>
      <member refid="class_axisymmetric_basis_1a98dbe87cedd6dc28d03bba5aba133dd4" prot="public" virt="virtual"><scope>Sphere</scope><name>~AxisymmetricBasis</name></member>
      <member refid="class_pot_accel_1adcc326688bb152249f81e88d6edfde62" prot="public" virt="virtual"><scope>Sphere</scope><name>~PotAccel</name></member>
      <member refid="class_sphere_1acde2697064cbc2c64ea34aed1b3efac7" prot="public" virt="virtual"><scope>Sphere</scope><name>~Sphere</name></member>
      <member refid="class_spherical_basis_1aa752534f77e17674a6a99da2549af843" prot="public" virt="virtual"><scope>Sphere</scope><name>~SphericalBasis</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
