<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_sphere_s_l" kind="class" language="C++" prot="public">
    <compoundname>SphereSL</compoundname>
    <basecompoundref refid="class_axi_sym_biorth" prot="public" virt="non-virtual">AxiSymBiorth</basecompoundref>
    <includes refid="sphere_s_l_8_h" local="no">sphereSL.H</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_sphere_s_l_1acd24934f776b69bf741d077c3c8d1c2f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SphereSL::lmax</definition>
        <argsstring></argsstring>
        <name>lmax</name>
        <qualifiedname>SphereSL::lmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="20" column="7" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_s_l_1a4285acc83fe9f7d06ebe22368b58139a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SphereSL::nmax</definition>
        <argsstring></argsstring>
        <name>nmax</name>
        <qualifiedname>SphereSL::nmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="20" column="12" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_s_l_1a376f9832332b03a278a159c12789b61b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SphereSL::numr</definition>
        <argsstring></argsstring>
        <name>numr</name>
        <qualifiedname>SphereSL::numr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="20" column="17" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_s_l_1a37bf261b5b6f306caab7354f7d8d1a30" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphereSL::rmax</definition>
        <argsstring></argsstring>
        <name>rmax</name>
        <qualifiedname>SphereSL::rmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="21" column="15" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="21" bodyend="-1"/>
        <referencedby refid="class_sphere_s_l_1a490f65d960649770981d83d66d958435" compoundref="sphere_s_l_8_h" startline="62" endline="62">rb_max</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_s_l_1afeef63edbcff5c1468b6b0331f99f188" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphereSL::rmin</definition>
        <argsstring></argsstring>
        <name>rmin</name>
        <qualifiedname>SphereSL::rmin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="21" column="10" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="21" bodyend="-1"/>
        <referencedby refid="class_sphere_s_l_1a6f8a05e49cc970cbf590cd237ca3cd25" compoundref="sphere_s_l_8_h" startline="61" endline="61">rb_min</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_s_l_1a01327079cfc40d347281388328d1e2db" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphereSL::scale</definition>
        <argsstring></argsstring>
        <name>scale</name>
        <qualifiedname>SphereSL::scale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="21" column="20" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_s_l_1a164273b12029f8caf7f754ca03132871" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_l_grid_sph" kindref="compound">SLGridSph</ref> *</type>
        <definition>SLGridSph* SphereSL::slgrid</definition>
        <argsstring></argsstring>
        <name>slgrid</name>
        <qualifiedname>SphereSL::slgrid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="23" column="13" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="23" bodyend="-1"/>
        <referencedby refid="class_sphere_s_l_1a490f65d960649770981d83d66d958435" compoundref="sphere_s_l_8_h" startline="62" endline="62">rb_max</referencedby>
        <referencedby refid="class_sphere_s_l_1a6f8a05e49cc970cbf590cd237ca3cd25" compoundref="sphere_s_l_8_h" startline="61" endline="61">rb_min</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_sphere_s_l_1a41cf4a3966f649b1c019494488a7c765" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool SphereSL::cache</definition>
        <argsstring></argsstring>
        <name>cache</name>
        <qualifiedname>SphereSL::cache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="32" column="15" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sphere_s_l_1a19a78d9aef587d1a5a05398c9c3f15a0" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int SphereSL::mpi</definition>
        <argsstring></argsstring>
        <name>mpi</name>
        <qualifiedname>SphereSL::mpi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="29" column="14" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="29" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sphere_s_l_1ad6ef39426a4f8d8aaa3f8f0840fbf511" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double SphereSL::d_r_to_rb</definition>
        <argsstring>(double const x)</argsstring>
        <name>d_r_to_rb</name>
        <qualifiedname>SphereSL::d_r_to_rb</qualifiedname>
        <reimplements refid="class_axi_sym_biorth_1aaaf67379cdeb608b5f9c07509bb22631">d_r_to_rb</reimplements>
        <param>
          <type>double const</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="60" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1a77c5b912e0ac87d08104324a62365d4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SphereSL::d_rb_to_r</definition>
        <argsstring>(const double x)</argsstring>
        <name>d_rb_to_r</name>
        <qualifiedname>SphereSL::d_rb_to_r</qualifiedname>
        <param>
          <type>const double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="70" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1af160b934c0c8e1ad328fd2c6fab28adf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double SphereSL::dens</definition>
        <argsstring>(const int n, const int l, const double x)</argsstring>
        <name>dens</name>
        <qualifiedname>SphereSL::dens</qualifiedname>
        <reimplements refid="class_axi_sym_biorth_1a6cb90b729dbfb31340bf8930049df4cd">dens</reimplements>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="43" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1afcc06b98a7e0e4aebeccf1d64bc053b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SphereSL::dens</definition>
        <argsstring>(const int n, const int l, const double x, Eigen::VectorXd &amp;t)</argsstring>
        <name>dens</name>
        <qualifiedname>SphereSL::dens</qualifiedname>
        <reimplements refid="class_axi_sym_biorth_1a6222c8a860d4e41a3d81b74d790442c8">dens</reimplements>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="54" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1a9e92c59228468a65cc08a86043cd8fcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SphereSL::get_dens</definition>
        <argsstring>(const double r, const int l, const Eigen::VectorXd &amp;coef)</argsstring>
        <name>get_dens</name>
        <qualifiedname>SphereSL::get_dens</qualifiedname>
        <param>
          <type>const double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>coef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="65" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1a2f27b9e586510ec276aa35facb98765c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SphereSL::get_potl</definition>
        <argsstring>(const double r, const int l, const Eigen::VectorXd &amp;coef)</argsstring>
        <name>get_potl</name>
        <qualifiedname>SphereSL::get_potl</qualifiedname>
        <param>
          <type>const double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>coef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="64" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1a36185e4e83af995799949cfb24d3e90b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double SphereSL::krnl</definition>
        <argsstring>(const int n, const int l)</argsstring>
        <name>krnl</name>
        <qualifiedname>SphereSL::krnl</qualifiedname>
        <reimplements refid="class_biorth_1a582200336065fac43a3282ee0671cffb">krnl</reimplements>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="67" column="17" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1a1e4ac2372c6d10c177d8639451d8eb3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double SphereSL::norm</definition>
        <argsstring>(const int n, const int l)</argsstring>
        <name>norm</name>
        <qualifiedname>SphereSL::norm</qualifiedname>
        <reimplements refid="class_biorth_1a4997a44fb308362868547f4eb0f23c5a">norm</reimplements>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="68" column="17" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1a0618be0d4ee7e18fce3656cff6701794" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double SphereSL::potl</definition>
        <argsstring>(const int n, const int l, const double x)</argsstring>
        <name>potl</name>
        <qualifiedname>SphereSL::potl</qualifiedname>
        <reimplements refid="class_axi_sym_biorth_1aaec9137305d7c2eed46ca59c5ea777b1">potl</reimplements>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="42" column="10"/>
        <referencedby refid="class_sphere_s_l_1ae73b7d81422a55ab7f4b7120e9aed111" compoundref="sphere_s_l_8_h" startline="45" endline="46">potlR</referencedby>
        <referencedby refid="class_sphere_s_l_1a4879573d3c8657afe4efafc03565b862" compoundref="sphere_s_l_8_h" startline="48" endline="50">potlRZ</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1ad123d7ae428a8efc093510dc676e1d30" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SphereSL::potl</definition>
        <argsstring>(const int n, const int l, const double x, Eigen::VectorXd &amp;t)</argsstring>
        <name>potl</name>
        <qualifiedname>SphereSL::potl</qualifiedname>
        <reimplements refid="class_axi_sym_biorth_1a2216fefb9a71a8dcdd378da8c3d82fbb">potl</reimplements>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="53" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1ae73b7d81422a55ab7f4b7120e9aed111" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double SphereSL::potlR</definition>
        <argsstring>(const int n, const int l, const double r)</argsstring>
        <name>potlR</name>
        <qualifiedname>SphereSL::potlR</qualifiedname>
        <reimplements refid="class_axi_sym_biorth_1a63c2bf04065efbbdcb005377836e0894">potlR</reimplements>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="45" column="17" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="45" bodyend="46"/>
        <references refid="class_sphere_s_l_1a0618be0d4ee7e18fce3656cff6701794">potl</references>
        <references refid="class_sphere_s_l_1ab9f7e8bfe2355df79dc7e745d2af063e">r_to_rb</references>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1a4879573d3c8657afe4efafc03565b862" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double SphereSL::potlRZ</definition>
        <argsstring>(const int n, const int l, const double r, const double z)</argsstring>
        <name>potlRZ</name>
        <qualifiedname>SphereSL::potlRZ</qualifiedname>
        <reimplements refid="class_axi_sym_biorth_1afa024ea053a13ae6094ed1ee65653eac">potlRZ</reimplements>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="48" column="17" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="48" bodyend="50"/>
        <references refid="class_sphere_s_l_1a0618be0d4ee7e18fce3656cff6701794">potl</references>
        <references refid="class_sphere_s_l_1ab9f7e8bfe2355df79dc7e745d2af063e">r_to_rb</references>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1ab9f7e8bfe2355df79dc7e745d2af063e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double SphereSL::r_to_rb</definition>
        <argsstring>(double const r)</argsstring>
        <name>r_to_rb</name>
        <qualifiedname>SphereSL::r_to_rb</qualifiedname>
        <reimplements refid="class_axi_sym_biorth_1a5fea78e59e755b9d3e05965b223f10aa">r_to_rb</reimplements>
        <param>
          <type>double const</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="58" column="10"/>
        <referencedby refid="class_sphere_s_l_1ae73b7d81422a55ab7f4b7120e9aed111" compoundref="sphere_s_l_8_h" startline="45" endline="46">potlR</referencedby>
        <referencedby refid="class_sphere_s_l_1a4879573d3c8657afe4efafc03565b862" compoundref="sphere_s_l_8_h" startline="48" endline="50">potlRZ</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1a490f65d960649770981d83d66d958435" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double SphereSL::rb_max</definition>
        <argsstring>(void)</argsstring>
        <name>rb_max</name>
        <qualifiedname>SphereSL::rb_max</qualifiedname>
        <reimplements refid="class_axi_sym_biorth_1a8a0737fc879f5950452fd0a0b895a57b">rb_max</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="62" column="10" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="62" bodyend="62"/>
        <references refid="class_s_l_grid_sph_1abd551a1660dd7f05b08729c2f177c9a5">SLGridSph::r_to_xi</references>
        <references refid="class_sphere_s_l_1a37bf261b5b6f306caab7354f7d8d1a30" compoundref="sphere_s_l_8_h" startline="21">rmax</references>
        <references refid="class_sphere_s_l_1a164273b12029f8caf7f754ca03132871" compoundref="sphere_s_l_8_h" startline="23">slgrid</references>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1a6f8a05e49cc970cbf590cd237ca3cd25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double SphereSL::rb_min</definition>
        <argsstring>(void)</argsstring>
        <name>rb_min</name>
        <qualifiedname>SphereSL::rb_min</qualifiedname>
        <reimplements refid="class_axi_sym_biorth_1a732c3f77a9d9968f5a06ba7d57c69832">rb_min</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="61" column="10" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="61" bodyend="61"/>
        <references refid="class_s_l_grid_sph_1abd551a1660dd7f05b08729c2f177c9a5">SLGridSph::r_to_xi</references>
        <references refid="class_sphere_s_l_1afeef63edbcff5c1468b6b0331f99f188" compoundref="sphere_s_l_8_h" startline="21">rmin</references>
        <references refid="class_sphere_s_l_1a164273b12029f8caf7f754ca03132871" compoundref="sphere_s_l_8_h" startline="23">slgrid</references>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1a670017621747229de479ba578cef996a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double SphereSL::rb_to_r</definition>
        <argsstring>(double const x)</argsstring>
        <name>rb_to_r</name>
        <qualifiedname>SphereSL::rb_to_r</qualifiedname>
        <reimplements refid="class_axi_sym_biorth_1a3815fa706249dff779ff597d8ab37c71">rb_to_r</reimplements>
        <param>
          <type>double const</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="59" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1a7800b8f7b5fd65418eafdea9b9ce4268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SphereSL::SphereSL</definition>
        <argsstring>(int lmax, int nmax, int numr, double rmin, double rmax, double scale, std::shared_ptr&lt; SphericalModelTable &gt; mod)</argsstring>
        <name>SphereSL</name>
        <qualifiedname>SphereSL::SphereSL</qualifiedname>
        <param>
          <type>int</type>
          <declname>lmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rmin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rmax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_spherical_model_table" kindref="compound">SphericalModelTable</ref> &gt;</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="36" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_sphere_s_l_1ae64941af3d9cba7632b9e9ea54556dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SphereSL::~SphereSL</definition>
        <argsstring>(void)</argsstring>
        <name>~SphereSL</name>
        <qualifiedname>SphereSL::~SphereSL</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="38" column="3"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AxiSymBiorth</label>
        <link refid="class_axi_sym_biorth"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Biorth</label>
        <link refid="class_biorth"/>
      </node>
      <node id="1">
        <label>SphereSL</label>
        <link refid="class_sphere_s_l"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>AxiSymBiorth</label>
        <link refid="class_axi_sym_biorth"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Biorth</label>
        <link refid="class_biorth"/>
      </node>
      <node id="4">
        <label>SLGridSph</label>
        <link refid="class_s_l_grid_sph"/>
      </node>
      <node id="1">
        <label>SphereSL</label>
        <link refid="class_sphere_s_l"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>slgrid</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/include/sphereSL.H" line="15" column="1" bodyfile="/home/weinberg/Projects/EXP/include/sphereSL.H" bodystart="16" bodyend="72"/>
    <listofallmembers>
      <member refid="class_axi_sym_biorth_1a5ab6aaba58d2c9115a111a5383158518" prot="public" virt="non-virtual"><scope>SphereSL</scope><name>AxiSymBiorth</name></member>
      <member refid="class_biorth_1a2e936fa39b497ab4f2316f7b6bd2f226" prot="public" virt="non-virtual"><scope>SphereSL</scope><name>BiorthID</name></member>
      <member refid="class_biorth_1a3331c0ec9dabbed562c32c3d59c7b1bb" prot="public" virt="non-virtual"><scope>SphereSL</scope><name>bomb</name></member>
      <member refid="class_sphere_s_l_1a41cf4a3966f649b1c019494488a7c765" prot="public" virt="non-virtual"><scope>SphereSL</scope><name>cache</name></member>
      <member refid="class_sphere_s_l_1ad6ef39426a4f8d8aaa3f8f0840fbf511" prot="public" virt="virtual"><scope>SphereSL</scope><name>d_r_to_rb</name></member>
      <member refid="class_sphere_s_l_1a77c5b912e0ac87d08104324a62365d4a" prot="public" virt="non-virtual"><scope>SphereSL</scope><name>d_rb_to_r</name></member>
      <member refid="class_sphere_s_l_1af160b934c0c8e1ad328fd2c6fab28adf" prot="public" virt="virtual"><scope>SphereSL</scope><name>dens</name></member>
      <member refid="class_sphere_s_l_1afcc06b98a7e0e4aebeccf1d64bc053b6" prot="public" virt="virtual"><scope>SphereSL</scope><name>dens</name></member>
      <member refid="class_axi_sym_biorth_1a9d37a4dad785da836b339264b6176fc2" prot="protected" virt="non-virtual"><scope>SphereSL</scope><name>dof</name></member>
      <member refid="class_sphere_s_l_1a9e92c59228468a65cc08a86043cd8fcb" prot="public" virt="non-virtual"><scope>SphereSL</scope><name>get_dens</name></member>
      <member refid="class_axi_sym_biorth_1a9e4634e741f090bd7a2c088750d894e4" prot="public" virt="non-virtual"><scope>SphereSL</scope><name>get_dof</name></member>
      <member refid="class_sphere_s_l_1a2f27b9e586510ec276aa35facb98765c" prot="public" virt="non-virtual"><scope>SphereSL</scope><name>get_potl</name></member>
      <member refid="class_biorth_1a732367609f458cf4128bb37f2641c30b" prot="public" virt="non-virtual"><scope>SphereSL</scope><name>id</name></member>
      <member refid="class_sphere_s_l_1a36185e4e83af995799949cfb24d3e90b" prot="public" virt="virtual"><scope>SphereSL</scope><name>krnl</name></member>
      <member refid="class_sphere_s_l_1acd24934f776b69bf741d077c3c8d1c2f" prot="private" virt="non-virtual"><scope>SphereSL</scope><name>lmax</name></member>
      <member refid="class_sphere_s_l_1a19a78d9aef587d1a5a05398c9c3f15a0" prot="public" virt="non-virtual"><scope>SphereSL</scope><name>mpi</name></member>
      <member refid="class_sphere_s_l_1a4285acc83fe9f7d06ebe22368b58139a" prot="private" virt="non-virtual"><scope>SphereSL</scope><name>nmax</name></member>
      <member refid="class_sphere_s_l_1a1e4ac2372c6d10c177d8639451d8eb3c" prot="public" virt="virtual"><scope>SphereSL</scope><name>norm</name></member>
      <member refid="class_sphere_s_l_1a376f9832332b03a278a159c12789b61b" prot="private" virt="non-virtual"><scope>SphereSL</scope><name>numr</name></member>
      <member refid="class_sphere_s_l_1a0618be0d4ee7e18fce3656cff6701794" prot="public" virt="virtual"><scope>SphereSL</scope><name>potl</name></member>
      <member refid="class_sphere_s_l_1ad123d7ae428a8efc093510dc676e1d30" prot="public" virt="virtual"><scope>SphereSL</scope><name>potl</name></member>
      <member refid="class_sphere_s_l_1ae73b7d81422a55ab7f4b7120e9aed111" prot="public" virt="virtual"><scope>SphereSL</scope><name>potlR</name></member>
      <member refid="class_sphere_s_l_1a4879573d3c8657afe4efafc03565b862" prot="public" virt="virtual"><scope>SphereSL</scope><name>potlRZ</name></member>
      <member refid="class_sphere_s_l_1ab9f7e8bfe2355df79dc7e745d2af063e" prot="public" virt="virtual"><scope>SphereSL</scope><name>r_to_rb</name></member>
      <member refid="class_sphere_s_l_1a490f65d960649770981d83d66d958435" prot="public" virt="virtual"><scope>SphereSL</scope><name>rb_max</name></member>
      <member refid="class_sphere_s_l_1a6f8a05e49cc970cbf590cd237ca3cd25" prot="public" virt="virtual"><scope>SphereSL</scope><name>rb_min</name></member>
      <member refid="class_sphere_s_l_1a670017621747229de479ba578cef996a" prot="public" virt="virtual"><scope>SphereSL</scope><name>rb_to_r</name></member>
      <member refid="class_sphere_s_l_1a37bf261b5b6f306caab7354f7d8d1a30" prot="private" virt="non-virtual"><scope>SphereSL</scope><name>rmax</name></member>
      <member refid="class_sphere_s_l_1afeef63edbcff5c1468b6b0331f99f188" prot="private" virt="non-virtual"><scope>SphereSL</scope><name>rmin</name></member>
      <member refid="class_sphere_s_l_1a01327079cfc40d347281388328d1e2db" prot="private" virt="non-virtual"><scope>SphereSL</scope><name>scale</name></member>
      <member refid="class_sphere_s_l_1a164273b12029f8caf7f754ca03132871" prot="private" virt="non-virtual"><scope>SphereSL</scope><name>slgrid</name></member>
      <member refid="class_sphere_s_l_1a7800b8f7b5fd65418eafdea9b9ce4268" prot="public" virt="non-virtual"><scope>SphereSL</scope><name>SphereSL</name></member>
      <member refid="class_axi_sym_biorth_1adcf402d63d58581bfb671cc97b213222" prot="public" virt="virtual"><scope>SphereSL</scope><name>~AxiSymBiorth</name></member>
      <member refid="class_biorth_1a83c4824d7003048794102f54152cfdbc" prot="public" virt="virtual"><scope>SphereSL</scope><name>~Biorth</name></member>
      <member refid="class_sphere_s_l_1ae64941af3d9cba7632b9e9ea54556dc8" prot="public" virt="non-virtual"><scope>SphereSL</scope><name>~SphereSL</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
