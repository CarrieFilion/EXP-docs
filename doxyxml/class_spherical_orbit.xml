<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_spherical_orbit" kind="class" language="C++" prot="public">
    <compoundname>SphericalOrbit</compoundname>
    <basecompoundref refid="class_regular_orbit" prot="public" virt="non-virtual">RegularOrbit</basecompoundref>
    <includes refid="orbit_8_h" local="no">orbit.H</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_spherical_orbit_1a9c8d85b92b505ce05abb9f3138247cc7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalOrbit::am</definition>
        <argsstring></argsstring>
        <name>am</name>
        <qualifiedname>SphericalOrbit::am</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="63" column="13" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a24d27c2c0fd8f7c505967405e2024bc3" prot="private" static="no" mutable="no">
        <type>struct <ref refid="struct_a_n_g_l_e___g_r_i_d" kindref="compound">ANGLE_GRID</ref></type>
        <definition>struct ANGLE_GRID SphericalOrbit::angle_grid</definition>
        <argsstring></argsstring>
        <name>angle_grid</name>
        <qualifiedname>SphericalOrbit::angle_grid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="77" column="19" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="77" bodyend="-1"/>
        <referencedby refid="class_spherical_orbit_1a6bcdf37f55f92a208b16b22a39c6140b" compoundref="orbit_8_h" startline="191" endline="196">get_angle_grid</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1af39c49b836eeb1ce0614f7ea6e8b211a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalOrbit::ap</definition>
        <argsstring></argsstring>
        <name>ap</name>
        <qualifiedname>SphericalOrbit::ap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="63" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1aa913defb5be85150e1336f2477b153f4" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalOrbit::beta</definition>
        <argsstring></argsstring>
        <name>beta</name>
        <qualifiedname>SphericalOrbit::beta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="57" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="57" bodyend="-1"/>
        <referencedby refid="class_spherical_orbit_1a974b256df68772b882efba91c4e82e1d" compoundref="orbit_8_h" startline="222" endline="222">Beta</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1aac77ad858f708436e2e55c6f0f3afc72" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_axi_sym_biorth" kindref="compound">AxiSymBiorth</ref> &gt;</type>
        <definition>std::shared_ptr&lt;AxiSymBiorth&gt; SphericalOrbit::biorth</definition>
        <argsstring></argsstring>
        <name>biorth</name>
        <qualifiedname>SphericalOrbit::biorth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="66" column="19" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="66" bodyend="-1"/>
        <referencedby refid="class_spherical_orbit_1abdd93142e78fd3e54c2bb3a15b330083" compoundref="orbit_8_h" startline="249" endline="249">orth</referencedby>
        <referencedby refid="class_spherical_orbit_1a7b66fc5ad316212f4b869fbd8ab5837b" compoundref="orbit_8_h" startline="177" endline="180">set_biorth</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a888c8723e845c0fd350e5139ba85c5dc" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd SphericalOrbit::cosvec</definition>
        <argsstring></argsstring>
        <name>cosvec</name>
        <qualifiedname>SphericalOrbit::cosvec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="84" column="19" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a048facb564d4478c59807275c78adc07" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalOrbit::energy</definition>
        <argsstring></argsstring>
        <name>energy</name>
        <qualifiedname>SphericalOrbit::energy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="55" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="55" bodyend="-1"/>
        <referencedby refid="class_spherical_orbit_1a18b10a692bf34008fd93352895fe0303" compoundref="orbit_8_h" startline="202" endline="202">Energy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a91f369c229705b4c08f2770885796407" prot="private" static="no" mutable="no">
        <type><ref refid="class_gauss_quad" kindref="compound">GaussQuad</ref></type>
        <definition>GaussQuad SphericalOrbit::Gkn</definition>
        <argsstring></argsstring>
        <name>Gkn</name>
        <qualifiedname>SphericalOrbit::Gkn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="86" column="13" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a9829f848d1f29edcb804198552ef9b32" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalOrbit::jmax</definition>
        <argsstring></argsstring>
        <name>jmax</name>
        <qualifiedname>SphericalOrbit::jmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="59" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="59" bodyend="-1"/>
        <referencedby refid="class_spherical_orbit_1a448149f2cf5ef12ff9771c3021022cfe" compoundref="orbit_8_h" startline="205" endline="209">AngMom</referencedby>
        <referencedby refid="class_spherical_orbit_1a56729c1aaf0a9f12f559a7f5058fa238" compoundref="orbit_8_h" startline="212" endline="216">Jmax</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a2042d55bdd18f72ec73e731c6308fde2" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalOrbit::kappa</definition>
        <argsstring></argsstring>
        <name>kappa</name>
        <qualifiedname>SphericalOrbit::kappa</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="56" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="56" bodyend="-1"/>
        <referencedby refid="class_spherical_orbit_1a448149f2cf5ef12ff9771c3021022cfe" compoundref="orbit_8_h" startline="205" endline="209">AngMom</referencedby>
        <referencedby refid="class_spherical_orbit_1a1429e6d175fe830d9be837c305f6bf83" compoundref="orbit_8_h" startline="219" endline="219">Kappa</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a0d8e941e8488e6926c2f9c979dba823b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SphericalOrbit::l</definition>
        <argsstring></argsstring>
        <name>l</name>
        <qualifiedname>SphericalOrbit::l</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="82" column="7" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="82" bodyend="-1"/>
        <referencedby refid="class_spherical_orbit_1a7b66fc5ad316212f4b869fbd8ab5837b" compoundref="orbit_8_h" startline="177" endline="180">set_biorth</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1aa9f4e01668d17d3bd2074e6f5a63bd78" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SphericalOrbit::l1s</definition>
        <argsstring></argsstring>
        <name>l1s</name>
        <qualifiedname>SphericalOrbit::l1s</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="83" column="7" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1ab7a7e6caeb9cc6067b5e970d06ee274e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SphericalOrbit::l2s</definition>
        <argsstring></argsstring>
        <name>l2s</name>
        <qualifiedname>SphericalOrbit::l2s</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="83" column="11" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a26c403b5b97d88adfbac1a4ebca2d454" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_axi_sym_model" kindref="compound">AxiSymModel</ref> &gt;</type>
        <definition>std::shared_ptr&lt;AxiSymModel&gt; SphericalOrbit::model</definition>
        <argsstring></argsstring>
        <name>model</name>
        <qualifiedname>SphericalOrbit::model</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="65" column="20" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="65" bodyend="-1"/>
        <referencedby refid="class_spherical_orbit_1a9596a836db3b865814d644b5fa8f2cc2" compoundref="orbit_8_h" startline="246" endline="246">modl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1aa38fbb17ffcbda5f74811be5f4683240" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SphericalOrbit::nbsct</definition>
        <argsstring></argsstring>
        <name>nbsct</name>
        <qualifiedname>SphericalOrbit::nbsct</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="80" column="7" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="80" bodyend="-1"/>
        <referencedby refid="class_spherical_orbit_1ab915dbb599a2163f3fa7d599b1019932" compoundref="orbit_8_h" startline="183" endline="184">set_numerical_params</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a9fd120d1821294d7d0295c613ff56f20" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SphericalOrbit::nmax</definition>
        <argsstring></argsstring>
        <name>nmax</name>
        <qualifiedname>SphericalOrbit::nmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="79" column="7" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="79" bodyend="-1"/>
        <referencedby refid="class_spherical_orbit_1a7b66fc5ad316212f4b869fbd8ab5837b" compoundref="orbit_8_h" startline="177" endline="180">set_biorth</referencedby>
        <referencedby refid="class_spherical_orbit_1ab915dbb599a2163f3fa7d599b1019932" compoundref="orbit_8_h" startline="183" endline="184">set_numerical_params</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a95c389a42552232fd13d84ef705286aa" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalOrbit::r_apo</definition>
        <argsstring></argsstring>
        <name>r_apo</name>
        <qualifiedname>SphericalOrbit::r_apo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="61" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="61" bodyend="-1"/>
        <referencedby refid="class_spherical_orbit_1a426e133cf3cc975c94d645a31ad2fff3" compoundref="orbit_8_h" startline="232" endline="236">apo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a7e892a5f4476fbef3725a50da9369fc7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalOrbit::r_circ</definition>
        <argsstring></argsstring>
        <name>r_circ</name>
        <qualifiedname>SphericalOrbit::r_circ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="62" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="62" bodyend="-1"/>
        <referencedby refid="class_spherical_orbit_1a4e4c91a9637446127df297eae76e0223" compoundref="orbit_8_h" startline="239" endline="243">circ</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a7a08299d1a534f4e1f9328e4724d5c5d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalOrbit::r_peri</definition>
        <argsstring></argsstring>
        <name>r_peri</name>
        <qualifiedname>SphericalOrbit::r_peri</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="60" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="60" bodyend="-1"/>
        <referencedby refid="class_spherical_orbit_1a7df6bd5832dd7945fc5e1973de218dfe" compoundref="orbit_8_h" startline="225" endline="229">peri</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1af48acd1046a742a5b866dce6a97cb591" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SphericalOrbit::recs</definition>
        <argsstring></argsstring>
        <name>recs</name>
        <qualifiedname>SphericalOrbit::recs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="78" column="7" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="78" bodyend="-1"/>
        <referencedby refid="class_spherical_orbit_1ab915dbb599a2163f3fa7d599b1019932" compoundref="orbit_8_h" startline="183" endline="184">set_numerical_params</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a3cd45894a025e1a8a7c957e711943049" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SphericalOrbit::RECUR</definition>
        <argsstring></argsstring>
        <name>RECUR</name>
        <qualifiedname>SphericalOrbit::RECUR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="67" column="7" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="67" bodyend="-1"/>
        <referencedby refid="class_spherical_orbit_1a7b66fc5ad316212f4b869fbd8ab5837b" compoundref="orbit_8_h" startline="177" endline="180">set_biorth</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a46ff0b102b9349756638f98a9d209670" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalOrbit::sm</definition>
        <argsstring></argsstring>
        <name>sm</name>
        <qualifiedname>SphericalOrbit::sm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="63" column="19" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a95caca99e2f52ca5dc316e1cb4df642c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalOrbit::sp</definition>
        <argsstring></argsstring>
        <name>sp</name>
        <qualifiedname>SphericalOrbit::sp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="63" column="16" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="63" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_spherical_orbit_1a977f3c24967e47f584dd5959ce048d90" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool SphericalOrbit::guard</definition>
        <argsstring></argsstring>
        <name>guard</name>
        <qualifiedname>SphericalOrbit::guard</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="107" column="15" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a5e4bac9630d0d61a4ec0dac09f718768" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int SphericalOrbit::Nseg</definition>
        <argsstring></argsstring>
        <name>Nseg</name>
        <qualifiedname>SphericalOrbit::Nseg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="93" column="17" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a9ea9164cb2807242f014890f57466e3c" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>double SphericalOrbit::RMAXF</definition>
        <argsstring></argsstring>
        <name>RMAXF</name>
        <qualifiedname>SphericalOrbit::RMAXF</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="95" column="17" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a47096441d5ff6429b78469f619ea5036" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>double SphericalOrbit::tol</definition>
        <argsstring></argsstring>
        <name>tol</name>
        <qualifiedname>SphericalOrbit::tol</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="98" column="17" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1aed7f09cfd1f6f37695343a92e9f424bb" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>double SphericalOrbit::tolnr</definition>
        <argsstring></argsstring>
        <name>tolnr</name>
        <qualifiedname>SphericalOrbit::tolnr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="103" column="17" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_orbit_1a8d919cb5f04ac23999708505c8f51df4" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>double SphericalOrbit::ZFRAC</definition>
        <argsstring></argsstring>
        <name>ZFRAC</name>
        <qualifiedname>SphericalOrbit::ZFRAC</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="100" column="17" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="100" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_spherical_orbit_1a74a30de9d79c264f974cfa31d591cc28" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalOrbit::compute_action</definition>
        <argsstring>(void)</argsstring>
        <name>compute_action</name>
        <qualifiedname>SphericalOrbit::compute_action</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="69" column="8" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="69" bodyend="69"/>
        <references refid="class_spherical_orbit_1aadf7adf96ca6fd54b8515ca0c2c11839">compute_freq</references>
        <referencedby refid="class_spherical_orbit_1a1d4224e324c4b8884ce49799c9c6398a" compoundref="orbit_8_h" startline="131" endline="138">get_action</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1ad709d79b2eaa947c15a401f374f292a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalOrbit::compute_angles</definition>
        <argsstring>(void)</argsstring>
        <name>compute_angles</name>
        <qualifiedname>SphericalOrbit::compute_angles</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="71" column="8"/>
        <referencedby refid="class_spherical_orbit_1a6bcdf37f55f92a208b16b22a39c6140b" compoundref="orbit_8_h" startline="191" endline="196">get_angle_grid</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a55720261f0c18c17d688471617901a81" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalOrbit::compute_angles_epi</definition>
        <argsstring>(void)</argsstring>
        <name>compute_angles_epi</name>
        <qualifiedname>SphericalOrbit::compute_angles_epi</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="74" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a7611bd9f22dd2158221c53cc806a8279" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalOrbit::compute_angles_old</definition>
        <argsstring>(void)</argsstring>
        <name>compute_angles_old</name>
        <qualifiedname>SphericalOrbit::compute_angles_old</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="72" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a6a082a6702127365171f9803dc19d295" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalOrbit::compute_biorth</definition>
        <argsstring>(void)</argsstring>
        <name>compute_biorth</name>
        <qualifiedname>SphericalOrbit::compute_biorth</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="75" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1aadf7adf96ca6fd54b8515ca0c2c11839" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalOrbit::compute_freq</definition>
        <argsstring>(void)</argsstring>
        <name>compute_freq</name>
        <qualifiedname>SphericalOrbit::compute_freq</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="70" column="8"/>
        <referencedby refid="class_spherical_orbit_1a448149f2cf5ef12ff9771c3021022cfe" compoundref="orbit_8_h" startline="205" endline="209">AngMom</referencedby>
        <referencedby refid="class_spherical_orbit_1a426e133cf3cc975c94d645a31ad2fff3" compoundref="orbit_8_h" startline="232" endline="236">apo</referencedby>
        <referencedby refid="class_spherical_orbit_1a4e4c91a9637446127df297eae76e0223" compoundref="orbit_8_h" startline="239" endline="243">circ</referencedby>
        <referencedby refid="class_spherical_orbit_1a74a30de9d79c264f974cfa31d591cc28" compoundref="orbit_8_h" startline="69" endline="69">compute_action</referencedby>
        <referencedby refid="class_spherical_orbit_1a6bcdf37f55f92a208b16b22a39c6140b" compoundref="orbit_8_h" startline="191" endline="196">get_angle_grid</referencedby>
        <referencedby refid="class_spherical_orbit_1a7045fa0c5a89883c41487ecb6730fa88" compoundref="orbit_8_h" startline="148" endline="155">get_freq</referencedby>
        <referencedby refid="class_spherical_orbit_1a56729c1aaf0a9f12f559a7f5058fa238" compoundref="orbit_8_h" startline="212" endline="216">Jmax</referencedby>
        <referencedby refid="class_spherical_orbit_1a7df6bd5832dd7945fc5e1973de218dfe" compoundref="orbit_8_h" startline="225" endline="229">peri</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a6eedd9c212bba758ad86528dd9a9ca89" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalOrbit::compute_freq_epi</definition>
        <argsstring>(void)</argsstring>
        <name>compute_freq_epi</name>
        <qualifiedname>SphericalOrbit::compute_freq_epi</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="73" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1aed738a433fd88f716a0d098889cad129" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; double, double, bool &gt;</type>
        <definition>std::tuple&lt; double, double, bool &gt; SphericalOrbit::search</definition>
        <argsstring>(std::function&lt; double(double)&gt; func, double rmin, double rmax)</argsstring>
        <name>search</name>
        <qualifiedname>SphericalOrbit::search</qualifiedname>
        <param>
          <type>std::function&lt; double(double)&gt;</type>
          <declname>func</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rmin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rmax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="88" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_spherical_orbit_1a448149f2cf5ef12ff9771c3021022cfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SphericalOrbit::AngMom</definition>
        <argsstring>(void)</argsstring>
        <name>AngMom</name>
        <qualifiedname>SphericalOrbit::AngMom</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>The value of the orbital angular momentum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="205" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="205" bodyend="209"/>
        <references refid="class_spherical_orbit_1aadf7adf96ca6fd54b8515ca0c2c11839">compute_freq</references>
        <references refid="class_regular_orbit_1a12752d92d9921d72faaecdb3fa78b7da" compoundref="orbit_8_h" startline="21">RegularOrbit::freq_defined</references>
        <references refid="class_spherical_orbit_1a9829f848d1f29edcb804198552ef9b32" compoundref="orbit_8_h" startline="59">jmax</references>
        <references refid="class_spherical_orbit_1a2042d55bdd18f72ec73e731c6308fde2" compoundref="orbit_8_h" startline="56">kappa</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a426e133cf3cc975c94d645a31ad2fff3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SphericalOrbit::apo</definition>
        <argsstring>(void)</argsstring>
        <name>apo</name>
        <qualifiedname>SphericalOrbit::apo</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Radius of the apocenter of this orbit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="232" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="232" bodyend="236"/>
        <references refid="class_spherical_orbit_1aadf7adf96ca6fd54b8515ca0c2c11839">compute_freq</references>
        <references refid="class_regular_orbit_1a12752d92d9921d72faaecdb3fa78b7da" compoundref="orbit_8_h" startline="21">RegularOrbit::freq_defined</references>
        <references refid="class_spherical_orbit_1a95c389a42552232fd13d84ef705286aa" compoundref="orbit_8_h" startline="61">r_apo</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a974b256df68772b882efba91c4e82e1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SphericalOrbit::Beta</definition>
        <argsstring>(void)</argsstring>
        <name>Beta</name>
        <qualifiedname>SphericalOrbit::Beta</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>The specified altitude of the orbital plane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="222" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="222" bodyend="222"/>
        <references refid="class_spherical_orbit_1aa913defb5be85150e1336f2477b153f4" compoundref="orbit_8_h" startline="57">beta</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a4e4c91a9637446127df297eae76e0223" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SphericalOrbit::circ</definition>
        <argsstring>(void)</argsstring>
        <name>circ</name>
        <qualifiedname>SphericalOrbit::circ</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Radius of the circular orbit with energy E. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="239" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="239" bodyend="243"/>
        <references refid="class_spherical_orbit_1aadf7adf96ca6fd54b8515ca0c2c11839">compute_freq</references>
        <references refid="class_regular_orbit_1a12752d92d9921d72faaecdb3fa78b7da" compoundref="orbit_8_h" startline="21">RegularOrbit::freq_defined</references>
        <references refid="class_spherical_orbit_1a7e892a5f4476fbef3725a50da9369fc7" compoundref="orbit_8_h" startline="62">r_circ</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a18b10a692bf34008fd93352895fe0303" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SphericalOrbit::Energy</definition>
        <argsstring>(void)</argsstring>
        <name>Energy</name>
        <qualifiedname>SphericalOrbit::Energy</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Safe access to internal quantities. </para>
        </briefdescription>
        <detaileddescription>
<para>The value of the orbital energy </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="202" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="202" bodyend="202"/>
        <references refid="class_spherical_orbit_1a048facb564d4478c59807275c78adc07" compoundref="orbit_8_h" startline="55">energy</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a1d4224e324c4b8884ce49799c9c6398a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double SphericalOrbit::get_action</definition>
        <argsstring>(const int i)</argsstring>
        <name>get_action</name>
        <qualifiedname>SphericalOrbit::get_action</qualifiedname>
        <reimplements refid="class_regular_orbit_1a2452e833ddea6e4536356a441d3f96f2">get_action</reimplements>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Required functions for accessing phase-space parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the action where: index 0 is radial action, I_r index 1 is angular action, J index 2 should be J_z/J, current set to zero </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="131" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="131" bodyend="138"/>
        <references refid="class_regular_orbit_1a36731e792d0e5f2d0ffbb92fcfdc9ea9" compoundref="orbit_8_h" startline="25">RegularOrbit::action</references>
        <references refid="class_regular_orbit_1a0cd178fd27367f0a937b13b12d35d501" compoundref="orbit_8_h" startline="20">RegularOrbit::action_defined</references>
        <references refid="class_regular_orbit_1aa563a76703ed65bacc1d91b3bb8d453f">RegularOrbit::bomb</references>
        <references refid="class_spherical_orbit_1a74a30de9d79c264f974cfa31d591cc28" compoundref="orbit_8_h" startline="69" endline="69">compute_action</references>
        <references refid="class_regular_orbit_1a6d582e67d7baeece1ffc2e75a8ccaaf3" compoundref="orbit_8_h" startline="16">RegularOrbit::dof</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a0912284cfc44a406823491c5e64d9b53" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double SphericalOrbit::get_angle</definition>
        <argsstring>(const int i, const double time)</argsstring>
        <name>get_angle</name>
        <qualifiedname>SphericalOrbit::get_angle</qualifiedname>
        <reimplements refid="class_regular_orbit_1a54adbdf914ec384fa91076183d57865c">get_angle</reimplements>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get angle dependent quantities for the orbit where the index signifies:</para>
<para>i val <hruler/>
 1 w1 2 w2 3 t 4 dw1dt 5 f 6 r 7 phi </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="170" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a6bcdf37f55f92a208b16b22a39c6140b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct <ref refid="struct_a_n_g_l_e___g_r_i_d" kindref="compound">ANGLE_GRID</ref> *</type>
        <definition>struct ANGLE_GRID * SphericalOrbit::get_angle_grid</definition>
        <argsstring>(void)</argsstring>
        <name>get_angle_grid</name>
        <qualifiedname>SphericalOrbit::get_angle_grid</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Access to underlying grid for pot_trans. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="191" column="20" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="191" bodyend="196"/>
        <references refid="class_regular_orbit_1a3b7e9af0e487571264d4e1ee515e8dc7" compoundref="orbit_8_h" startline="22">RegularOrbit::angle_defined</references>
        <references refid="class_spherical_orbit_1a24d27c2c0fd8f7c505967405e2024bc3" compoundref="orbit_8_h" startline="77">angle_grid</references>
        <references refid="class_spherical_orbit_1ad709d79b2eaa947c15a401f374f292a1">compute_angles</references>
        <references refid="class_spherical_orbit_1aadf7adf96ca6fd54b8515ca0c2c11839">compute_freq</references>
        <references refid="class_regular_orbit_1a12752d92d9921d72faaecdb3fa78b7da" compoundref="orbit_8_h" startline="21">RegularOrbit::freq_defined</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a7045fa0c5a89883c41487ecb6730fa88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double SphericalOrbit::get_freq</definition>
        <argsstring>(const int i)</argsstring>
        <name>get_freq</name>
        <qualifiedname>SphericalOrbit::get_freq</qualifiedname>
        <reimplements refid="class_regular_orbit_1a9a65442827224e08daf0d2b06e49cbcb">get_freq</reimplements>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the orbital frequency where: index 0 is radial frequency, I_r index 1 is angular frequency, J index 2 is frequency of line of nodes (zero for a spherical system) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="148" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="148" bodyend="155"/>
        <references refid="class_regular_orbit_1aa563a76703ed65bacc1d91b3bb8d453f">RegularOrbit::bomb</references>
        <references refid="class_spherical_orbit_1aadf7adf96ca6fd54b8515ca0c2c11839">compute_freq</references>
        <references refid="class_regular_orbit_1a6d582e67d7baeece1ffc2e75a8ccaaf3" compoundref="orbit_8_h" startline="16">RegularOrbit::dof</references>
        <references refid="class_regular_orbit_1aa2af630a8524ec47bc107215fc493aa9" compoundref="orbit_8_h" startline="25">RegularOrbit::freq</references>
        <references refid="class_regular_orbit_1a12752d92d9921d72faaecdb3fa78b7da" compoundref="orbit_8_h" startline="21">RegularOrbit::freq_defined</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a71a90f4040edee317a91cc5fde9b6520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SphericalOrbit::get_w1</definition>
        <argsstring>(double r, double vr)</argsstring>
        <name>get_w1</name>
        <qualifiedname>SphericalOrbit::get_w1</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vr</declname>
        </param>
        <briefdescription>
<para>Get radial angle for a given radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="141" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a56729c1aaf0a9f12f559a7f5058fa238" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SphericalOrbit::Jmax</definition>
        <argsstring>(void)</argsstring>
        <name>Jmax</name>
        <qualifiedname>SphericalOrbit::Jmax</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>The value of the current J_{max}(E) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="212" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="212" bodyend="216"/>
        <references refid="class_spherical_orbit_1aadf7adf96ca6fd54b8515ca0c2c11839">compute_freq</references>
        <references refid="class_regular_orbit_1a12752d92d9921d72faaecdb3fa78b7da" compoundref="orbit_8_h" startline="21">RegularOrbit::freq_defined</references>
        <references refid="class_spherical_orbit_1a9829f848d1f29edcb804198552ef9b32" compoundref="orbit_8_h" startline="59">jmax</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a1429e6d175fe830d9be837c305f6bf83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SphericalOrbit::Kappa</definition>
        <argsstring>(void)</argsstring>
        <name>Kappa</name>
        <qualifiedname>SphericalOrbit::Kappa</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>The value of the current J/J_{max}(E) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="219" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="219" bodyend="219"/>
        <references refid="class_spherical_orbit_1a2042d55bdd18f72ec73e731c6308fde2" compoundref="orbit_8_h" startline="56">kappa</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a9596a836db3b865814d644b5fa8f2cc2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_axi_sym_model" kindref="compound">AxiSymModel</ref> &amp;</type>
        <definition>AxiSymModel &amp; SphericalOrbit::modl</definition>
        <argsstring>(void)</argsstring>
        <name>modl</name>
        <qualifiedname>SphericalOrbit::modl</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the underlying axisymmetric model object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="246" column="15" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="246" bodyend="246"/>
        <references refid="class_spherical_orbit_1a26c403b5b97d88adfbac1a4ebca2d454" compoundref="orbit_8_h" startline="65">model</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a4b0a36c39baf45a551c57e485303a0d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalOrbit::new_orbit</definition>
        <argsstring>(double Energy, double kappa, double beta=0.0)</argsstring>
        <name>new_orbit</name>
        <qualifiedname>SphericalOrbit::new_orbit</qualifiedname>
        <param>
          <type>double</type>
          <declname>Energy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Set the energy and kappa for the orbit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="174" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1ae2322f082b81c2456011c2dcfe04258b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_spherical_orbit" kindref="compound">SphericalOrbit</ref> &amp;</type>
        <definition>SphericalOrbit &amp; SphericalOrbit::operator=</definition>
        <argsstring>(const SphericalOrbit &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>SphericalOrbit::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_spherical_orbit" kindref="compound">SphericalOrbit</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="121" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1abdd93142e78fd3e54c2bb3a15b330083" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_axi_sym_biorth" kindref="compound">AxiSymBiorth</ref> &amp;</type>
        <definition>AxiSymBiorth &amp; SphericalOrbit::orth</definition>
        <argsstring>(void)</argsstring>
        <name>orth</name>
        <qualifiedname>SphericalOrbit::orth</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the underlying biorthogonal function object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="249" column="16" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="249" bodyend="249"/>
        <references refid="class_spherical_orbit_1aac77ad858f708436e2e55c6f0f3afc72" compoundref="orbit_8_h" startline="66">biorth</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a7df6bd5832dd7945fc5e1973de218dfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SphericalOrbit::peri</definition>
        <argsstring>(void)</argsstring>
        <name>peri</name>
        <qualifiedname>SphericalOrbit::peri</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Radius of the pericenter of this orbit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="225" column="10" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="225" bodyend="229"/>
        <references refid="class_spherical_orbit_1aadf7adf96ca6fd54b8515ca0c2c11839">compute_freq</references>
        <references refid="class_regular_orbit_1a12752d92d9921d72faaecdb3fa78b7da" compoundref="orbit_8_h" startline="21">RegularOrbit::freq_defined</references>
        <references refid="class_spherical_orbit_1a7a08299d1a534f4e1f9328e4724d5c5d" compoundref="orbit_8_h" startline="60">r_peri</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a738751098aa6d2245d58cdb1bd5a93ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalOrbit::pot_trans</definition>
        <argsstring>(int l1, int l2, Eigen::VectorXd &amp;t)</argsstring>
        <name>pot_trans</name>
        <qualifiedname>SphericalOrbit::pot_trans</qualifiedname>
        <param>
          <type>int</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="188" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a295374e8f807a373d2cc8cc285036518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SphericalOrbit::pot_trans</definition>
        <argsstring>(int l1, int l2, int n)</argsstring>
        <name>pot_trans</name>
        <qualifiedname>SphericalOrbit::pot_trans</qualifiedname>
        <param>
          <type>int</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="187" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1aaa0c762462f069f9452ce0889d919767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SphericalOrbit::pot_trans</definition>
        <argsstring>(int l1, int l2, std::function&lt; double(double)&gt; func)</argsstring>
        <name>pot_trans</name>
        <qualifiedname>SphericalOrbit::pot_trans</qualifiedname>
        <param>
          <type>int</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>std::function&lt; double(double)&gt;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="186" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a7b66fc5ad316212f4b869fbd8ab5837b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalOrbit::set_biorth</definition>
        <argsstring>(std::shared_ptr&lt; AxiSymBiorth &gt; type, int ll, int max, int recur=0)</argsstring>
        <name>set_biorth</name>
        <qualifiedname>SphericalOrbit::set_biorth</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_axi_sym_biorth" kindref="compound">AxiSymBiorth</ref> &gt;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ll</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <param>
          <type>int</type>
          <declname>recur</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Set the biorthogonal ffunction type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="177" column="8" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="177" bodyend="180"/>
        <references refid="class_spherical_orbit_1aac77ad858f708436e2e55c6f0f3afc72" compoundref="orbit_8_h" startline="66">biorth</references>
        <references refid="class_regular_orbit_1ac082d931f0738f9376037c63b462c7a9" compoundref="orbit_8_h" startline="23">RegularOrbit::biorth_defined</references>
        <references refid="class_spherical_orbit_1a0d8e941e8488e6926c2f9c979dba823b" compoundref="orbit_8_h" startline="82">l</references>
        <references refid="class_spherical_orbit_1a9fd120d1821294d7d0295c613ff56f20" compoundref="orbit_8_h" startline="79">nmax</references>
        <references refid="class_spherical_orbit_1a3cd45894a025e1a8a7c957e711943049" compoundref="orbit_8_h" startline="67">RECUR</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1ab915dbb599a2163f3fa7d599b1019932" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalOrbit::set_numerical_params</definition>
        <argsstring>(int RECS=64, int NMAX=40, int NBSCT=3)</argsstring>
        <name>set_numerical_params</name>
        <qualifiedname>SphericalOrbit::set_numerical_params</qualifiedname>
        <param>
          <type>int</type>
          <declname>RECS</declname>
          <defval>64</defval>
        </param>
        <param>
          <type>int</type>
          <declname>NMAX</declname>
          <defval>40</defval>
        </param>
        <param>
          <type>int</type>
          <declname>NBSCT</declname>
          <defval>3</defval>
        </param>
        <briefdescription>
<para>Set the numerical parameters for angle transform computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="183" column="8" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="183" bodyend="184"/>
        <references refid="class_spherical_orbit_1aa38fbb17ffcbda5f74811be5f4683240" compoundref="orbit_8_h" startline="80">nbsct</references>
        <references refid="class_spherical_orbit_1a9fd120d1821294d7d0295c613ff56f20" compoundref="orbit_8_h" startline="79">nmax</references>
        <references refid="class_spherical_orbit_1af48acd1046a742a5b866dce6a97cb591" compoundref="orbit_8_h" startline="78">recs</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a2c2d7a39bf5e71bae2871521b952df16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SphericalOrbit::SphericalOrbit</definition>
        <argsstring>(const SphericalOrbit &amp;)</argsstring>
        <name>SphericalOrbit</name>
        <qualifiedname>SphericalOrbit::SphericalOrbit</qualifiedname>
        <param>
          <type>const <ref refid="class_spherical_orbit" kindref="compound">SphericalOrbit</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="120" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a45da5ecee2f38fabe8722ecc3f23fe31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SphericalOrbit::SphericalOrbit</definition>
        <argsstring>(std::shared_ptr&lt; AxiSymModel &gt; model)</argsstring>
        <name>SphericalOrbit</name>
        <qualifiedname>SphericalOrbit::SphericalOrbit</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_axi_sym_model" kindref="compound">AxiSymModel</ref> &gt;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="114" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a85d2fe4f312bd92e03adbb961a5bf94a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SphericalOrbit::SphericalOrbit</definition>
        <argsstring>(std::shared_ptr&lt; AxiSymModel &gt; model, double Energy, double kappa, double beta=0.0)</argsstring>
        <name>SphericalOrbit</name>
        <qualifiedname>SphericalOrbit::SphericalOrbit</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_axi_sym_model" kindref="compound">AxiSymModel</ref> &gt;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Energy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="115" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1aa92813d0179717d144afe5ad36e89ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SphericalOrbit::SphericalOrbit</definition>
        <argsstring>(void)</argsstring>
        <name>SphericalOrbit</name>
        <qualifiedname>SphericalOrbit::SphericalOrbit</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="113" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_orbit_1a485e7d252e6d211db1f7caeb1a6e39d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SphericalOrbit::~SphericalOrbit</definition>
        <argsstring>()</argsstring>
        <name>~SphericalOrbit</name>
        <qualifiedname>SphericalOrbit::~SphericalOrbit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="118" column="11" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="118" bodyend="118"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>RegularOrbit</label>
        <link refid="class_regular_orbit"/>
      </node>
      <node id="1">
        <label>SphericalOrbit</label>
        <link refid="class_spherical_orbit"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>ANGLE_GRID</label>
        <link refid="struct_a_n_g_l_e___g_r_i_d"/>
      </node>
      <node id="4">
        <label>GaussQuad</label>
        <link refid="class_gauss_quad"/>
      </node>
      <node id="2">
        <label>RegularOrbit</label>
        <link refid="class_regular_orbit"/>
      </node>
      <node id="1">
        <label>SphericalOrbit</label>
        <link refid="class_spherical_orbit"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>angle_grid</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>Gkn</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/include/orbit.H" line="51" column="1" bodyfile="/home/weinberg/Projects/EXP/include/orbit.H" bodystart="52" bodyend="253"/>
    <listofallmembers>
      <member refid="class_regular_orbit_1a36731e792d0e5f2d0ffbb92fcfdc9ea9" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>action</name></member>
      <member refid="class_regular_orbit_1a0cd178fd27367f0a937b13b12d35d501" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>action_defined</name></member>
      <member refid="class_spherical_orbit_1a9c8d85b92b505ce05abb9f3138247cc7" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>am</name></member>
      <member refid="class_regular_orbit_1a3b7e9af0e487571264d4e1ee515e8dc7" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>angle_defined</name></member>
      <member refid="class_spherical_orbit_1a24d27c2c0fd8f7c505967405e2024bc3" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>angle_grid</name></member>
      <member refid="class_spherical_orbit_1a448149f2cf5ef12ff9771c3021022cfe" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>AngMom</name></member>
      <member refid="class_spherical_orbit_1af39c49b836eeb1ce0614f7ea6e8b211a" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>ap</name></member>
      <member refid="class_spherical_orbit_1a426e133cf3cc975c94d645a31ad2fff3" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>apo</name></member>
      <member refid="class_spherical_orbit_1aa913defb5be85150e1336f2477b153f4" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>beta</name></member>
      <member refid="class_spherical_orbit_1a974b256df68772b882efba91c4e82e1d" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>Beta</name></member>
      <member refid="class_spherical_orbit_1aac77ad858f708436e2e55c6f0f3afc72" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>biorth</name></member>
      <member refid="class_regular_orbit_1ac082d931f0738f9376037c63b462c7a9" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>biorth_defined</name></member>
      <member refid="class_regular_orbit_1aa563a76703ed65bacc1d91b3bb8d453f" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>bomb</name></member>
      <member refid="class_regular_orbit_1a9b2807823337bac92607b15103486631" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>bomb</name></member>
      <member refid="class_spherical_orbit_1a4e4c91a9637446127df297eae76e0223" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>circ</name></member>
      <member refid="class_spherical_orbit_1a74a30de9d79c264f974cfa31d591cc28" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>compute_action</name></member>
      <member refid="class_spherical_orbit_1ad709d79b2eaa947c15a401f374f292a1" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>compute_angles</name></member>
      <member refid="class_spherical_orbit_1a55720261f0c18c17d688471617901a81" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>compute_angles_epi</name></member>
      <member refid="class_spherical_orbit_1a7611bd9f22dd2158221c53cc806a8279" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>compute_angles_old</name></member>
      <member refid="class_spherical_orbit_1a6a082a6702127365171f9803dc19d295" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>compute_biorth</name></member>
      <member refid="class_spherical_orbit_1aadf7adf96ca6fd54b8515ca0c2c11839" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>compute_freq</name></member>
      <member refid="class_spherical_orbit_1a6eedd9c212bba758ad86528dd9a9ca89" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>compute_freq_epi</name></member>
      <member refid="class_spherical_orbit_1a888c8723e845c0fd350e5139ba85c5dc" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>cosvec</name></member>
      <member refid="class_regular_orbit_1a6d582e67d7baeece1ffc2e75a8ccaaf3" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>dof</name></member>
      <member refid="class_spherical_orbit_1a048facb564d4478c59807275c78adc07" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>energy</name></member>
      <member refid="class_spherical_orbit_1a18b10a692bf34008fd93352895fe0303" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>Energy</name></member>
      <member refid="class_regular_orbit_1aa2af630a8524ec47bc107215fc493aa9" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>freq</name></member>
      <member refid="class_regular_orbit_1a12752d92d9921d72faaecdb3fa78b7da" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>freq_defined</name></member>
      <member refid="class_spherical_orbit_1a1d4224e324c4b8884ce49799c9c6398a" prot="public" virt="virtual"><scope>SphericalOrbit</scope><name>get_action</name></member>
      <member refid="class_spherical_orbit_1a0912284cfc44a406823491c5e64d9b53" prot="public" virt="virtual"><scope>SphericalOrbit</scope><name>get_angle</name></member>
      <member refid="class_spherical_orbit_1a6bcdf37f55f92a208b16b22a39c6140b" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>get_angle_grid</name></member>
      <member refid="class_spherical_orbit_1a7045fa0c5a89883c41487ecb6730fa88" prot="public" virt="virtual"><scope>SphericalOrbit</scope><name>get_freq</name></member>
      <member refid="class_spherical_orbit_1a71a90f4040edee317a91cc5fde9b6520" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>get_w1</name></member>
      <member refid="class_spherical_orbit_1a91f369c229705b4c08f2770885796407" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>Gkn</name></member>
      <member refid="class_spherical_orbit_1a977f3c24967e47f584dd5959ce048d90" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>guard</name></member>
      <member refid="class_spherical_orbit_1a56729c1aaf0a9f12f559a7f5058fa238" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>Jmax</name></member>
      <member refid="class_spherical_orbit_1a9829f848d1f29edcb804198552ef9b32" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>jmax</name></member>
      <member refid="class_spherical_orbit_1a1429e6d175fe830d9be837c305f6bf83" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>Kappa</name></member>
      <member refid="class_spherical_orbit_1a2042d55bdd18f72ec73e731c6308fde2" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>kappa</name></member>
      <member refid="class_spherical_orbit_1a0d8e941e8488e6926c2f9c979dba823b" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>l</name></member>
      <member refid="class_spherical_orbit_1aa9f4e01668d17d3bd2074e6f5a63bd78" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>l1s</name></member>
      <member refid="class_spherical_orbit_1ab7a7e6caeb9cc6067b5e970d06ee274e" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>l2s</name></member>
      <member refid="class_spherical_orbit_1a26c403b5b97d88adfbac1a4ebca2d454" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>model</name></member>
      <member refid="class_regular_orbit_1ad09e56aa5ed439ccffd9aeb6e47ab658" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>model_defined</name></member>
      <member refid="class_spherical_orbit_1a9596a836db3b865814d644b5fa8f2cc2" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>modl</name></member>
      <member refid="class_spherical_orbit_1aa38fbb17ffcbda5f74811be5f4683240" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>nbsct</name></member>
      <member refid="class_spherical_orbit_1a4b0a36c39baf45a551c57e485303a0d9" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>new_orbit</name></member>
      <member refid="class_spherical_orbit_1a9fd120d1821294d7d0295c613ff56f20" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>nmax</name></member>
      <member refid="class_spherical_orbit_1a5e4bac9630d0d61a4ec0dac09f718768" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>Nseg</name></member>
      <member refid="class_spherical_orbit_1ae2322f082b81c2456011c2dcfe04258b" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>operator=</name></member>
      <member refid="class_regular_orbit_1a760c90fee34d09e367986807378ada81" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>OrbitID</name></member>
      <member refid="class_spherical_orbit_1abdd93142e78fd3e54c2bb3a15b330083" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>orth</name></member>
      <member refid="class_spherical_orbit_1a7df6bd5832dd7945fc5e1973de218dfe" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>peri</name></member>
      <member refid="class_spherical_orbit_1aaa0c762462f069f9452ce0889d919767" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>pot_trans</name></member>
      <member refid="class_spherical_orbit_1a295374e8f807a373d2cc8cc285036518" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>pot_trans</name></member>
      <member refid="class_spherical_orbit_1a738751098aa6d2245d58cdb1bd5a93ca" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>pot_trans</name></member>
      <member refid="class_spherical_orbit_1a95c389a42552232fd13d84ef705286aa" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>r_apo</name></member>
      <member refid="class_spherical_orbit_1a7e892a5f4476fbef3725a50da9369fc7" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>r_circ</name></member>
      <member refid="class_spherical_orbit_1a7a08299d1a534f4e1f9328e4724d5c5d" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>r_peri</name></member>
      <member refid="class_spherical_orbit_1af48acd1046a742a5b866dce6a97cb591" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>recs</name></member>
      <member refid="class_spherical_orbit_1a3cd45894a025e1a8a7c957e711943049" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>RECUR</name></member>
      <member refid="class_spherical_orbit_1a9ea9164cb2807242f014890f57466e3c" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>RMAXF</name></member>
      <member refid="class_spherical_orbit_1aed738a433fd88f716a0d098889cad129" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>search</name></member>
      <member refid="class_spherical_orbit_1a7b66fc5ad316212f4b869fbd8ab5837b" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>set_biorth</name></member>
      <member refid="class_spherical_orbit_1ab915dbb599a2163f3fa7d599b1019932" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>set_numerical_params</name></member>
      <member refid="class_spherical_orbit_1a46ff0b102b9349756638f98a9d209670" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>sm</name></member>
      <member refid="class_spherical_orbit_1a95caca99e2f52ca5dc316e1cb4df642c" prot="private" virt="non-virtual"><scope>SphericalOrbit</scope><name>sp</name></member>
      <member refid="class_spherical_orbit_1aa92813d0179717d144afe5ad36e89ba6" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>SphericalOrbit</name></member>
      <member refid="class_spherical_orbit_1a45da5ecee2f38fabe8722ecc3f23fe31" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>SphericalOrbit</name></member>
      <member refid="class_spherical_orbit_1a85d2fe4f312bd92e03adbb961a5bf94a" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>SphericalOrbit</name></member>
      <member refid="class_spherical_orbit_1a2c2d7a39bf5e71bae2871521b952df16" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>SphericalOrbit</name></member>
      <member refid="class_spherical_orbit_1a47096441d5ff6429b78469f619ea5036" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>tol</name></member>
      <member refid="class_spherical_orbit_1aed7f09cfd1f6f37695343a92e9f424bb" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>tolnr</name></member>
      <member refid="class_regular_orbit_1a30d745503e523915a2e3375dac289ea2" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>warn</name></member>
      <member refid="class_spherical_orbit_1a8d919cb5f04ac23999708505c8f51df4" prot="public" virt="non-virtual"><scope>SphericalOrbit</scope><name>ZFRAC</name></member>
      <member refid="class_regular_orbit_1ad8ba95ec71344964d1be3fc3b1fd9e78" prot="public" virt="virtual"><scope>SphericalOrbit</scope><name>~RegularOrbit</name></member>
      <member refid="class_spherical_orbit_1a485e7d252e6d211db1f7caeb1a6e39d3" prot="public" virt="virtual"><scope>SphericalOrbit</scope><name>~SphericalOrbit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
