<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_spline2d" kind="class" language="C++" prot="public">
    <compoundname>Spline2d</compoundname>
    <includes refid="interp_8_h" local="no">interp.H</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_spline2d_1a48b7922ccc4d083973623e9b2e61f52a" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Spline2d::mat</definition>
        <argsstring></argsstring>
        <name>mat</name>
        <qualifiedname>Spline2d::mat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="238" column="19" bodyfile="/home/weinberg/Projects/EXP/include/interp.H" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spline2d_1a4e1b8149d5e60971f0b768e181ba895e" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Spline2d::mat2d</definition>
        <argsstring></argsstring>
        <name>mat2d</name>
        <qualifiedname>Spline2d::mat2d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="238" column="23" bodyfile="/home/weinberg/Projects/EXP/include/interp.H" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spline2d_1ae5df0a5125042539f8cc8fc47c3b16b1" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Spline2d::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>Spline2d::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="236" column="19" bodyfile="/home/weinberg/Projects/EXP/include/interp.H" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spline2d_1a9c4fda88d69dde6ffa08cdf90ede1559" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Spline2d::xval</definition>
        <argsstring></argsstring>
        <name>xval</name>
        <qualifiedname>Spline2d::xval</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="237" column="19" bodyfile="/home/weinberg/Projects/EXP/include/interp.H" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spline2d_1a730b3dbc228062600ce8e93620469b12" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Spline2d::xval2</definition>
        <argsstring></argsstring>
        <name>xval2</name>
        <qualifiedname>Spline2d::xval2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="237" column="24" bodyfile="/home/weinberg/Projects/EXP/include/interp.H" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spline2d_1ab8835dc9776d6b70f81c01586d0977e3" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Spline2d::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <qualifiedname>Spline2d::y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="236" column="21" bodyfile="/home/weinberg/Projects/EXP/include/interp.H" bodystart="236" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_spline2d_1af3fdd6acc906f15c5c4fa97a8ef2151c" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>double Spline2d::DERIV</definition>
        <argsstring></argsstring>
        <name>DERIV</name>
        <qualifiedname>Spline2d::DERIV</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="241" column="17" bodyfile="/home/weinberg/Projects/EXP/include/interp.H" bodystart="241" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_spline2d_1aec060180e210ed4693bfea1ef60ca1fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Spline2d::eval</definition>
        <argsstring>(const double &amp;x, const double &amp;y)</argsstring>
        <name>eval</name>
        <qualifiedname>Spline2d::eval</qualifiedname>
        <param>
          <type>const double &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Evaluate the interpolant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="253" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_spline2d_1af17579c6e93108587c38e4052c391826" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_spline2d" kindref="compound">Spline2d</ref> &amp;</type>
        <definition>Spline2d &amp; Spline2d::operator=</definition>
        <argsstring>(const Spline2d &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>Spline2d::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_spline2d" kindref="compound">Spline2d</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="250" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_spline2d_1ad71fc44e362470889d2bf06907637b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Spline2d::Spline2d</definition>
        <argsstring>(const Eigen::VectorXd &amp;x, const Eigen::VectorXd &amp;y, const Eigen::MatrixXd &amp;mat)</argsstring>
        <name>Spline2d</name>
        <qualifiedname>Spline2d::Spline2d</qualifiedname>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const Eigen::MatrixXd &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
<para>Construct from Eigen input. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="247" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_spline2d_1a94381849277938c84639add7d46982f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Spline2d::Spline2d</definition>
        <argsstring>(void)</argsstring>
        <name>Spline2d</name>
        <qualifiedname>Spline2d::Spline2d</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Null constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/interp.H" line="244" column="3"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Two dimensional spline interpolator. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/weinberg/Projects/EXP/include/interp.H" line="232" column="1" bodyfile="/home/weinberg/Projects/EXP/include/interp.H" bodystart="233" bodyend="254"/>
    <listofallmembers>
      <member refid="class_spline2d_1af3fdd6acc906f15c5c4fa97a8ef2151c" prot="public" virt="non-virtual"><scope>Spline2d</scope><name>DERIV</name></member>
      <member refid="class_spline2d_1aec060180e210ed4693bfea1ef60ca1fc" prot="public" virt="non-virtual"><scope>Spline2d</scope><name>eval</name></member>
      <member refid="class_spline2d_1a48b7922ccc4d083973623e9b2e61f52a" prot="private" virt="non-virtual"><scope>Spline2d</scope><name>mat</name></member>
      <member refid="class_spline2d_1a4e1b8149d5e60971f0b768e181ba895e" prot="private" virt="non-virtual"><scope>Spline2d</scope><name>mat2d</name></member>
      <member refid="class_spline2d_1af17579c6e93108587c38e4052c391826" prot="public" virt="non-virtual"><scope>Spline2d</scope><name>operator=</name></member>
      <member refid="class_spline2d_1a94381849277938c84639add7d46982f3" prot="public" virt="non-virtual"><scope>Spline2d</scope><name>Spline2d</name></member>
      <member refid="class_spline2d_1ad71fc44e362470889d2bf06907637b0e" prot="public" virt="non-virtual"><scope>Spline2d</scope><name>Spline2d</name></member>
      <member refid="class_spline2d_1ae5df0a5125042539f8cc8fc47c3b16b1" prot="private" virt="non-virtual"><scope>Spline2d</scope><name>x</name></member>
      <member refid="class_spline2d_1a9c4fda88d69dde6ffa08cdf90ede1559" prot="private" virt="non-virtual"><scope>Spline2d</scope><name>xval</name></member>
      <member refid="class_spline2d_1a730b3dbc228062600ce8e93620469b12" prot="private" virt="non-virtual"><scope>Spline2d</scope><name>xval2</name></member>
      <member refid="class_spline2d_1ab8835dc9776d6b70f81c01586d0977e3" prot="private" virt="non-virtual"><scope>Spline2d</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
