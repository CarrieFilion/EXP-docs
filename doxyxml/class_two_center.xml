<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_two_center" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>TwoCenter</compoundname>
    <basecompoundref refid="class_pot_accel" prot="public" virt="non-virtual">PotAccel</basecompoundref>
    <derivedcompoundref refid="class_e_jcom" prot="public" virt="non-virtual">EJcom</derivedcompoundref>
    <includes refid="_two_center_8_h" local="no">TwoCenter.H</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_two_center_1a4697b2679e1325a3cfc78ab80b094784" prot="public" static="no">
        <type>double(TwoCenter::*</type>
        <definition>typedef double(TwoCenter::* TwoCenter::mixFunc) (double *p)</definition>
        <argsstring>)(double *p)</argsstring>
        <name>mixFunc</name>
        <qualifiedname>TwoCenter::mixFunc</qualifiedname>
        <briefdescription>
<para>The mixture function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="87" column="11" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="87" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_two_center_1a0246092f794de8555a99d3b0ebe86abf" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string TwoCenter::basis</definition>
        <argsstring></argsstring>
        <name>basis</name>
        <qualifiedname>TwoCenter::basis</qualifiedname>
        <briefdescription>
<para>The name of the basis (for reflection) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="45" column="10" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_two_center_1a8cce6cd013f0a4838d6a95c926dc36d6" prot="private" static="no" mutable="no">
        <type><ref refid="class_basis" kindref="compound">Basis</ref> *</type>
        <definition>Basis* TwoCenter::exp_in</definition>
        <argsstring></argsstring>
        <name>exp_in</name>
        <qualifiedname>TwoCenter::exp_in</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="40" column="10" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="40" bodyend="-1"/>
        <referencedby refid="class_two_center_1ac29938dc6a1d4c9af4f9166b9b04d249" compoundref="_two_center_8_h" startline="165" endline="169">multistep_debug</referencedby>
        <referencedby refid="class_two_center_1ac3c9e0ae37c6e7aaab40e7cac2475a26" compoundref="_two_center_8_h" startline="159" endline="163">multistep_reset</referencedby>
        <referencedby refid="class_two_center_1a9840bdb9f5c27ce8f2d7d57013dd0b0a" compoundref="_two_center_8_h" startline="147" endline="151">multistep_update</referencedby>
        <referencedby refid="class_two_center_1a5d42adc520d7f5a7353ddd893990b5cd" compoundref="_two_center_8_h" startline="141" endline="145">multistep_update_begin</referencedby>
        <referencedby refid="class_two_center_1ae6080a5f19f8c92a75579a2d90776bd7" compoundref="_two_center_8_h" startline="153" endline="157">multistep_update_finish</referencedby>
        <referencedby refid="class_two_center_1a7ce7e41b10ddda4a7fc67b72d901f0e7" compoundref="_two_center_8_h" startline="126" endline="130">RegisterComponent</referencedby>
        <referencedby refid="class_two_center_1afc027c542932d0fb5c23365730c7a225" compoundref="_two_center_8_h" startline="134" endline="139">set_multistep_level</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_two_center_1a5fdd1cccfed67156eb646eca45cf1121" prot="private" static="no" mutable="no">
        <type><ref refid="class_basis" kindref="compound">Basis</ref> *</type>
        <definition>Basis* TwoCenter::exp_out</definition>
        <argsstring></argsstring>
        <name>exp_out</name>
        <qualifiedname>TwoCenter::exp_out</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="41" column="10" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="41" bodyend="-1"/>
        <referencedby refid="class_two_center_1ac29938dc6a1d4c9af4f9166b9b04d249" compoundref="_two_center_8_h" startline="165" endline="169">multistep_debug</referencedby>
        <referencedby refid="class_two_center_1ac3c9e0ae37c6e7aaab40e7cac2475a26" compoundref="_two_center_8_h" startline="159" endline="163">multistep_reset</referencedby>
        <referencedby refid="class_two_center_1a9840bdb9f5c27ce8f2d7d57013dd0b0a" compoundref="_two_center_8_h" startline="147" endline="151">multistep_update</referencedby>
        <referencedby refid="class_two_center_1a5d42adc520d7f5a7353ddd893990b5cd" compoundref="_two_center_8_h" startline="141" endline="145">multistep_update_begin</referencedby>
        <referencedby refid="class_two_center_1ae6080a5f19f8c92a75579a2d90776bd7" compoundref="_two_center_8_h" startline="153" endline="157">multistep_update_finish</referencedby>
        <referencedby refid="class_two_center_1a7ce7e41b10ddda4a7fc67b72d901f0e7" compoundref="_two_center_8_h" startline="126" endline="130">RegisterComponent</referencedby>
        <referencedby refid="class_two_center_1afc027c542932d0fb5c23365730c7a225" compoundref="_two_center_8_h" startline="134" endline="139">set_multistep_level</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_two_center_1a10f394df29c02b21b123e01ee53e0b0a" prot="private" static="no" mutable="no">
        <type><ref refid="class_mixture_basis" kindref="compound">MixtureBasis</ref> *</type>
        <definition>MixtureBasis* TwoCenter::mix_in</definition>
        <argsstring></argsstring>
        <name>mix_in</name>
        <qualifiedname>TwoCenter::mix_in</qualifiedname>
        <briefdescription>
<para>Mixture containers for each basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="52" column="16" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_two_center_1a0f7c7e792ef402191d8b56b1cc92e31e" prot="private" static="no" mutable="no">
        <type><ref refid="class_mixture_basis" kindref="compound">MixtureBasis</ref> *</type>
        <definition>MixtureBasis * TwoCenter::mix_out</definition>
        <argsstring></argsstring>
        <name>mix_out</name>
        <qualifiedname>TwoCenter::mix_out</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="52" column="23" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_two_center_1a6c25023bca66055cc078ea5e50810fcc" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double TwoCenter::dz</definition>
        <argsstring></argsstring>
        <name>dz</name>
        <qualifiedname>TwoCenter::dz</qualifiedname>
        <briefdescription>
<para>The bin spacing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="72" column="10" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_two_center_1a5156955100153118062a2d6514bcbd8b" prot="protected" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; TwoCenter::histo</definition>
        <argsstring></argsstring>
        <name>histo</name>
        <qualifiedname>TwoCenter::histo</qualifiedname>
        <briefdescription>
<para>The histogram bins. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="78" column="10" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_two_center_1a46bae62ea97bb409c834ada4bee74c2d" prot="protected" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned TwoCenter::nhisto</definition>
        <argsstring></argsstring>
        <name>nhisto</name>
        <qualifiedname>TwoCenter::nhisto</qualifiedname>
        <briefdescription>
<para>Number of bins. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="76" column="12" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_two_center_1a415058d5041e067546153881c656498c" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string TwoCenter::ohisto</definition>
        <argsstring></argsstring>
        <name>ohisto</name>
        <qualifiedname>TwoCenter::ohisto</qualifiedname>
        <briefdescription>
<para>Name for the histogram file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="74" column="10" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="74" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_two_center_1a9bc5d628dcce5dec49c80af10922c355" prot="protected" static="yes" mutable="no">
        <type>const std::set&lt; std::string &gt;</type>
        <definition>const std::set&lt;std::string&gt; TwoCenter::valid_keys</definition>
        <argsstring></argsstring>
        <name>valid_keys</name>
        <qualifiedname>TwoCenter::valid_keys</qualifiedname>
        <briefdescription>
<para>Valid keys for YAML configurations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="81" column="25" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="81" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_two_center_1aa41bff5fbe63094da26924f14b5f17f9" prot="public" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; TwoCenter::inner</definition>
        <argsstring></argsstring>
        <name>inner</name>
        <qualifiedname>TwoCenter::inner</qualifiedname>
        <briefdescription>
<para>INNER center for current component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="91" column="10" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_two_center_1a1c91ff546636819d2427429ae8434e2d" prot="public" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; TwoCenter::outer</definition>
        <argsstring></argsstring>
        <name>outer</name>
        <qualifiedname>TwoCenter::outer</qualifiedname>
        <briefdescription>
<para>OUTER center for current component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="94" column="10" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="94" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_two_center_1afab216f509fdd00edf7093864b7a602c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void *</type>
        <definition>void * TwoCenter::determine_acceleration_and_potential_thread</definition>
        <argsstring>(void *arg)</argsstring>
        <name>determine_acceleration_and_potential_thread</name>
        <qualifiedname>TwoCenter::determine_acceleration_and_potential_thread</qualifiedname>
        <reimplements refid="class_pot_accel_1a45b09387fd7083e15a11522454f4c4b3">determine_acceleration_and_potential_thread</reimplements>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Multithreading implementation of the force computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="58" column="9" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1ad08f6706e74ee6a1ce58e549bd0e9afd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void *</type>
        <definition>void * TwoCenter::determine_coefficients_thread</definition>
        <argsstring>(void *arg)</argsstring>
        <name>determine_coefficients_thread</name>
        <qualifiedname>TwoCenter::determine_coefficients_thread</qualifiedname>
        <reimplements refid="class_pot_accel_1a28536cd936e5c94562d5bccff2470d49">determine_coefficients_thread</reimplements>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>The required force members, but this class does not multithread directly. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="57" column="9" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1acd8e8d4c102a148dfca2d0e57355aa9f" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void TwoCenter::initialize</definition>
        <argsstring>(void)</argsstring>
        <name>initialize</name>
        <qualifiedname>TwoCenter::initialize</qualifiedname>
        <reimplements refid="class_pot_accel_1ada60d03bc82b8740fc7275d4c3f2149d">initialize</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Force initialization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="48" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1a9a34eaaf60d08861b57bd04f9c9d7f07" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwoCenter::reset_histo</definition>
        <argsstring>()</argsstring>
        <name>reset_histo</name>
        <qualifiedname>TwoCenter::reset_histo</qualifiedname>
        <briefdescription>
<para>Zero out the histogram bins. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="62" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1a0789fd9481fb5fd2763a66d81d42bb8e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwoCenter::write_histo</definition>
        <argsstring>()</argsstring>
        <name>write_histo</name>
        <qualifiedname>TwoCenter::write_histo</qualifiedname>
        <briefdescription>
<para>Write the current histogram to the log file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="65" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_two_center_1a6351d92967a24357a5b6650947e7bf90" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwoCenter::accum_histo</definition>
        <argsstring>(double value)</argsstring>
        <name>accum_histo</name>
        <qualifiedname>TwoCenter::accum_histo</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Make a histogram for debugging the mixture factor distribution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="70" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_two_center_1af6341c0c9211c12fc6980c2bee31f077" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double TwoCenter::Cmixture</definition>
        <argsstring>(double *p)</argsstring>
        <name>Cmixture</name>
        <qualifiedname>TwoCenter::Cmixture</qualifiedname>
        <param>
          <type>double *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>The complement of the mixture function, also in [0,1]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="122" column="10" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="122" bodyend="122"/>
        <references refid="class_two_center_1aed04abf7863ba4d9e7e059593f5cecdd">mixture</references>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1a0a597e62e05bd437540412fdd1dd0ba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void TwoCenter::determine_coefficients</definition>
        <argsstring>(Component *c)</argsstring>
        <name>determine_coefficients</name>
        <qualifiedname>TwoCenter::determine_coefficients</qualifiedname>
        <reimplements refid="class_pot_accel_1a3a9722c6b123ba2a0dd3671dec6cf724">determine_coefficients</reimplements>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Call <ref refid="class_basis" kindref="compound">Basis</ref> routines to make coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="108" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1a92e47a350f1483a891a69d9972d5af59" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void TwoCenter::determine_coefficients</definition>
        <argsstring>(void)</argsstring>
        <name>determine_coefficients</name>
        <qualifiedname>TwoCenter::determine_coefficients</qualifiedname>
        <reimplements refid="class_pot_accel_1a30dac3c15c2a7a67e9860e086cda27b8">determine_coefficients</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used by get_acceleration_and_potential to request that the expansion be performed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="109" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1ac08ca04cfea84f1c816c7a1645389c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void TwoCenter::get_acceleration_and_potential</definition>
        <argsstring>(Component *)</argsstring>
        <name>get_acceleration_and_potential</name>
        <qualifiedname>TwoCenter::get_acceleration_and_potential</qualifiedname>
        <reimplements refid="class_pot_accel_1ab78f20762031db204f636fc8e74ea986">get_acceleration_and_potential</reimplements>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
        </param>
        <briefdescription>
<para>Main force evaluation routine: cycle through each grid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="113" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1aed04abf7863ba4d9e7e059593f5cecdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double TwoCenter::mixture</definition>
        <argsstring>(double *p)=0</argsstring>
        <name>mixture</name>
        <qualifiedname>TwoCenter::mixture</qualifiedname>
        <reimplementedby refid="class_e_jcom_1ae04818161d9df4becfdd3d34146ec8ac">mixture</reimplementedby>
        <param>
          <type>double *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Mixture function for the two expansions. </para>
        </briefdescription>
        <detaileddescription>
<para>To be provided: must return a value in [0,1] </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="119" column="18"/>
        <referencedby refid="class_two_center_1af6341c0c9211c12fc6980c2bee31f077" compoundref="_two_center_8_h" startline="122" endline="122">Cmixture</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1ac29938dc6a1d4c9af4f9166b9b04d249" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void TwoCenter::multistep_debug</definition>
        <argsstring>()</argsstring>
        <name>multistep_debug</name>
        <qualifiedname>TwoCenter::multistep_debug</qualifiedname>
        <reimplements refid="class_pot_accel_1a2ba58ca0219d337b13c87697353d4121">multistep_debug</reimplements>
        <briefdescription>
<para>Print debug info. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="165" column="16" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="165" bodyend="169"/>
        <references refid="class_two_center_1a8cce6cd013f0a4838d6a95c926dc36d6" compoundref="_two_center_8_h" startline="40">exp_in</references>
        <references refid="class_two_center_1a5fdd1cccfed67156eb646eca45cf1121" compoundref="_two_center_8_h" startline="41">exp_out</references>
        <references refid="class_two_center_1ac29938dc6a1d4c9af4f9166b9b04d249" compoundref="_two_center_8_h" startline="165" endline="169">multistep_debug</references>
        <referencedby refid="class_two_center_1ac29938dc6a1d4c9af4f9166b9b04d249" compoundref="_two_center_8_h" startline="165" endline="169">multistep_debug</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1ac3c9e0ae37c6e7aaab40e7cac2475a26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void TwoCenter::multistep_reset</definition>
        <argsstring>()</argsstring>
        <name>multistep_reset</name>
        <qualifiedname>TwoCenter::multistep_reset</qualifiedname>
        <reimplements refid="class_pot_accel_1aaada1d8e8970e63332269b0d00aed97f">multistep_reset</reimplements>
        <briefdescription>
<para>Reset data for multistep. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="159" column="16" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="159" bodyend="163"/>
        <references refid="class_two_center_1a8cce6cd013f0a4838d6a95c926dc36d6" compoundref="_two_center_8_h" startline="40">exp_in</references>
        <references refid="class_two_center_1a5fdd1cccfed67156eb646eca45cf1121" compoundref="_two_center_8_h" startline="41">exp_out</references>
        <references refid="class_two_center_1ac3c9e0ae37c6e7aaab40e7cac2475a26" compoundref="_two_center_8_h" startline="159" endline="163">multistep_reset</references>
        <referencedby refid="class_two_center_1ac3c9e0ae37c6e7aaab40e7cac2475a26" compoundref="_two_center_8_h" startline="159" endline="163">multistep_reset</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1a9840bdb9f5c27ce8f2d7d57013dd0b0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void TwoCenter::multistep_update</definition>
        <argsstring>(int cur, int next, Component *c, int i, int id)</argsstring>
        <name>multistep_update</name>
        <qualifiedname>TwoCenter::multistep_update</qualifiedname>
        <reimplements refid="class_pot_accel_1aa6c3661783144fd643ebaf1a2fa6278a">multistep_update</reimplements>
        <param>
          <type>int</type>
          <declname>cur</declname>
        </param>
        <param>
          <type>int</type>
          <declname>next</declname>
        </param>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Implementation of level shifts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="147" column="16" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="147" bodyend="151"/>
        <references refid="class_two_center_1a8cce6cd013f0a4838d6a95c926dc36d6" compoundref="_two_center_8_h" startline="40">exp_in</references>
        <references refid="class_two_center_1a5fdd1cccfed67156eb646eca45cf1121" compoundref="_two_center_8_h" startline="41">exp_out</references>
        <references refid="class_two_center_1a9840bdb9f5c27ce8f2d7d57013dd0b0a" compoundref="_two_center_8_h" startline="147" endline="151">multistep_update</references>
        <referencedby refid="class_two_center_1a9840bdb9f5c27ce8f2d7d57013dd0b0a" compoundref="_two_center_8_h" startline="147" endline="151">multistep_update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1a5d42adc520d7f5a7353ddd893990b5cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void TwoCenter::multistep_update_begin</definition>
        <argsstring>()</argsstring>
        <name>multistep_update_begin</name>
        <qualifiedname>TwoCenter::multistep_update_begin</qualifiedname>
        <reimplements refid="class_pot_accel_1a0e720b605350a9fb4e0d24dae2a1c381">multistep_update_begin</reimplements>
        <briefdescription>
<para>Execute to begin level shifts for particles. </para>
        </briefdescription>
        <detaileddescription>
<para>Update the multi time step force algorithm when moving particle <computeroutput>i</computeroutput> from level <computeroutput>cur</computeroutput> to level <computeroutput>next</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="141" column="16" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="141" bodyend="145"/>
        <references refid="class_two_center_1a8cce6cd013f0a4838d6a95c926dc36d6" compoundref="_two_center_8_h" startline="40">exp_in</references>
        <references refid="class_two_center_1a5fdd1cccfed67156eb646eca45cf1121" compoundref="_two_center_8_h" startline="41">exp_out</references>
        <references refid="class_two_center_1a5d42adc520d7f5a7353ddd893990b5cd" compoundref="_two_center_8_h" startline="141" endline="145">multistep_update_begin</references>
        <referencedby refid="class_two_center_1a5d42adc520d7f5a7353ddd893990b5cd" compoundref="_two_center_8_h" startline="141" endline="145">multistep_update_begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1ae6080a5f19f8c92a75579a2d90776bd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void TwoCenter::multistep_update_finish</definition>
        <argsstring>()</argsstring>
        <name>multistep_update_finish</name>
        <qualifiedname>TwoCenter::multistep_update_finish</qualifiedname>
        <reimplements refid="class_pot_accel_1acb0c9d88466949f2bf84da42439f2a1e">multistep_update_finish</reimplements>
        <briefdescription>
<para>Execute to finish level shifts for particles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="153" column="16" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="153" bodyend="157"/>
        <references refid="class_two_center_1a8cce6cd013f0a4838d6a95c926dc36d6" compoundref="_two_center_8_h" startline="40">exp_in</references>
        <references refid="class_two_center_1a5fdd1cccfed67156eb646eca45cf1121" compoundref="_two_center_8_h" startline="41">exp_out</references>
        <references refid="class_two_center_1ae6080a5f19f8c92a75579a2d90776bd7" compoundref="_two_center_8_h" startline="153" endline="157">multistep_update_finish</references>
        <referencedby refid="class_two_center_1ae6080a5f19f8c92a75579a2d90776bd7" compoundref="_two_center_8_h" startline="153" endline="157">multistep_update_finish</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1a7ce7e41b10ddda4a7fc67b72d901f0e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void TwoCenter::RegisterComponent</definition>
        <argsstring>(Component *c)</argsstring>
        <name>RegisterComponent</name>
        <qualifiedname>TwoCenter::RegisterComponent</qualifiedname>
        <reimplements refid="class_pot_accel_1a8aea0d1740bf7432e1193dda7121a8bb">RegisterComponent</reimplements>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>For access to parent component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="126" column="16" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="126" bodyend="130"/>
        <references refid="class_pot_accel_1aa6d9bde455e08dc9fead4f152357cb15" compoundref="_pot_accel_8_h" startline="56">PotAccel::component</references>
        <references refid="class_two_center_1a8cce6cd013f0a4838d6a95c926dc36d6" compoundref="_two_center_8_h" startline="40">exp_in</references>
        <references refid="class_two_center_1a5fdd1cccfed67156eb646eca45cf1121" compoundref="_two_center_8_h" startline="41">exp_out</references>
        <references refid="class_two_center_1a7ce7e41b10ddda4a7fc67b72d901f0e7" compoundref="_two_center_8_h" startline="126" endline="130">RegisterComponent</references>
        <referencedby refid="class_two_center_1a7ce7e41b10ddda4a7fc67b72d901f0e7" compoundref="_two_center_8_h" startline="126" endline="130">RegisterComponent</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1afc027c542932d0fb5c23365730c7a225" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void TwoCenter::set_multistep_level</definition>
        <argsstring>(unsigned n)</argsstring>
        <name>set_multistep_level</name>
        <qualifiedname>TwoCenter::set_multistep_level</qualifiedname>
        <reimplements refid="class_pot_accel_1ac65dfca720c42ea4a773024d1eaf977f">set_multistep_level</reimplements>
        <param>
          <type>unsigned</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Multistepping routines: call the basis members for each component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="134" column="16" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="134" bodyend="139"/>
        <references refid="class_two_center_1a8cce6cd013f0a4838d6a95c926dc36d6" compoundref="_two_center_8_h" startline="40">exp_in</references>
        <references refid="class_two_center_1a5fdd1cccfed67156eb646eca45cf1121" compoundref="_two_center_8_h" startline="41">exp_out</references>
        <references refid="class_pot_accel_1ad9ff6c9f431ad2f8ad2e5895c222ede8" compoundref="_pot_accel_8_h" startline="80">PotAccel::mlevel</references>
        <references refid="class_two_center_1afc027c542932d0fb5c23365730c7a225" compoundref="_two_center_8_h" startline="134" endline="139">set_multistep_level</references>
        <referencedby refid="class_two_center_1afc027c542932d0fb5c23365730c7a225" compoundref="_two_center_8_h" startline="134" endline="139">set_multistep_level</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1a9489bd2add9e9d423e03b0854348d293" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TwoCenter::TwoCenter</definition>
        <argsstring>(Component *c0, const YAML::Node &amp;conf)</argsstring>
        <name>TwoCenter</name>
        <qualifiedname>TwoCenter::TwoCenter</qualifiedname>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c0</declname>
        </param>
        <param>
          <type>const YAML::Node &amp;</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c0</parametername>
</parameternamelist>
<parameterdescription>
<para>is the instantiating caller (a <ref refid="class_component" kindref="compound">Component</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>passes any parameters (rsphSL, rmin and numr) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="100" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_two_center_1a02ec2f56f013952ba88fe3db67d52c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TwoCenter::~TwoCenter</definition>
        <argsstring>()</argsstring>
        <name>~TwoCenter</name>
        <qualifiedname>TwoCenter::~TwoCenter</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="103" column="3"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Computes the potential, acceleration and density using two basis sets with different expansion centers</para>
<para>This class provides a virtual member &quot;mixture(double *pos)&quot; that must be implemented by a derived class to provide the mixture function for associating particles with a force center for gravitational field determination. <ref refid="class_e_jcom" kindref="compound">EJcom</ref> is an example of an implementation using an erf-based ramp whose argument is the distance from the particle to the inner center and the width is the distance between the centers.</para>
<para>All parameters are parsed by the underlying basis instances for the two centers. There is only one diagnostic parameter:</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nhisto</parametername>
</parameternamelist>
<parameterdescription>
<para>enables diagnostic output of mixture distribution if set to a value larger than 1</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basis</parametername>
</parameternamelist>
<parameterdescription>
<para>is the name of the force method to use for the two-center expansion. Available types are: &quot;bessel&quot; (<ref refid="class_bessel" kindref="compound">Bessel</ref>), &quot;sphereSL&quot; (<ref refid="class_sphere" kindref="compound">Sphere</ref>), &quot;cylinder&quot; (<ref refid="class_cylinder" kindref="compound">Cylinder</ref>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>EJcom</label>
        <link refid="class_e_jcom"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>PotAccel</label>
        <link refid="class_pot_accel"/>
      </node>
      <node id="1">
        <label>TwoCenter</label>
        <link refid="class_two_center"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>Basis</label>
        <link refid="class_basis"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Component</label>
        <link refid="class_component"/>
        <childnode refid="4" relation="usage">
          <edgelabel>c0</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>force</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>orient</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>time_so_far</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>EL3</label>
        <link refid="class_e_l3"/>
      </node>
      <node id="9">
        <label>MixtureBasis</label>
        <link refid="class_mixture_basis"/>
        <childnode refid="1" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Orient</label>
        <link refid="class_orient"/>
        <childnode refid="6" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>PotAccel</label>
        <link refid="class_pot_accel"/>
        <childnode refid="3" relation="usage">
          <edgelabel>td</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>cC</edgelabel>
          <edgelabel>component</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>Timer</label>
        <link refid="class_timer"/>
      </node>
      <node id="1">
        <label>TwoCenter</label>
        <link refid="class_two_center"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>exp_in</edgelabel>
          <edgelabel>exp_out</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>mix_in</edgelabel>
          <edgelabel>mix_out</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>thrd_pass_PotAccel</label>
        <link refid="structthrd__pass___pot_accel"/>
        <childnode refid="2" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/src/TwoCenter.H" line="33" column="1" bodyfile="/home/weinberg/Projects/EXP/src/TwoCenter.H" bodystart="34" bodyend="172"/>
    <listofallmembers>
      <member refid="class_two_center_1a6351d92967a24357a5b6650947e7bf90" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>accum_histo</name></member>
      <member refid="class_pot_accel_1a6a637997f73ca85ce78d8c92eec7ad1b" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>atol</name></member>
      <member refid="class_two_center_1a0246092f794de8555a99d3b0ebe86abf" prot="private" virt="non-virtual"><scope>TwoCenter</scope><name>basis</name></member>
      <member refid="class_pot_accel_1afa2cd3b0bf51e23d8bfc54aac73ef010" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>cC</name></member>
      <member refid="class_pot_accel_1a630b9cdcae4ed4915cc72179fe9821c6" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>cc_lock</name></member>
      <member refid="class_pot_accel_1a944213bbf31fca1508ba817e392b9fc6" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>ClearExternal</name></member>
      <member refid="class_two_center_1af6341c0c9211c12fc6980c2bee31f077" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>Cmixture</name></member>
      <member refid="class_pot_accel_1ac7ab5e578b5b2bbd29fe35738b03d771" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>coef_dump</name></member>
      <member refid="class_pot_accel_1aa6d9bde455e08dc9fead4f152357cb15" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>component</name></member>
      <member refid="class_pot_accel_1a49e2936503ffdad1dd86d3f0c934d25a" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>compute</name></member>
      <member refid="class_pot_accel_1ab682d4480d7d2946a7bef7f93ac0c6a0" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>conf</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda489785884cf0770efb348b919878bf23" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>cube</name></member>
      <member refid="class_pot_accel_1ac4def6f1c9318d8b49e62a4c9f2d6786" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>cuda_aware</name></member>
      <member refid="class_pot_accel_1a5029810ccad93845aab9919e005bafe0" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>cudaAware</name></member>
      <member refid="class_pot_accel_1a823dbb4c07cab1541d7ee738c6baef99" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>current_keys</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fdac215da2d633c31e7278fb1a3dd6af268" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>cylinder</name></member>
      <member refid="class_two_center_1afab216f509fdd00edf7093864b7a602c" prot="private" virt="virtual"><scope>TwoCenter</scope><name>determine_acceleration_and_potential_thread</name></member>
      <member refid="class_two_center_1a0a597e62e05bd437540412fdd1dd0ba5" prot="public" virt="virtual"><scope>TwoCenter</scope><name>determine_coefficients</name></member>
      <member refid="class_two_center_1a92e47a350f1483a891a69d9972d5af59" prot="public" virt="virtual"><scope>TwoCenter</scope><name>determine_coefficients</name></member>
      <member refid="class_two_center_1ad08f6706e74ee6a1ce58e549bd0e9afd" prot="private" virt="virtual"><scope>TwoCenter</scope><name>determine_coefficients_thread</name></member>
      <member refid="class_pot_accel_1a6a9ec23d29b553c1625bd8e88fe7692d" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>dof</name></member>
      <member refid="class_pot_accel_1a10f4dd971b1a056bb6dacf01f2e2bcbf" prot="public" virt="virtual"><scope>TwoCenter</scope><name>dump_coefs</name></member>
      <member refid="class_pot_accel_1ac53a3ab4bdfa2be33fbe4286b939230c" prot="public" virt="virtual"><scope>TwoCenter</scope><name>dump_coefs_h5</name></member>
      <member refid="class_two_center_1a6c25023bca66055cc078ea5e50810fcc" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>dz</name></member>
      <member refid="class_two_center_1a8cce6cd013f0a4838d6a95c926dc36d6" prot="private" virt="non-virtual"><scope>TwoCenter</scope><name>exp_in</name></member>
      <member refid="class_two_center_1a5fdd1cccfed67156eb646eca45cf1121" prot="private" virt="non-virtual"><scope>TwoCenter</scope><name>exp_out</name></member>
      <member refid="class_pot_accel_1abee9651463af53460b622250d311329e" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>exp_thread_fork</name></member>
      <member refid="class_pot_accel_1adb6ef0bdae7d3520ca1f9fd8a6d648ea" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>geometry</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fd" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>Geometry</name></member>
      <member refid="class_pot_accel_1ade38f6ecdf80f80cde847d463b14909b" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>geoname</name></member>
      <member refid="class_two_center_1ac08ca04cfea84f1c816c7a1645389c6b" prot="public" virt="virtual"><scope>TwoCenter</scope><name>get_acceleration_and_potential</name></member>
      <member refid="class_pot_accel_1a0998c361bca277b3bba95f59acaba203" prot="public" virt="virtual"><scope>TwoCenter</scope><name>getScale</name></member>
      <member refid="class_pot_accel_1a4a812594dff363f07bf57d69a60e4a13" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>HaveCoefDump</name></member>
      <member refid="class_two_center_1a5156955100153118062a2d6514bcbd8b" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>histo</name></member>
      <member refid="class_pot_accel_1a1cdb2381070d7772caf533433455284c" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>id</name></member>
      <member refid="class_two_center_1acd8e8d4c102a148dfca2d0e57355aa9f" prot="private" virt="virtual"><scope>TwoCenter</scope><name>initialize</name></member>
      <member refid="class_two_center_1aa41bff5fbe63094da26924f14b5f17f9" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>inner</name></member>
      <member refid="class_pot_accel_1a706b04f03c8beb4369dd125406770116" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>kill_mutex</name></member>
      <member refid="class_pot_accel_1a65fa890eea987e18d552825ab074939b" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>make_mutex</name></member>
      <member refid="class_two_center_1a10f394df29c02b21b123e01ee53e0b0a" prot="private" virt="non-virtual"><scope>TwoCenter</scope><name>mix_in</name></member>
      <member refid="class_two_center_1a0f7c7e792ef402191d8b56b1cc92e31e" prot="private" virt="non-virtual"><scope>TwoCenter</scope><name>mix_out</name></member>
      <member refid="class_two_center_1a4697b2679e1325a3cfc78ab80b094784" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>mixFunc</name></member>
      <member refid="class_two_center_1aed04abf7863ba4d9e7e059593f5cecdd" prot="public" virt="pure-virtual"><scope>TwoCenter</scope><name>mixture</name></member>
      <member refid="class_pot_accel_1ad9ff6c9f431ad2f8ad2e5895c222ede8" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>mlevel</name></member>
      <member refid="class_two_center_1ac29938dc6a1d4c9af4f9166b9b04d249" prot="public" virt="virtual"><scope>TwoCenter</scope><name>multistep_debug</name></member>
      <member refid="class_two_center_1ac3c9e0ae37c6e7aaab40e7cac2475a26" prot="public" virt="virtual"><scope>TwoCenter</scope><name>multistep_reset</name></member>
      <member refid="class_two_center_1a9840bdb9f5c27ce8f2d7d57013dd0b0a" prot="public" virt="virtual"><scope>TwoCenter</scope><name>multistep_update</name></member>
      <member refid="class_two_center_1a5d42adc520d7f5a7353ddd893990b5cd" prot="public" virt="virtual"><scope>TwoCenter</scope><name>multistep_update_begin</name></member>
      <member refid="class_two_center_1ae6080a5f19f8c92a75579a2d90776bd7" prot="public" virt="virtual"><scope>TwoCenter</scope><name>multistep_update_finish</name></member>
      <member refid="class_pot_accel_1a73976f361ed7abf13001835bfcdee639" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>nbodies</name></member>
      <member refid="class_two_center_1a46bae62ea97bb409c834ada4bee74c2d" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>nhisto</name></member>
      <member refid="class_pot_accel_1a4f2099b1b705731b909e63c90ea59f04" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>NoCoefs</name></member>
      <member refid="class_two_center_1a415058d5041e067546153881c656498c" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>ohisto</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda7c49f38007dad33fb1e48fdebdd2f8c1" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>other</name></member>
      <member refid="class_two_center_1a1c91ff546636819d2427429ae8434e2d" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>outer</name></member>
      <member refid="class_pot_accel_1a74b41dd5c2f102dd3184ac53b6172462" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>play_back</name></member>
      <member refid="class_pot_accel_1aea1c756cd9616a1daf73541780b45798" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>play_cnew</name></member>
      <member refid="class_pot_accel_1a801fdbd01e551033e79f274e4a7c1d1e" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>PotAccel</name></member>
      <member refid="class_pot_accel_1a5e257d38dbf5c3d9630906a96abf6915" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>print_timings</name></member>
      <member refid="class_pot_accel_1a37a3c348c0febbf70ff94949071c3beb" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>print_timings</name></member>
      <member refid="class_two_center_1a7ce7e41b10ddda4a7fc67b72d901f0e7" prot="public" virt="virtual"><scope>TwoCenter</scope><name>RegisterComponent</name></member>
      <member refid="class_two_center_1a9a34eaaf60d08861b57bd04f9c9d7f07" prot="private" virt="non-virtual"><scope>TwoCenter</scope><name>reset_histo</name></member>
      <member refid="class_pot_accel_1added387424e4e4d23bac8500822e4324" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>scale</name></member>
      <member refid="class_two_center_1afc027c542932d0fb5c23365730c7a225" prot="public" virt="virtual"><scope>TwoCenter</scope><name>set_multistep_level</name></member>
      <member refid="class_pot_accel_1a6dc784a141afdec5f4daad63eba20b81" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>SetExternal</name></member>
      <member refid="class_pot_accel_1ad528efbd280a21543addaf7747e9089a" prot="public" virt="virtual"><scope>TwoCenter</scope><name>setScale</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda0a1acd8c0d6e745fb0ae3e33e458a9b8" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>slab</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda996ce4577548b6da6b1330a78b1c6f6a" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>sphere</name></member>
      <member refid="class_pot_accel_1aff158a74d7328a080ed619c1456836f5" prot="private" virt="non-virtual"><scope>TwoCenter</scope><name>t</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda1792d3c00a41ee78957c83611fd368a2" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>table</name></member>
      <member refid="class_pot_accel_1a125d7343a34d292a3e4a48a5d984cac4" prot="private" virt="non-virtual"><scope>TwoCenter</scope><name>td</name></member>
      <member refid="class_pot_accel_1a86d0d012a44e2eb7c3e385d852a5fdde" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>thread_timing_beg</name></member>
      <member refid="class_pot_accel_1a76c805cd8d0d134d37929eeb48115b33" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>thread_timing_end</name></member>
      <member refid="class_pot_accel_1a4315e73a641c54eefc548b7d14cb06b6" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>timer_list</name></member>
      <member refid="class_pot_accel_1aabce5ff868883c6191b8b7f8f6281c04" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>TList</name></member>
      <member refid="class_two_center_1a9489bd2add9e9d423e03b0854348d293" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>TwoCenter</name></member>
      <member refid="class_pot_accel_1a0355cfe43cdde5237f7be234e94de64b" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>unmatched</name></member>
      <member refid="class_pot_accel_1acd32c6464b705469911df718114187b9" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>use</name></member>
      <member refid="class_pot_accel_1a59a4a86ea8d2b3a9a5d420ef7e712697" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>use_external</name></member>
      <member refid="class_pot_accel_1ae2e0dbf849707704a3d42a1fa91ce060" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>Used</name></member>
      <member refid="class_pot_accel_1a8fe5beef77e790f0d7bf6f455f5bf1d3" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>used</name></member>
      <member refid="class_two_center_1a9bc5d628dcce5dec49c80af10922c355" prot="protected" virt="non-virtual"><scope>TwoCenter</scope><name>valid_keys</name></member>
      <member refid="class_two_center_1a0789fd9481fb5fd2763a66d81d42bb8e" prot="private" virt="non-virtual"><scope>TwoCenter</scope><name>write_histo</name></member>
      <member refid="class_pot_accel_1adcc326688bb152249f81e88d6edfde62" prot="public" virt="virtual"><scope>TwoCenter</scope><name>~PotAccel</name></member>
      <member refid="class_two_center_1a02ec2f56f013952ba88fe3db67d52c9d" prot="public" virt="non-virtual"><scope>TwoCenter</scope><name>~TwoCenter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
