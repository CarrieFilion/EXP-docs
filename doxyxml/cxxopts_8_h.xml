<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="cxxopts_8_h" kind="file" language="C++">
    <compoundname>cxxopts.H</compoundname>
    <includes local="no">cctype</includes>
    <includes local="no">cstring</includes>
    <includes local="no">exception</includes>
    <includes local="no">iostream</includes>
    <includes local="no">limits</includes>
    <includes local="no">list</includes>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">regex</includes>
    <includedby refid="_e_x_pini_8_h" local="no">/home/weinberg/Projects/EXP/include/EXPini.H</includedby>
    <includedby refid="_yaml_config_8_h" local="no">/home/weinberg/Projects/EXP/include/YamlConfig.H</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/include/cxxopts.H</label>
        <link refid="cxxopts_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>algorithm</label>
      </node>
      <node id="2">
        <label>cctype</label>
      </node>
      <node id="3">
        <label>cstring</label>
      </node>
      <node id="4">
        <label>exception</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>limits</label>
      </node>
      <node id="7">
        <label>list</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
      <node id="17">
        <label>regex</label>
      </node>
      <node id="10">
        <label>sstream</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="12">
        <label>unordered_map</label>
      </node>
      <node id="13">
        <label>unordered_set</label>
      </node>
      <node id="14">
        <label>utility</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/weinberg/Projects/EXP/include/EXPini.H</label>
        <link refid="_e_x_pini_8_h"/>
      </node>
      <node id="3">
        <label>/home/weinberg/Projects/EXP/include/YamlConfig.H</label>
        <link refid="_yaml_config_8_h"/>
      </node>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/include/cxxopts.H</label>
        <link refid="cxxopts_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classcxxopts_1_1values_1_1abstract__value" prot="public">cxxopts::values::abstract_value</innerclass>
    <innerclass refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc" prot="public">cxxopts::values::parser_tool::ArguDesc</innerclass>
    <innerclass refid="classcxxopts_1_1argument__incorrect__type" prot="public">cxxopts::argument_incorrect_type</innerclass>
    <innerclass refid="structcxxopts_1_1_help_group_details" prot="public">cxxopts::HelpGroupDetails</innerclass>
    <innerclass refid="structcxxopts_1_1_help_option_details" prot="public">cxxopts::HelpOptionDetails</innerclass>
    <innerclass refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc" prot="public">cxxopts::values::parser_tool::IntegerDesc</innerclass>
    <innerclass refid="classcxxopts_1_1invalid__option__format__error" prot="public">cxxopts::invalid_option_format_error</innerclass>
    <innerclass refid="classcxxopts_1_1_parse_result_1_1_iterator" prot="public">cxxopts::ParseResult::Iterator</innerclass>
    <innerclass refid="classcxxopts_1_1_key_value" prot="public">cxxopts::KeyValue</innerclass>
    <innerclass refid="classcxxopts_1_1missing__argument__exception" prot="public">cxxopts::missing_argument_exception</innerclass>
    <innerclass refid="structcxxopts_1_1_option" prot="public">cxxopts::Option</innerclass>
    <innerclass refid="classcxxopts_1_1option__exists__error" prot="public">cxxopts::option_exists_error</innerclass>
    <innerclass refid="classcxxopts_1_1option__has__no__value__exception" prot="public">cxxopts::option_has_no_value_exception</innerclass>
    <innerclass refid="classcxxopts_1_1option__not__exists__exception" prot="public">cxxopts::option_not_exists_exception</innerclass>
    <innerclass refid="classcxxopts_1_1option__not__has__argument__exception" prot="public">cxxopts::option_not_has_argument_exception</innerclass>
    <innerclass refid="classcxxopts_1_1option__not__present__exception" prot="public">cxxopts::option_not_present_exception</innerclass>
    <innerclass refid="classcxxopts_1_1option__required__exception" prot="public">cxxopts::option_required_exception</innerclass>
    <innerclass refid="classcxxopts_1_1option__requires__argument__exception" prot="public">cxxopts::option_requires_argument_exception</innerclass>
    <innerclass refid="classcxxopts_1_1option__syntax__exception" prot="public">cxxopts::option_syntax_exception</innerclass>
    <innerclass refid="classcxxopts_1_1_option_adder" prot="public">cxxopts::OptionAdder</innerclass>
    <innerclass refid="classcxxopts_1_1_option_details" prot="public">cxxopts::OptionDetails</innerclass>
    <innerclass refid="classcxxopts_1_1_option_exception" prot="public">cxxopts::OptionException</innerclass>
    <innerclass refid="classcxxopts_1_1_option_parse_exception" prot="public">cxxopts::OptionParseException</innerclass>
    <innerclass refid="classcxxopts_1_1_option_parser" prot="public">cxxopts::OptionParser</innerclass>
    <innerclass refid="classcxxopts_1_1_options" prot="public">cxxopts::Options</innerclass>
    <innerclass refid="classcxxopts_1_1_option_spec_exception" prot="public">cxxopts::OptionSpecException</innerclass>
    <innerclass refid="classcxxopts_1_1_option_value" prot="public">cxxopts::OptionValue</innerclass>
    <innerclass refid="classcxxopts_1_1_parse_result" prot="public">cxxopts::ParseResult</innerclass>
    <innerclass refid="structcxxopts_1_1values_1_1detail_1_1_signed_check_3_01_t_00_01false_01_4" prot="public">cxxopts::values::detail::SignedCheck&lt; T, false &gt;</innerclass>
    <innerclass refid="structcxxopts_1_1values_1_1detail_1_1_signed_check_3_01_t_00_01true_01_4" prot="public">cxxopts::values::detail::SignedCheck&lt; T, true &gt;</innerclass>
    <innerclass refid="classcxxopts_1_1values_1_1standard__value" prot="public">cxxopts::values::standard_value</innerclass>
    <innerclass refid="classcxxopts_1_1values_1_1standard__value_3_01bool_01_4" prot="public">cxxopts::values::standard_value&lt; bool &gt;</innerclass>
    <innerclass refid="structcxxopts_1_1values_1_1type__is__container" prot="public">cxxopts::values::type_is_container</innerclass>
    <innerclass refid="structcxxopts_1_1values_1_1type__is__container_3_01std_1_1vector_3_01_t_01_4_01_4" prot="public">cxxopts::values::type_is_container&lt; std::vector&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classcxxopts_1_1_value" prot="public">cxxopts::Value</innerclass>
    <innernamespace refid="namespacecxxopts">cxxopts</innernamespace>
    <innernamespace refid="namespacecxxopts_1_1values">cxxopts::values</innernamespace>
    <innernamespace refid="namespacecxxopts_1_1values_1_1detail">cxxopts::values::detail</innernamespace>
    <innernamespace refid="namespacecxxopts_1_1values_1_1parser__tool">cxxopts::values::parser_tool</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="cxxopts_8_h_1a00d4ee40bcf31ae271e78a9c52632bc7" prot="public" static="no">
        <name>CXXOPTS__VERSION_MAJOR</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/cxxopts.H" line="74" column="9" bodyfile="/home/weinberg/Projects/EXP/include/cxxopts.H" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cxxopts_8_h_1aa67ae10831707133de2518234e695084" prot="public" static="no">
        <name>CXXOPTS__VERSION_MINOR</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/cxxopts.H" line="75" column="9" bodyfile="/home/weinberg/Projects/EXP/include/cxxopts.H" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cxxopts_8_h_1ab3de1a4b00ea1ddee4799e6382992e79" prot="public" static="no">
        <name>CXXOPTS__VERSION_PATCH</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/cxxopts.H" line="76" column="9" bodyfile="/home/weinberg/Projects/EXP/include/cxxopts.H" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cxxopts_8_h_1a6d9ad4f693e16a4c6cdce8373f403e5d" prot="public" static="no">
        <name>CXXOPTS_NODISCARD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/cxxopts.H" line="67" column="10" bodyfile="/home/weinberg/Projects/EXP/include/cxxopts.H" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cxxopts_8_h_1a564e0c1dcc7d9a5202f36755f4fb07c7" prot="public" static="no">
        <name>CXXOPTS_VECTOR_DELIMITER</name>
        <initializer>&apos;,&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/cxxopts.H" line="71" column="9" bodyfile="/home/weinberg/Projects/EXP/include/cxxopts.H" bodystart="71" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">Copyright<sp/>(c)<sp/>2014,<sp/>2015,<sp/>2016,<sp/>2017<sp/>Jarryd<sp/>Beck</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="6"><highlight class="comment">of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="7"><highlight class="comment">in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="8"><highlight class="comment">to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="9"><highlight class="comment">copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="10"><highlight class="comment">furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="13"><highlight class="comment">all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="18"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="20"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="21"><highlight class="comment">THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CXXOPTS_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CXXOPTS_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cctype&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>!defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>(__GNUC__<sp/>*<sp/>10<sp/>+<sp/>__GNUC_MINOR__)<sp/>&lt;<sp/>49</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>CXXOPTS_NO_REGEX<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CXXOPTS_NO_REGEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;regex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>CXXOPTS_NO_REGEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Nonstandard<sp/>before<sp/>C++17,<sp/>which<sp/>is<sp/>coincidentally<sp/>what<sp/>we<sp/>also<sp/>need<sp/>for<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__has_include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>__has_include(&lt;optional&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifdef<sp/>__cpp_lib_optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>CXXOPTS_HAS_OPTIONAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;=<sp/>201603L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CXXOPTS_NODISCARD<sp/>[[nodiscard]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="cxxopts_8_h_1a6d9ad4f693e16a4c6cdce8373f403e5d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CXXOPTS_NODISCARD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CXXOPTS_VECTOR_DELIMITER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="cxxopts_8_h_1a564e0c1dcc7d9a5202f36755f4fb07c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CXXOPTS_VECTOR_DELIMITER<sp/>&apos;,&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="cxxopts_8_h_1a00d4ee40bcf31ae271e78a9c52632bc7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CXXOPTS__VERSION_MAJOR<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="cxxopts_8_h_1aa67ae10831707133de2518234e695084" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CXXOPTS__VERSION_MINOR<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="cxxopts_8_h_1ab3de1a4b00ea1ddee4799e6382992e79" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CXXOPTS__VERSION_PATCH<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>&lt;<sp/>10<sp/>||<sp/>(__GNUC__<sp/>==<sp/>10<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&lt;<sp/>1))<sp/>&amp;&amp;<sp/>__GNUC__<sp/>&gt;=<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CXXOPTS_NULL_DEREF_IGNORE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="namespacecxxopts" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecxxopts" kindref="compound">cxxopts</ref></highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85" refid="namespacecxxopts_1ae722cb9457c284596136a40555eef19e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="namespacecxxopts_1ae722cb9457c284596136a40555eef19e" kindref="member">major</ref>,<sp/><ref refid="namespacecxxopts_1aecaf1c73662b522ae01a195dede9ed38" kindref="member">minor</ref>,<sp/><ref refid="namespacecxxopts_1a6d7d82764847cde60d24c9077234adef" kindref="member">patch</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="namespacecxxopts_1ac84689ecff5a9b45c67a8acea377baee" kindref="member">version</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cxxopts_8_h_1a00d4ee40bcf31ae271e78a9c52632bc7" kindref="member">CXXOPTS__VERSION_MAJOR</ref>,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cxxopts_8_h_1aa67ae10831707133de2518234e695084" kindref="member">CXXOPTS__VERSION_MINOR</ref>,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cxxopts_8_h_1ab3de1a4b00ea1ddee4799e6382992e79" kindref="member">CXXOPTS__VERSION_PATCH</ref></highlight></codeline>
<codeline lineno="90" refid="namespacecxxopts_1ac84689ecff5a9b45c67a8acea377baee" refkind="member"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cxxopts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//when<sp/>we<sp/>ask<sp/>cxxopts<sp/>to<sp/>use<sp/>Unicode,<sp/>help<sp/>strings<sp/>are<sp/>processed<sp/>using<sp/>ICU,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//which<sp/>results<sp/>in<sp/>the<sp/>correct<sp/>lengths<sp/>being<sp/>computed<sp/>for<sp/>strings<sp/>when<sp/>they</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//are<sp/>formatted<sp/>for<sp/>the<sp/>help<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//it<sp/>is<sp/>necessary<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>&lt;unicode/unistr.h&gt;<sp/>can<sp/>be<sp/>found<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//compiler,<sp/>and<sp/>that<sp/>icu-uc<sp/>is<sp/>linked<sp/>in<sp/>to<sp/>the<sp/>binary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CXXOPTS_USE_UNICODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unicode/unistr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecxxopts" kindref="compound">cxxopts</ref></highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref><sp/>=<sp/>icu::UnicodeString;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(std::string<sp/>s)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>icu::UnicodeString::fromUTF8(std::move(s));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>GCC<sp/>with<sp/>-Weffc++<sp/>will<sp/>issue<sp/>a<sp/>warning<sp/>regarding<sp/>the<sp/>upcoming<sp/>class,<sp/>we<sp/>want<sp/>to<sp/>silence<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>warning:<sp/>base<sp/>class<sp/>&apos;class<sp/>std::enable_shared_from_this&lt;cxxopts::Value&gt;&apos;<sp/>has<sp/>accessible<sp/>non-virtual<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wnon-virtual-dtor&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Weffc++&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>be<sp/>ignored<sp/>under<sp/>other<sp/>compilers<sp/>like<sp/>LLVM<sp/>clang.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UnicodeStringIterator</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">iterator_category<sp/>=<sp/>std::forward_iterator_tag;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>int32_t;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">difference_type<sp/><sp/><sp/>=<sp/>std::ptrdiff_t;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">pointer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>int32_t*;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">reference<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>int32_t&amp;;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>UnicodeStringIterator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>icu::UnicodeString*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/>int32_t<sp/>pos)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>s(string)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>i(pos)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>operator*()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="144"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s-&gt;char32At(i);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnicodeStringIterator&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="150"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s<sp/>==<sp/>rhs.s<sp/>&amp;&amp;<sp/>i<sp/>==<sp/>rhs.i;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnicodeStringIterator&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="156"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>rhs);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>UnicodeStringIterator&amp;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>operator++()</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>UnicodeStringIterator</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>operator+(int32_t<sp/>v)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UnicodeStringIterator(s,<sp/>i<sp/>+<sp/>v);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>icu::UnicodeString*<sp/>s;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>i;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1aea4319f3c17c89dc3c067d68d0fb915d" kindref="member">stringAppend</ref>(<ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;s,<sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref><sp/>a)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.append(std::move(a));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1aea4319f3c17c89dc3c067d68d0fb915d" kindref="member">stringAppend</ref>(<ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/>UChar32<sp/>c)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.append(c);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1aea4319f3c17c89dc3c067d68d0fb915d" kindref="member">stringAppend</ref>(<ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;<sp/>s,<sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref><sp/>begin,<sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref><sp/>end)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(begin<sp/>!=<sp/>end)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.append(*begin);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++begin;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a6e40a21a193047cd4575ac90411ca295" kindref="member">stringLength</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;<sp/>s)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.length();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>std::string</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a21f7a08caacc41cc3475f4bc7f9a1a67" kindref="member">toUTF8String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;<sp/>s)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>s.toUTF8String(result);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a3ffde9e4565bba175bd56c06c0f99162" kindref="member">empty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;<sp/>s)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.isEmpty();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">std</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>cxxopts::UnicodeStringIterator</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>begin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>icu::UnicodeString&amp;<sp/>s)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cxxopts::UnicodeStringIterator(&amp;s,<sp/>0);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>cxxopts::UnicodeStringIterator</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>end(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>icu::UnicodeString&amp;<sp/>s)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cxxopts::UnicodeStringIterator(&amp;s,<sp/>s.length());</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//ifdef<sp/>CXXOPTS_USE_UNICODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecxxopts" kindref="compound">cxxopts</ref></highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260" refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref><sp/>=<sp/>std::string;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>T</highlight></codeline>
<codeline lineno="264" refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(T&amp;&amp;<sp/>t)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::forward&lt;T&gt;(t);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="namespacecxxopts_1a6e40a21a193047cd4575ac90411ca295" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a6e40a21a193047cd4575ac90411ca295" kindref="member">stringLength</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;<sp/>s)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.length();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;</highlight></codeline>
<codeline lineno="278" refid="namespacecxxopts_1aea4319f3c17c89dc3c067d68d0fb915d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1aea4319f3c17c89dc3c067d68d0fb915d" kindref="member">stringAppend</ref>(<ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;<sp/>a)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.append(a);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;</highlight></codeline>
<codeline lineno="285" refid="namespacecxxopts_1a703def90aa29effc5b58a0a5658b263b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1aea4319f3c17c89dc3c067d68d0fb915d" kindref="member">stringAppend</ref>(<ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.append(n,<sp/>c);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;</highlight></codeline>
<codeline lineno="292" refid="namespacecxxopts_1af1a4ae4022414cbbc08d505174914185" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1aea4319f3c17c89dc3c067d68d0fb915d" kindref="member">stringAppend</ref>(<ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;<sp/>s,<sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref><sp/>begin,<sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref><sp/>end)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.append(begin,<sp/>end);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>std::string</highlight></codeline>
<codeline lineno="299" refid="namespacecxxopts_1a21f7a08caacc41cc3475f4bc7f9a1a67" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a21f7a08caacc41cc3475f4bc7f9a1a67" kindref="member">toUTF8String</ref>(T&amp;&amp;<sp/>t)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::forward&lt;T&gt;(t);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="namespacecxxopts_1a3ffde9e4565bba175bd56c06c0f99162" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a3ffde9e4565bba175bd56c06c0f99162" kindref="member">empty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.empty();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cxxopts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//ifdef<sp/>CXXOPTS_USE_UNICODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecxxopts" kindref="compound">cxxopts</ref></highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>LQUOTE(</highlight><highlight class="stringliteral">&quot;\&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>RQUOTE(</highlight><highlight class="stringliteral">&quot;\&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>LQUOTE(</highlight><highlight class="stringliteral">&quot;‘&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>RQUOTE(</highlight><highlight class="stringliteral">&quot;’&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>GCC<sp/>with<sp/>-Weffc++<sp/>will<sp/>issue<sp/>a<sp/>warning<sp/>regarding<sp/>the<sp/>upcoming<sp/>class,<sp/>we<sp/>want<sp/>to<sp/>silence<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/>warning:<sp/>base<sp/>class<sp/>&apos;class<sp/>std::enable_shared_from_this&lt;cxxopts::Value&gt;&apos;<sp/>has<sp/>accessible<sp/>non-virtual<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wnon-virtual-dtor&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Weffc++&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>be<sp/>ignored<sp/>under<sp/>other<sp/>compilers<sp/>like<sp/>LLVM<sp/>clang.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="classcxxopts_1_1_value" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_value" kindref="compound">Value</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::enable_shared_from_this&lt;Value&gt;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="classcxxopts_1_1_value_1afbbfc1c371d0b8bab3548be76523d12c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_value_1afbbfc1c371d0b8bab3548be76523d12c" kindref="member">~Value</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Value&gt;</highlight></codeline>
<codeline lineno="344" refid="classcxxopts_1_1_value_1a17916d6a48e57c999c2dc23fa6b22539" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_value_1a17916d6a48e57c999c2dc23fa6b22539" kindref="member">clone</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="classcxxopts_1_1_value_1a3c962e4ff3294721f5c9f6ac3fc00cc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_value_1a3c962e4ff3294721f5c9f6ac3fc00cc7" kindref="member">parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="classcxxopts_1_1_value_1a9246a55e299ea5ef34346af46977fab4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_value_1a9246a55e299ea5ef34346af46977fab4" kindref="member">parse</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="classcxxopts_1_1_value_1aac3233a0414ac39d54ed0b98365afc7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_value_1aac3233a0414ac39d54ed0b98365afc7e" kindref="member">has_default</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="classcxxopts_1_1_value_1a632f3263dd598e30999a6bcff0652132" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_value_1a632f3263dd598e30999a6bcff0652132" kindref="member">is_container</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="classcxxopts_1_1_value_1aac3425b87db8ef41157892449999b183" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_value_1aac3425b87db8ef41157892449999b183" kindref="member">has_implicit</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string</highlight></codeline>
<codeline lineno="362" refid="classcxxopts_1_1_value_1a25ac95c499771a6f5ca295e01452f380" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_value_1a25ac95c499771a6f5ca295e01452f380" kindref="member">get_default_value</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string</highlight></codeline>
<codeline lineno="365" refid="classcxxopts_1_1_value_1a436f0a8a6621de420088839f4c728230" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_value_1a436f0a8a6621de420088839f4c728230" kindref="member">get_implicit_value</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Value&gt;</highlight></codeline>
<codeline lineno="368" refid="classcxxopts_1_1_value_1a96cc46d76d458baf37099cd94cf4e857" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_value_1a96cc46d76d458baf37099cd94cf4e857" kindref="member">default_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Value&gt;</highlight></codeline>
<codeline lineno="371" refid="classcxxopts_1_1_value_1adf963773eb53a7af1bc8cb97a517b27e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_value_1adf963773eb53a7af1bc8cb97a517b27e" kindref="member">implicit_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Value&gt;</highlight></codeline>
<codeline lineno="374" refid="classcxxopts_1_1_value_1a4bba2137fbc7ee9c670a64e552ac05fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_value_1a4bba2137fbc7ee9c670a64e552ac05fe" kindref="member">no_implicit_value</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="classcxxopts_1_1_value_1a77a4a731bcbbd95afca43f82affe5aaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_value_1a77a4a731bcbbd95afca43f82affe5aaa" kindref="member">is_boolean</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="classcxxopts_1_1_option_exception" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_option_exception" kindref="compound">OptionException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::exception</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="385" refid="classcxxopts_1_1_option_exception_1adeba699012dd6041a966f3d7a53b9c47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_exception_1adeba699012dd6041a966f3d7a53b9c47" kindref="member">OptionException</ref>(std::string<sp/><sp/>message)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_exception_1aff1460a5b83bee97c0343c9b85c4c81c" kindref="member">m_message</ref>(std::move(message))</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cxxopts_8_h_1a6d9ad4f693e16a4c6cdce8373f403e5d" kindref="member">CXXOPTS_NODISCARD</ref></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="392" refid="classcxxopts_1_1_option_exception_1a9b53b66ca94838f8d1d696fad2576f3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_exception_1a9b53b66ca94838f8d1d696fad2576f3e" kindref="member">what</ref>()<sp/>const<sp/>noexcept</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="393"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_exception_1aff1460a5b83bee97c0343c9b85c4c81c" kindref="member">m_message</ref>.c_str();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="398" refid="classcxxopts_1_1_option_exception_1aff1460a5b83bee97c0343c9b85c4c81c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcxxopts_1_1_option_exception_1aff1460a5b83bee97c0343c9b85c4c81c" kindref="member">m_message</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="classcxxopts_1_1_option_spec_exception" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_option_spec_exception" kindref="compound">OptionSpecException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_exception" kindref="compound">OptionException</ref></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="classcxxopts_1_1_option_spec_exception_1a0bea2dfad20862c59c70311246fcb354" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_spec_exception_1a0bea2dfad20862c59c70311246fcb354" kindref="member">OptionSpecException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_exception" kindref="compound">OptionException</ref>(message)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="classcxxopts_1_1_option_parse_exception" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_exception" kindref="compound">OptionException</ref></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="414" refid="classcxxopts_1_1_option_parse_exception_1a5a29d9742ef8d0edc05c46d942debd05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_parse_exception_1a5a29d9742ef8d0edc05c46d942debd05" kindref="member">OptionParseException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_exception" kindref="compound">OptionException</ref>(message)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="classcxxopts_1_1option__exists__error" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1option__exists__error" kindref="compound">option_exists_error</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_spec_exception" kindref="compound">OptionSpecException</ref></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="423" refid="classcxxopts_1_1option__exists__error_1a2734bc9372936fa24999f08ad3032bca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1option__exists__error_1a2734bc9372936fa24999f08ad3032bca" kindref="member">option_exists_error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>option)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_spec_exception" kindref="compound">OptionSpecException</ref>(</highlight><highlight class="stringliteral">&quot;Option<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>LQUOTE<sp/>+<sp/>option<sp/>+<sp/>RQUOTE<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>already<sp/>exists&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="classcxxopts_1_1invalid__option__format__error" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1invalid__option__format__error" kindref="compound">invalid_option_format_error</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_spec_exception" kindref="compound">OptionSpecException</ref></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="432" refid="classcxxopts_1_1invalid__option__format__error_1ae31d4f488bbee0eebe50e7c8949a6fb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1invalid__option__format__error_1ae31d4f488bbee0eebe50e7c8949a6fb6" kindref="member">invalid_option_format_error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>format)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_spec_exception" kindref="compound">OptionSpecException</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>option<sp/>format<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>LQUOTE<sp/>+<sp/>format<sp/>+<sp/>RQUOTE)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="classcxxopts_1_1option__syntax__exception" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1option__syntax__exception" kindref="compound">option_syntax_exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="440" refid="classcxxopts_1_1option__syntax__exception_1a358fbda6263eccdcd235d7da42bd7d5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1option__syntax__exception_1a358fbda6263eccdcd235d7da42bd7d5e" kindref="member">option_syntax_exception</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref>(</highlight><highlight class="stringliteral">&quot;Argument<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>LQUOTE<sp/>+<sp/>text<sp/>+<sp/>RQUOTE<sp/>+</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>starts<sp/>with<sp/>a<sp/>-<sp/>but<sp/>has<sp/>incorrect<sp/>syntax&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="classcxxopts_1_1option__not__exists__exception" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1option__not__exists__exception" kindref="compound">option_not_exists_exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="450" refid="classcxxopts_1_1option__not__exists__exception_1a3a48a64b139a9fd7f27bffe350cf6b76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1option__not__exists__exception_1a3a48a64b139a9fd7f27bffe350cf6b76" kindref="member">option_not_exists_exception</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>option)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref>(</highlight><highlight class="stringliteral">&quot;Option<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>LQUOTE<sp/>+<sp/>option<sp/>+<sp/>RQUOTE<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="classcxxopts_1_1missing__argument__exception" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1missing__argument__exception" kindref="compound">missing_argument_exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="459" refid="classcxxopts_1_1missing__argument__exception_1a394d6f889c4bd90dd554ebd4d8cd50a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1missing__argument__exception_1a394d6f889c4bd90dd554ebd4d8cd50a2" kindref="member">missing_argument_exception</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>option)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref>(</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Option<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>LQUOTE<sp/>+<sp/>option<sp/>+<sp/>RQUOTE<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>missing<sp/>an<sp/>argument&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="classcxxopts_1_1option__requires__argument__exception" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1option__requires__argument__exception" kindref="compound">option_requires_argument_exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="470" refid="classcxxopts_1_1option__requires__argument__exception_1a4dd16f0718fc2952cf0e632d757800b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1option__requires__argument__exception_1a4dd16f0718fc2952cf0e632d757800b0" kindref="member">option_requires_argument_exception</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>option)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref>(</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Option<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>LQUOTE<sp/>+<sp/>option<sp/>+<sp/>RQUOTE<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>requires<sp/>an<sp/>argument&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="classcxxopts_1_1option__not__has__argument__exception" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1option__not__has__argument__exception" kindref="compound">option_not_has_argument_exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="481" refid="classcxxopts_1_1option__not__has__argument__exception_1afc3b2cbef0a6c2f63756bcc9f2c2746e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1option__not__has__argument__exception_1afc3b2cbef0a6c2f63756bcc9f2c2746e" kindref="member">option_not_has_argument_exception</ref></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>option,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>arg</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref>(</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Option<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>LQUOTE<sp/>+<sp/>option<sp/>+<sp/>RQUOTE<sp/>+</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>does<sp/>not<sp/>take<sp/>an<sp/>argument,<sp/>but<sp/>argument<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LQUOTE<sp/>+<sp/>arg<sp/>+<sp/>RQUOTE<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>given&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="classcxxopts_1_1option__not__present__exception" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1option__not__present__exception" kindref="compound">option_not_present_exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="498" refid="classcxxopts_1_1option__not__present__exception_1ade0b732924a309c3823367cbe403f1d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1option__not__present__exception_1ade0b732924a309c3823367cbe403f1d3" kindref="member">option_not_present_exception</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>option)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref>(</highlight><highlight class="stringliteral">&quot;Option<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>LQUOTE<sp/>+<sp/>option<sp/>+<sp/>RQUOTE<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>present&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="classcxxopts_1_1option__has__no__value__exception" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1option__has__no__value__exception" kindref="compound">option_has_no_value_exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_exception" kindref="compound">OptionException</ref></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="507" refid="classcxxopts_1_1option__has__no__value__exception_1aa4459b5fb837a4722d0884e4fcfa5ee4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1option__has__no__value__exception_1aa4459b5fb837a4722d0884e4fcfa5ee4" kindref="member">option_has_no_value_exception</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>option)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_exception" kindref="compound">OptionException</ref>(</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!option.<ref refid="namespacecxxopts_1a3ffde9e4565bba175bd56c06c0f99162" kindref="member">empty</ref>()<sp/>?</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Option<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>LQUOTE<sp/>+<sp/>option<sp/>+<sp/>RQUOTE<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>has<sp/>no<sp/>value&quot;</highlight><highlight class="normal">)<sp/>:</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Option<sp/>has<sp/>no<sp/>value&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="classcxxopts_1_1argument__incorrect__type" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1argument__incorrect__type" kindref="compound">argument_incorrect_type</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="519" refid="classcxxopts_1_1argument__incorrect__type_1adf2fdc98794172201b1209c6d16dfceb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1argument__incorrect__type_1adf2fdc98794172201b1209c6d16dfceb" kindref="member">argument_incorrect_type</ref></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>arg</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref>(</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>LQUOTE<sp/>+<sp/>arg<sp/>+<sp/>RQUOTE<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>failed<sp/>to<sp/>parse&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="classcxxopts_1_1option__required__exception" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1option__required__exception" kindref="compound">option_required_exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="533" refid="classcxxopts_1_1option__required__exception_1a0f7af231cec958b7912b0b010351584f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1option__required__exception_1a0f7af231cec958b7912b0b010351584f" kindref="member">option_required_exception</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>option)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_parse_exception" kindref="compound">OptionParseException</ref>(</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Option<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>LQUOTE<sp/>+<sp/>option<sp/>+<sp/>RQUOTE<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>required<sp/>but<sp/>not<sp/>present&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="542" refid="namespacecxxopts_1a466f47408560fa08e43bf48ec2366b22" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1a466f47408560fa08e43bf48ec2366b22" kindref="member">throw_or_mimic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(std::is_base_of&lt;std::exception,<sp/>T&gt;::value,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;throw_or_mimic<sp/>only<sp/>works<sp/>on<sp/>std::exception<sp/>and<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;deriving<sp/>classes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CXXOPTS_NO_EXCEPTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>CXXOPTS_NO_EXCEPTIONS<sp/>is<sp/>not<sp/>defined,<sp/>just<sp/>throw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>T{text};</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>manually<sp/>instantiate<sp/>the<sp/>exception,<sp/>print<sp/>what()<sp/>to<sp/>stderr,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>exit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>exception{text};</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>exception.<ref refid="classcxxopts_1_1_option_exception_1a9b53b66ca94838f8d1d696fad2576f3e" kindref="member">what</ref>()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>std::exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="namespacecxxopts_1_1values" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">values</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="562" refid="namespacecxxopts_1_1values_1_1parser__tool" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">parser_tool</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="564" refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc" kindref="compound">IntegerDesc</ref></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566" refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc_1a03eb11087b99130f7e098f8b6a3a5f50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc_1a03eb11087b99130f7e098f8b6a3a5f50" kindref="member">negative</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567" refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc_1a382f4c32680ded0fb611303f90ad0425" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc_1a382f4c32680ded0fb611303f90ad0425" kindref="member">base</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568" refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc_1a20ab2c3d23d9210773f377b083e898a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc_1a20ab2c3d23d9210773f377b083e898a4" kindref="member">value</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="570" refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc" kindref="compound">ArguDesc</ref><sp/>{</highlight></codeline>
<codeline lineno="571" refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a35ee7f646c94992a633956cfb1807d70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a35ee7f646c94992a633956cfb1807d70" kindref="member">arg_name</ref><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572" refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a40b774c45dd1737936c205efa87168e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a40b774c45dd1737936c205efa87168e4" kindref="member">grouping</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573" refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a2bb71b16c97fa27af41d8d03bca1f06a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a2bb71b16c97fa27af41d8d03bca1f06a" kindref="member">set_value</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574" refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1ac60c40e3b9798897ebbfd76040eb2208" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1ac60c40e3b9798897ebbfd76040eb2208" kindref="member">value</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CXXOPTS_NO_REGEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc" kindref="compound">IntegerDesc</ref><sp/><ref refid="namespacecxxopts_1_1values_1_1parser__tool_1a7912e06f8258eb2a618ba94a7ede46d4" kindref="member">SplitInteger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;text)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text.empty())</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;argument_incorrect_type&gt;(text);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntegerDesc<sp/>desc;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pdata<sp/>=<sp/>text.c_str();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pdata<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.negative<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(pdata,<sp/></highlight><highlight class="stringliteral">&quot;0x&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.base<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0x&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pdata<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.value<sp/>=<sp/>std::string(pdata);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;argument_incorrect_type&gt;(text);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>desc;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1_1values_1_1parser__tool_1a1b7a1e0063d8f2dd9dc02ada983a1aec" kindref="member">IsTrueText</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;text)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pdata<sp/>=<sp/>text.c_str();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pdata<sp/>==<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal"><sp/>||<sp/>*pdata<sp/>==<sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(pdata,<sp/></highlight><highlight class="stringliteral">&quot;rue\0&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(pdata,<sp/></highlight><highlight class="stringliteral">&quot;1\0&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1_1values_1_1parser__tool_1aef26707302ebd8565487e8d6268c2285" kindref="member">IsFalseText</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;text)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pdata<sp/>=<sp/>text.c_str();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pdata<sp/>==<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal"><sp/>||<sp/>*pdata<sp/>==<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(pdata,<sp/></highlight><highlight class="stringliteral">&quot;alse\0&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(pdata,<sp/></highlight><highlight class="stringliteral">&quot;0\0&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::pair&lt;std::string,<sp/>std::string&gt;<sp/><ref refid="namespacecxxopts_1_1values_1_1parser__tool_1a87d93ecf1931bfdf64feb40a008fa909" kindref="member">SplitSwitchDef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;text)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>short_sw,<sp/>long_sw;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pdata<sp/>=<sp/>text.c_str();</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isalnum(*pdata)<sp/>&amp;&amp;<sp/>*(pdata<sp/>+<sp/>1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>short_sw<sp/>=<sp/>std::string(1,<sp/>*pdata);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*pdata<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>{<sp/>pdata<sp/>+=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isalnum(*pdata))<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*store<sp/>=<sp/>pdata;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(isalnum(*pdata)<sp/>||<sp/>*pdata<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>||<sp/>*pdata<sp/>==<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pdata<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long_sw<sp/>=<sp/>std::string(store,<sp/>pdata<sp/>-<sp/>store);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;invalid_option_format_error&gt;(text);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;std::string,<sp/>std::string&gt;(short_sw,<sp/>long_sw);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ArguDesc<sp/><ref refid="namespacecxxopts_1_1values_1_1parser__tool_1a0c95fda26d85865d26182d1df061ed8a" kindref="member">ParseArgument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;matched)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArguDesc<sp/>argu_desc;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pdata<sp/>=<sp/>arg;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(pdata,<sp/></highlight><highlight class="stringliteral">&quot;--&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isalnum(*pdata))</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argu_desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a35ee7f646c94992a633956cfb1807d70" kindref="member">arg_name</ref>.push_back(*pdata);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(isalnum(*pdata)<sp/>||<sp/>*pdata<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>||<sp/>*pdata<sp/>==<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argu_desc.arg_name.push_back(*pdata);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argu_desc.arg_name.length()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pdata<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argu_desc.set_value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pdata<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argu_desc.value<sp/>=<sp/>std::string(pdata);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matched<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pdata<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matched<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(pdata,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argu_desc.grouping<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(isalnum(*pdata))</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argu_desc.arg_name.push_back(*pdata);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matched<sp/>=<sp/>!argu_desc.arg_name.empty()<sp/>&amp;&amp;<sp/>*pdata<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>argu_desc;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>CXXOPTS_NO_REGEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::basic_regex&lt;char&gt;<sp/>integer_pattern</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;(-)?(0x)?([0-9a-zA-Z]+)|((0x)?0)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::basic_regex&lt;char&gt;<sp/>truthy_pattern</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;(t|T)(rue)?|1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::basic_regex&lt;char&gt;<sp/>falsy_pattern</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;(f|F)(alse)?|0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::basic_regex&lt;char&gt;<sp/>option_matcher</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;--([[:alnum:]][-_[:alnum:]]+)(=(.*))?|-([[:alnum:]]+)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::basic_regex&lt;char&gt;<sp/>option_specifier</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;(([[:alnum:]]),)?[<sp/>]*([[:alnum:]][-_[:alnum:]]*)?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735" refid="namespacecxxopts_1_1values_1_1parser__tool_1a7912e06f8258eb2a618ba94a7ede46d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc" kindref="compound">IntegerDesc</ref><sp/><ref refid="namespacecxxopts_1_1values_1_1parser__tool_1a7912e06f8258eb2a618ba94a7ede46d4" kindref="member">SplitInteger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;text)</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::smatch<sp/>match;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::regex_match(text,<sp/>match,<sp/>integer_pattern);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(match.length()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;argument_incorrect_type&gt;(text);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc" kindref="compound">IntegerDesc</ref><sp/>desc;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc_1a03eb11087b99130f7e098f8b6a3a5f50" kindref="member">negative</ref><sp/>=<sp/>match[1];</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc_1a382f4c32680ded0fb611303f90ad0425" kindref="member">base</ref><sp/>=<sp/>match[2];</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc_1a20ab2c3d23d9210773f377b083e898a4" kindref="member">value</ref><sp/>=<sp/>match[3];</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(match.length(4)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc_1a382f4c32680ded0fb611303f90ad0425" kindref="member">base</ref><sp/>=<sp/>match[5];</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc_1a20ab2c3d23d9210773f377b083e898a4" kindref="member">value</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>desc;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>desc;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760" refid="namespacecxxopts_1_1values_1_1parser__tool_1a1b7a1e0063d8f2dd9dc02ada983a1aec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1_1values_1_1parser__tool_1a1b7a1e0063d8f2dd9dc02ada983a1aec" kindref="member">IsTrueText</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;text)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::smatch<sp/>result;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::regex_match(text,<sp/>result,<sp/>truthy_pattern);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!result.empty();</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767" refid="namespacecxxopts_1_1values_1_1parser__tool_1aef26707302ebd8565487e8d6268c2285" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1_1values_1_1parser__tool_1aef26707302ebd8565487e8d6268c2285" kindref="member">IsFalseText</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;text)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::smatch<sp/>result;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::regex_match(text,<sp/>result,<sp/>falsy_pattern);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!result.empty();</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774" refid="namespacecxxopts_1_1values_1_1parser__tool_1a87d93ecf1931bfdf64feb40a008fa909" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::pair&lt;std::string,<sp/>std::string&gt;<sp/><ref refid="namespacecxxopts_1_1values_1_1parser__tool_1a87d93ecf1931bfdf64feb40a008fa909" kindref="member">SplitSwitchDef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;text)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::match_results&lt;const<sp/>char*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::regex_match(text.c_str(),<sp/>result,<sp/>option_specifier);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.empty())</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;invalid_option_format_error&gt;(text);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>short_sw<sp/>=<sp/>result[2];</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>long_sw<sp/>=<sp/>result[3];</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;std::string,<sp/>std::string&gt;(short_sw,<sp/>long_sw);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789" refid="namespacecxxopts_1_1values_1_1parser__tool_1a0c95fda26d85865d26182d1df061ed8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc" kindref="compound">ArguDesc</ref><sp/><ref refid="namespacecxxopts_1_1values_1_1parser__tool_1a0c95fda26d85865d26182d1df061ed8a" kindref="member">ParseArgument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;matched)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::match_results&lt;const<sp/>char*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::regex_match(arg,<sp/>result,<sp/>option_matcher);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matched<sp/>=<sp/>!result.empty();</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc" kindref="compound">ArguDesc</ref><sp/>argu_desc;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matched)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argu_desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a35ee7f646c94992a633956cfb1807d70" kindref="member">arg_name</ref><sp/>=<sp/>result[1].str();</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argu_desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a2bb71b16c97fa27af41d8d03bca1f06a" kindref="member">set_value</ref><sp/>=<sp/>result[2].length()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argu_desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1ac60c40e3b9798897ebbfd76040eb2208" kindref="member">value</ref><sp/>=<sp/>result[3].str();</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result[4].length()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argu_desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a40b774c45dd1737936c205efa87168e4" kindref="member">grouping</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argu_desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a35ee7f646c94992a633956cfb1807d70" kindref="member">arg_name</ref><sp/>=<sp/>result[4].str();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>argu_desc;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>CXXOPTS_NO_REGEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>CXXOPTS_NO_REGEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814" refid="namespacecxxopts_1_1values_1_1detail" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>B&gt;</highlight></codeline>
<codeline lineno="817" refid="structcxxopts_1_1values_1_1detail_1_1_signed_check" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcxxopts_1_1values_1_1detail_1_1_signed_check" kindref="compound">SignedCheck</ref>;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="820" refid="structcxxopts_1_1values_1_1detail_1_1_signed_check_3_01_t_00_01true_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcxxopts_1_1values_1_1detail_1_1_signed_check" kindref="compound">SignedCheck</ref>&lt;T,<sp/>true&gt;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824" refid="structcxxopts_1_1values_1_1detail_1_1_signed_check_3_01_t_00_01true_01_4_1a03b02f6c1e500d96c8b8b13cbe858ce4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcxxopts_1_1values_1_1detail_1_1_signed_check_3_01_t_00_01true_01_4_1a03b02f6c1e500d96c8b8b13cbe858ce4" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>negative,<sp/>U<sp/>u,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(negative)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u<sp/>&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">U</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((std::numeric_limits&lt;T&gt;::min)()))</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;argument_incorrect_type&gt;(text);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u<sp/>&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">U</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((std::numeric_limits&lt;T&gt;::max)()))</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;argument_incorrect_type&gt;(text);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="844" refid="structcxxopts_1_1values_1_1detail_1_1_signed_check_3_01_t_00_01false_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcxxopts_1_1values_1_1detail_1_1_signed_check" kindref="compound">SignedCheck</ref>&lt;T,<sp/>false&gt;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848" refid="structcxxopts_1_1values_1_1detail_1_1_signed_check_3_01_t_00_01false_01_4_1a41fbbac7903836954434b45eae60bb44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcxxopts_1_1values_1_1detail_1_1_signed_check_3_01_t_00_01false_01_4_1a41fbbac7903836954434b45eae60bb44" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>U,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853" refid="namespacecxxopts_1_1values_1_1detail_1aa76e231a637c53e45ca09e7e87e7ea27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1_1detail_1aa76e231a637c53e45ca09e7e87e7ea27" kindref="member">check_signed_range</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>negative,<sp/>U<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text)</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcxxopts_1_1values_1_1detail_1_1_signed_check" kindref="compound">SignedCheck&lt;T, std::numeric_limits&lt;T&gt;::is_signed</ref>&gt;()(negative,<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,<sp/>text);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861" refid="namespacecxxopts_1_1values_1a49e0fbdea76975c4b740475dd9aec816" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a49e0fbdea76975c4b740475dd9aec816" kindref="member">checked_negate</ref>(R&amp;<sp/>r,<sp/>T&amp;&amp;<sp/>t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/>std::true_type)</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>got<sp/>to<sp/>here,<sp/>then<sp/>`t`<sp/>is<sp/>a<sp/>positive<sp/>number<sp/>that<sp/>fits<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`R`.<sp/>So<sp/>to<sp/>avoid<sp/>MSVC<sp/>C4146,<sp/>we<sp/>first<sp/>cast<sp/>it<sp/>to<sp/>`R`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://github.com/jarro2783/cxxopts/issues/62<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">R</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(-</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">R</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(t-1)-1);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871" refid="namespacecxxopts_1_1values_1ad346cd7dc5d4d470492c85de801a16b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a49e0fbdea76975c4b740475dd9aec816" kindref="member">checked_negate</ref>(R&amp;,<sp/>T&amp;&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text,<sp/>std::false_type)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;argument_incorrect_type&gt;(text);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878" refid="namespacecxxopts_1_1values_1a2e205dc91741b7dde43b825da60c9f4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a2e205dc91741b7dde43b825da60c9f4c" kindref="member">integer_parser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text,<sp/>T&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc" kindref="compound">parser_tool::IntegerDesc</ref><sp/>int_desc<sp/>=<sp/><ref refid="namespacecxxopts_1_1values_1_1parser__tool_1a7912e06f8258eb2a618ba94a7ede46d4" kindref="member">parser_tool::SplitInteger</ref>(text);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">US<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::make_unsigned&lt;T&gt;::type;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_signed<sp/>=<sp/>std::numeric_limits&lt;T&gt;::is_signed;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negative<sp/><sp/><sp/><sp/>=<sp/>int_desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc_1a03eb11087b99130f7e098f8b6a3a5f50" kindref="member">negative</ref>.length()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>base<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>int_desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc_1a382f4c32680ded0fb611303f90ad0425" kindref="member">base</ref>.length()<sp/>&gt;<sp/>0<sp/>?<sp/>16<sp/>:<sp/>10;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>value_match<sp/>=<sp/>int_desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_integer_desc_1a20ab2c3d23d9210773f377b083e898a4" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>US<sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch<sp/>:<sp/>value_match)</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>US<sp/>digit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ch<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digit<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">US</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ch<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base<sp/>==<sp/>16<sp/>&amp;&amp;<sp/>ch<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ch<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digit<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">US</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ch<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>10);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base<sp/>==<sp/>16<sp/>&amp;&amp;<sp/>ch<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ch<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digit<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">US</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ch<sp/>-<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>+<sp/>10);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;argument_incorrect_type&gt;(text);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>US<sp/>next<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">US</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result<sp/>*<sp/>base<sp/>+<sp/>digit);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&gt;<sp/>next)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;argument_incorrect_type&gt;(text);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::check_signed_range&lt;T&gt;(negative,<sp/>result,<sp/>text);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(negative)</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checked_negate&lt;T&gt;(<ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,<sp/>result,<sp/>text,<sp/>std::integral_constant&lt;bool,<sp/>is_signed&gt;());</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="934" refid="namespacecxxopts_1_1values_1a56fb16f3a09e011db85757491c52691e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1_1values_1a56fb16f3a09e011db85757491c52691e" kindref="member">stringstream_parser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text,<sp/>T&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>in(text);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>&gt;&gt;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!in)<sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;argument_incorrect_type&gt;(text);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_integral&lt;T&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="946" refid="namespacecxxopts_1_1values_1a9782d53713f30ced7138719bd966db2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1_1values_1a9782d53713f30ced7138719bd966db2b" kindref="member">parse_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text,<sp/>T&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a2e205dc91741b7dde43b825da60c9f4c" kindref="member">integer_parser</ref>(text,<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953" refid="namespacecxxopts_1_1values_1aaa73e425c1d63db7975dbebd86c2f947" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a9782d53713f30ced7138719bd966db2b" kindref="member">parse_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecxxopts_1_1values_1_1parser__tool_1a1b7a1e0063d8f2dd9dc02ada983a1aec" kindref="member">parser_tool::IsTrueText</ref>(text))</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecxxopts_1_1values_1_1parser__tool_1aef26707302ebd8565487e8d6268c2285" kindref="member">parser_tool::IsFalseText</ref>(text))</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;argument_incorrect_type&gt;(text);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972" refid="namespacecxxopts_1_1values_1a1643e21992e1d5ad5f2012f01f6f6f0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a9782d53713f30ced7138719bd966db2b" kindref="member">parse_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text,<sp/>std::string&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref><sp/>=<sp/>text;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>fallback<sp/>parser.<sp/>It<sp/>uses<sp/>the<sp/>stringstream<sp/>parser<sp/>to<sp/>parse<sp/>all<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>not<sp/>been<sp/>overloaded<sp/>explicitly.<sp/><sp/>It<sp/>has<sp/>to<sp/>be<sp/>placed<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source<sp/>code<sp/>before<sp/>all<sp/>other<sp/>more<sp/>specialized<sp/>templates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!std::is_integral&lt;T&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a9782d53713f30ced7138719bd966db2b" kindref="member">parse_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text,<sp/>T&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a56fb16f3a09e011db85757491c52691e" kindref="member">stringstream_parser</ref>(text,<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990" refid="namespacecxxopts_1_1values_1a9cc26abde531fd7df6ff0ff07cc6d413" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a9782d53713f30ced7138719bd966db2b" kindref="member">parse_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text,<sp/>std::vector&lt;T&gt;&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text.empty())<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>v;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a9782d53713f30ced7138719bd966db2b" kindref="member">parse_value</ref>(text,<sp/>v);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>.emplace_back(std::move(v));</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>in(text);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>token;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!in.eof()<sp/>&amp;&amp;<sp/>std::getline(in,<sp/>token,<sp/><ref refid="cxxopts_8_h_1a564e0c1dcc7d9a5202f36755f4fb07c7" kindref="member">CXXOPTS_VECTOR_DELIMITER</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>v;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a9782d53713f30ced7138719bd966db2b" kindref="member">parse_value</ref>(token,<sp/>v);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>.emplace_back(std::move(v));</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CXXOPTS_HAS_OPTIONAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a9782d53713f30ced7138719bd966db2b" kindref="member">parse_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text,<sp/>std::optional&lt;T&gt;&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>result;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a9782d53713f30ced7138719bd966db2b" kindref="member">parse_value</ref>(text,<sp/>result);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref><sp/>=<sp/>std::move(result);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019" refid="namespacecxxopts_1_1values_1a9db2f6a97c2fbfd06a5a342917fbd21f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1_1values_1a9782d53713f30ced7138719bd966db2b" kindref="member">parse_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;<sp/>c)</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text.length()<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;argument_incorrect_type&gt;(text);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>text[0];</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1030" refid="structcxxopts_1_1values_1_1type__is__container" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcxxopts_1_1values_1_1type__is__container" kindref="compound">type_is_container</ref></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1032" refid="structcxxopts_1_1values_1_1type__is__container_1a7f4d1663c787047542c5033e6d3096f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcxxopts_1_1values_1_1type__is__container_1a7f4d1663c787047542c5033e6d3096f9" kindref="member">value</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1036" refid="structcxxopts_1_1values_1_1type__is__container_3_01std_1_1vector_3_01_t_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcxxopts_1_1values_1_1type__is__container" kindref="compound">type_is_container</ref>&lt;std::vector&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1038" refid="structcxxopts_1_1values_1_1type__is__container_3_01std_1_1vector_3_01_t_01_4_01_4_1a696f25c27190618461fa842bfe8adfb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcxxopts_1_1values_1_1type__is__container_1a7f4d1663c787047542c5033e6d3096f9" kindref="member">value</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1042" refid="classcxxopts_1_1values_1_1abstract__value" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1values_1_1abstract__value" kindref="compound">abstract_value</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_value" kindref="compound">Value</ref></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1044" refid="classcxxopts_1_1values_1_1abstract__value_1a6b8c97ae22663547247602545e8a1cf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1values_1_1abstract__value" kindref="compound">Self</ref><sp/>=<sp/><ref refid="classcxxopts_1_1values_1_1abstract__value" kindref="compound">abstract_value&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1047" refid="classcxxopts_1_1values_1_1abstract__value_1abaf85af44d7de0d08508ea50c911062f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1abaf85af44d7de0d08508ea50c911062f" kindref="member">abstract_value</ref>()</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a0df330cac57a96d7ac25dd6a666d5b94" kindref="member">m_result</ref>(std::make_shared&lt;T&gt;())</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1ab5b256909ddbb516bd46d197dadf073e" kindref="member">m_store</ref>(<ref refid="classcxxopts_1_1values_1_1abstract__value_1a0df330cac57a96d7ac25dd6a666d5b94" kindref="member">m_result</ref>.<ref refid="classcxxopts_1_1values_1_1abstract__value_1a13587e25582d606cd757d3ad5a4df3b9" kindref="member">get</ref>())</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053" refid="classcxxopts_1_1values_1_1abstract__value_1a578211778e2d3a3eb5c9f9a57b5b9cd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a578211778e2d3a3eb5c9f9a57b5b9cd1" kindref="member">abstract_value</ref>(T*<sp/>t)</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1ab5b256909ddbb516bd46d197dadf073e" kindref="member">m_store</ref>(t)</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058" refid="classcxxopts_1_1values_1_1abstract__value_1adeb790d413e867e47324d1a04ff9e601" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1adeb790d413e867e47324d1a04ff9e601" kindref="member">~abstract_value</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060" refid="classcxxopts_1_1values_1_1abstract__value_1ae7953d00c1885a9704dba9cbba166e4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value" kindref="compound">abstract_value</ref>&amp;<sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1ae7953d00c1885a9704dba9cbba166e4d" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value" kindref="compound">abstract_value</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062" refid="classcxxopts_1_1values_1_1abstract__value_1a512fb323456e370b1f7b784d57b55c25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a512fb323456e370b1f7b784d57b55c25" kindref="member">abstract_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value" kindref="compound">abstract_value</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhs.<ref refid="classcxxopts_1_1values_1_1abstract__value_1a0df330cac57a96d7ac25dd6a666d5b94" kindref="member">m_result</ref>)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a0df330cac57a96d7ac25dd6a666d5b94" kindref="member">m_result</ref><sp/>=<sp/>std::make_shared&lt;T&gt;();</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1ab5b256909ddbb516bd46d197dadf073e" kindref="member">m_store</ref><sp/>=<sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a0df330cac57a96d7ac25dd6a666d5b94" kindref="member">m_result</ref>.get();</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1ab5b256909ddbb516bd46d197dadf073e" kindref="member">m_store</ref><sp/>=<sp/>rhs.<ref refid="classcxxopts_1_1values_1_1abstract__value_1ab5b256909ddbb516bd46d197dadf073e" kindref="member">m_store</ref>;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1ad16dfdf6856b66c4ed6b35edfade5218" kindref="member">m_default</ref><sp/>=<sp/>rhs.<ref refid="classcxxopts_1_1values_1_1abstract__value_1ad16dfdf6856b66c4ed6b35edfade5218" kindref="member">m_default</ref>;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a3f9bdb2d94189ddf78eb5b338d5c33bc" kindref="member">m_implicit</ref><sp/>=<sp/>rhs.<ref refid="classcxxopts_1_1values_1_1abstract__value_1a3f9bdb2d94189ddf78eb5b338d5c33bc" kindref="member">m_implicit</ref>;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a0e3f038dc1c0aeab3e5c517d9e033ee4" kindref="member">m_default_value</ref><sp/>=<sp/>rhs.<ref refid="classcxxopts_1_1values_1_1abstract__value_1a0e3f038dc1c0aeab3e5c517d9e033ee4" kindref="member">m_default_value</ref>;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a69ed02e5ce2c431fad801ed5bb1cde26" kindref="member">m_implicit_value</ref><sp/>=<sp/>rhs.<ref refid="classcxxopts_1_1values_1_1abstract__value_1a69ed02e5ce2c431fad801ed5bb1cde26" kindref="member">m_implicit_value</ref>;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081" refid="classcxxopts_1_1values_1_1abstract__value_1ad6599c6a72ae7903a7a9b6dda2f828cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1ad6599c6a72ae7903a7a9b6dda2f828cf" kindref="member">parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text)</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1082"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a9782d53713f30ced7138719bd966db2b" kindref="member">parse_value</ref>(text,<sp/>*<ref refid="classcxxopts_1_1values_1_1abstract__value_1ab5b256909ddbb516bd46d197dadf073e" kindref="member">m_store</ref>);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087" refid="classcxxopts_1_1values_1_1abstract__value_1a1b7954bea9d4db388125d3427203dba8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a1b7954bea9d4db388125d3427203dba8" kindref="member">is_container</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1088"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structcxxopts_1_1values_1_1type__is__container" kindref="compound">type_is_container&lt;T&gt;::value</ref>;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093" refid="classcxxopts_1_1values_1_1abstract__value_1aa8dfcbbfb1f9b28261a3e4fa564a02c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1aa8dfcbbfb1f9b28261a3e4fa564a02c1" kindref="member">parse</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1094"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a9782d53713f30ced7138719bd966db2b" kindref="member">parse_value</ref>(<ref refid="classcxxopts_1_1values_1_1abstract__value_1a0e3f038dc1c0aeab3e5c517d9e033ee4" kindref="member">m_default_value</ref>,<sp/>*<ref refid="classcxxopts_1_1values_1_1abstract__value_1ab5b256909ddbb516bd46d197dadf073e" kindref="member">m_store</ref>);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099" refid="classcxxopts_1_1values_1_1abstract__value_1a8ab35d0f85ed76406651b442f4094cb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a8ab35d0f85ed76406651b442f4094cb9" kindref="member">has_default</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1100"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1ad16dfdf6856b66c4ed6b35edfade5218" kindref="member">m_default</ref>;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105" refid="classcxxopts_1_1values_1_1abstract__value_1af832b3696ce245e5b4c402ffc5af6155" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1af832b3696ce245e5b4c402ffc5af6155" kindref="member">has_implicit</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1106"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a3f9bdb2d94189ddf78eb5b338d5c33bc" kindref="member">m_implicit</ref>;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Value&gt;</highlight></codeline>
<codeline lineno="1111" refid="classcxxopts_1_1values_1_1abstract__value_1a3bc6dc59f9bec5811bda3ca86a5ba22e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a3bc6dc59f9bec5811bda3ca86a5ba22e" kindref="member">default_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1112"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1ad16dfdf6856b66c4ed6b35edfade5218" kindref="member">m_default</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a0e3f038dc1c0aeab3e5c517d9e033ee4" kindref="member">m_default_value</ref><sp/>=<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shared_from_this();</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Value&gt;</highlight></codeline>
<codeline lineno="1119" refid="classcxxopts_1_1values_1_1abstract__value_1aac9bc16b6695a1b1aca9d87ed2c3261a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1aac9bc16b6695a1b1aca9d87ed2c3261a" kindref="member">implicit_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1120"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a3f9bdb2d94189ddf78eb5b338d5c33bc" kindref="member">m_implicit</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a69ed02e5ce2c431fad801ed5bb1cde26" kindref="member">m_implicit_value</ref><sp/>=<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shared_from_this();</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Value&gt;</highlight></codeline>
<codeline lineno="1127" refid="classcxxopts_1_1values_1_1abstract__value_1a286d315daba090046b6c72a6711d389d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a286d315daba090046b6c72a6711d389d" kindref="member">no_implicit_value</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1128"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a3f9bdb2d94189ddf78eb5b338d5c33bc" kindref="member">m_implicit</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shared_from_this();</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string</highlight></codeline>
<codeline lineno="1134" refid="classcxxopts_1_1values_1_1abstract__value_1a901928871ef3566e74f081d5ab9020aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a901928871ef3566e74f081d5ab9020aa" kindref="member">get_default_value</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1135"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a0e3f038dc1c0aeab3e5c517d9e033ee4" kindref="member">m_default_value</ref>;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string</highlight></codeline>
<codeline lineno="1140" refid="classcxxopts_1_1values_1_1abstract__value_1a5e5aa0e29056c3daa7e5a1defd69f20f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a5e5aa0e29056c3daa7e5a1defd69f20f" kindref="member">get_implicit_value</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1141"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a69ed02e5ce2c431fad801ed5bb1cde26" kindref="member">m_implicit_value</ref>;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146" refid="classcxxopts_1_1values_1_1abstract__value_1ac4a5f57c63086de1eac4cbefe09d99ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1ac4a5f57c63086de1eac4cbefe09d99ce" kindref="member">is_boolean</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1147"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::is_same&lt;T,<sp/>bool&gt;::value;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;</highlight></codeline>
<codeline lineno="1152" refid="classcxxopts_1_1values_1_1abstract__value_1a13587e25582d606cd757d3ad5a4df3b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a13587e25582d606cd757d3ad5a4df3b9" kindref="member">get</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1153"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcxxopts_1_1values_1_1abstract__value_1ab5b256909ddbb516bd46d197dadf073e" kindref="member">m_store</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classcxxopts_1_1values_1_1abstract__value_1a0df330cac57a96d7ac25dd6a666d5b94" kindref="member">m_result</ref>;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classcxxopts_1_1values_1_1abstract__value_1ab5b256909ddbb516bd46d197dadf073e" kindref="member">m_store</ref>;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1162" refid="classcxxopts_1_1values_1_1abstract__value_1a0df330cac57a96d7ac25dd6a666d5b94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;T&gt;<sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a0df330cac57a96d7ac25dd6a666d5b94" kindref="member">m_result</ref>{};</highlight></codeline>
<codeline lineno="1163" refid="classcxxopts_1_1values_1_1abstract__value_1ab5b256909ddbb516bd46d197dadf073e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1ab5b256909ddbb516bd46d197dadf073e" kindref="member">m_store</ref>{};</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165" refid="classcxxopts_1_1values_1_1abstract__value_1ad16dfdf6856b66c4ed6b35edfade5218" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1ad16dfdf6856b66c4ed6b35edfade5218" kindref="member">m_default</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1166" refid="classcxxopts_1_1values_1_1abstract__value_1a3f9bdb2d94189ddf78eb5b338d5c33bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a3f9bdb2d94189ddf78eb5b338d5c33bc" kindref="member">m_implicit</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168" refid="classcxxopts_1_1values_1_1abstract__value_1a0e3f038dc1c0aeab3e5c517d9e033ee4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a0e3f038dc1c0aeab3e5c517d9e033ee4" kindref="member">m_default_value</ref>{};</highlight></codeline>
<codeline lineno="1169" refid="classcxxopts_1_1values_1_1abstract__value_1a69ed02e5ce2c431fad801ed5bb1cde26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a69ed02e5ce2c431fad801ed5bb1cde26" kindref="member">m_implicit_value</ref>{};</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1173" refid="classcxxopts_1_1values_1_1standard__value" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1values_1_1standard__value" kindref="compound">standard_value</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value" kindref="compound">abstract_value</ref>&lt;T&gt;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1values_1_1abstract__value" kindref="compound">abstract_value</ref>&lt;T&gt;<ref refid="classcxxopts_1_1values_1_1abstract__value_1abaf85af44d7de0d08508ea50c911062f" kindref="member">::abstract_value</ref>;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cxxopts_8_h_1a6d9ad4f693e16a4c6cdce8373f403e5d" kindref="member">CXXOPTS_NODISCARD</ref></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Value&gt;</highlight></codeline>
<codeline lineno="1180" refid="classcxxopts_1_1values_1_1standard__value_1acf40716827c2c2dfab62154db42bfe9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1standard__value_1acf40716827c2c2dfab62154db42bfe9a" kindref="member">clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1181"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;standard_value&lt;T&gt;&gt;(*this);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1187" refid="classcxxopts_1_1values_1_1standard__value_3_01bool_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1values_1_1standard__value" kindref="compound">standard_value</ref>&lt;bool&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value" kindref="compound">abstract_value</ref>&lt;bool&gt;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1190" refid="classcxxopts_1_1values_1_1standard__value_3_01bool_01_4_1a6c8c8a456e2deda84f26939f0335fe8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1standard__value_3_01bool_01_4_1a6c8c8a456e2deda84f26939f0335fe8c" kindref="member">~standard_value</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192" refid="classcxxopts_1_1values_1_1standard__value_3_01bool_01_4_1a47718a070233f5c631b433979fdf808e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1standard__value_3_01bool_01_4_1a47718a070233f5c631b433979fdf808e" kindref="member">standard_value</ref>()</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_default_and_implicit();</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197" refid="classcxxopts_1_1values_1_1standard__value_3_01bool_01_4_1aa5c0c7c48a5f27ef5ce821970a0ced94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1values_1_1standard__value_3_01bool_01_4_1aa5c0c7c48a5f27ef5ce821970a0ced94" kindref="member">standard_value</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>b)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1values_1_1abstract__value" kindref="compound">abstract_value</ref>(b)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_default_and_implicit();</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Value&gt;</highlight></codeline>
<codeline lineno="1204" refid="classcxxopts_1_1values_1_1standard__value_3_01bool_01_4_1a046e7e94db4d7ec50c031a3078733f67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1standard__value_3_01bool_01_4_1a046e7e94db4d7ec50c031a3078733f67" kindref="member">clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1205"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;standard_value&lt;bool&gt;&gt;(*this);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212" refid="classcxxopts_1_1values_1_1standard__value_3_01bool_01_4_1a2f0911fd51e2bec0f6409806ccb0ec47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1standard__value_3_01bool_01_4_1a2f0911fd51e2bec0f6409806ccb0ec47" kindref="member">set_default_and_implicit</ref>()</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1ad16dfdf6856b66c4ed6b35edfade5218" kindref="member">m_default</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a0e3f038dc1c0aeab3e5c517d9e033ee4" kindref="member">m_default_value</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a3f9bdb2d94189ddf78eb5b338d5c33bc" kindref="member">m_implicit</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1values_1_1abstract__value_1a69ed02e5ce2c431fad801ed5bb1cde26" kindref="member">m_implicit_value</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Value&gt;</highlight></codeline>
<codeline lineno="1224" refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>()</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;values::standard_value&lt;T&gt;&gt;();</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Value&gt;</highlight></codeline>
<codeline lineno="1231" refid="namespacecxxopts_1a9a3c999d4e9bd55dec5daa5daef79c26" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>(T&amp;<sp/>t)</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;values::standard_value&lt;T&gt;&gt;(&amp;t);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OptionAdder;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238" refid="classcxxopts_1_1_option_details" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_option_details" kindref="compound">OptionDetails</ref></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1241" refid="classcxxopts_1_1_option_details_1a7c85e740b5d1c8e61d7711dd57de7568" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_details_1a7c85e740b5d1c8e61d7711dd57de7568" kindref="member">OptionDetails</ref></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>short_,</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>long_,</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref><sp/>desc,</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;const<sp/>Value&gt;<sp/>val</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_details_1a4454eb1ffedcf5656ab408da51542dad" kindref="member">m_short</ref>(std::move(short_))</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_option_details_1a15317e92ab6acd722736d8a6ef0dfab0" kindref="member">m_long</ref>(std::move(long_))</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_option_details_1aa34bf6a94eeb9b914b96344f52519e16" kindref="member">m_desc</ref>(std::move(desc))</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_option_details_1af610b82c4f86648ac54c7d2b2639e7c0" kindref="member">m_value</ref>(std::move(val))</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_option_details_1abe72cc1db4b05a00bd777badafe3a322" kindref="member">m_count</ref>(0)</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_details_1a97cd0d8b6131ee989815bc0abe1fbedf" kindref="member">m_hash</ref><sp/>=<sp/>std::hash&lt;std::string&gt;{}(<ref refid="classcxxopts_1_1_option_details_1a15317e92ab6acd722736d8a6ef0dfab0" kindref="member">m_long</ref><sp/>+<sp/><ref refid="classcxxopts_1_1_option_details_1a4454eb1ffedcf5656ab408da51542dad" kindref="member">m_short</ref>);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257" refid="classcxxopts_1_1_option_details_1a5837c0d007fd729347f594b1227648be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_details_1a5837c0d007fd729347f594b1227648be" kindref="member">OptionDetails</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_details" kindref="compound">OptionDetails</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_details_1aa34bf6a94eeb9b914b96344f52519e16" kindref="member">m_desc</ref>(rhs.<ref refid="classcxxopts_1_1_option_details_1aa34bf6a94eeb9b914b96344f52519e16" kindref="member">m_desc</ref>)</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_option_details_1af610b82c4f86648ac54c7d2b2639e7c0" kindref="member">m_value</ref>(rhs.<ref refid="classcxxopts_1_1_option_details_1af610b82c4f86648ac54c7d2b2639e7c0" kindref="member">m_value</ref>-&gt;clone())</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_option_details_1abe72cc1db4b05a00bd777badafe3a322" kindref="member">m_count</ref>(rhs.<ref refid="classcxxopts_1_1_option_details_1abe72cc1db4b05a00bd777badafe3a322" kindref="member">m_count</ref>)</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264" refid="classcxxopts_1_1_option_details_1aecc7516afb809f71032168cbc5ee4036" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_details_1aecc7516afb809f71032168cbc5ee4036" kindref="member">OptionDetails</ref>(<ref refid="classcxxopts_1_1_option_details" kindref="compound">OptionDetails</ref>&amp;&amp;<sp/>rhs)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cxxopts_8_h_1a6d9ad4f693e16a4c6cdce8373f403e5d" kindref="member">CXXOPTS_NODISCARD</ref></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;</highlight></codeline>
<codeline lineno="1268" refid="classcxxopts_1_1_option_details_1a44fbe142fd8355c93509726b0dafcc51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_details_1a44fbe142fd8355c93509726b0dafcc51" kindref="member">description</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1269"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_details_1aa34bf6a94eeb9b914b96344f52519e16" kindref="member">m_desc</ref>;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cxxopts_8_h_1a6d9ad4f693e16a4c6cdce8373f403e5d" kindref="member">CXXOPTS_NODISCARD</ref></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_value" kindref="compound">Value</ref>&amp;</highlight></codeline>
<codeline lineno="1275" refid="classcxxopts_1_1_option_details_1a3f90596c7b7634449a51370f211163a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_details_1a3f90596c7b7634449a51370f211163a8" kindref="member">value</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classcxxopts_1_1_option_details_1af610b82c4f86648ac54c7d2b2639e7c0" kindref="member">m_value</ref>;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cxxopts_8_h_1a6d9ad4f693e16a4c6cdce8373f403e5d" kindref="member">CXXOPTS_NODISCARD</ref></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Value&gt;</highlight></codeline>
<codeline lineno="1281" refid="classcxxopts_1_1_option_details_1a3ff160262711ae6eebb41649491e75e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_details_1a3ff160262711ae6eebb41649491e75e6" kindref="member">make_storage</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1282"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_details_1af610b82c4f86648ac54c7d2b2639e7c0" kindref="member">m_value</ref>-&gt;clone();</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cxxopts_8_h_1a6d9ad4f693e16a4c6cdce8373f403e5d" kindref="member">CXXOPTS_NODISCARD</ref></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;</highlight></codeline>
<codeline lineno="1288" refid="classcxxopts_1_1_option_details_1a814a9b4b5d3bfc6324c10c7b92a87bef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_details_1a814a9b4b5d3bfc6324c10c7b92a87bef" kindref="member">short_name</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1289"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_details_1a4454eb1ffedcf5656ab408da51542dad" kindref="member">m_short</ref>;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cxxopts_8_h_1a6d9ad4f693e16a4c6cdce8373f403e5d" kindref="member">CXXOPTS_NODISCARD</ref></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;</highlight></codeline>
<codeline lineno="1295" refid="classcxxopts_1_1_option_details_1a4af4381fab0419f9d032d1eb43e71b1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_details_1a4af4381fab0419f9d032d1eb43e71b1b" kindref="member">long_name</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1296"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_details_1a15317e92ab6acd722736d8a6ef0dfab0" kindref="member">m_long</ref>;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301" refid="classcxxopts_1_1_option_details_1a8e2ae6185e06695a933367137574817e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_details_1a8e2ae6185e06695a933367137574817e" kindref="member">hash</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1302"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_details_1a97cd0d8b6131ee989815bc0abe1fbedf" kindref="member">m_hash</ref>;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1307" refid="classcxxopts_1_1_option_details_1a4454eb1ffedcf5656ab408da51542dad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcxxopts_1_1_option_details_1a4454eb1ffedcf5656ab408da51542dad" kindref="member">m_short</ref>{};</highlight></codeline>
<codeline lineno="1308" refid="classcxxopts_1_1_option_details_1a15317e92ab6acd722736d8a6ef0dfab0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcxxopts_1_1_option_details_1a15317e92ab6acd722736d8a6ef0dfab0" kindref="member">m_long</ref>{};</highlight></codeline>
<codeline lineno="1309" refid="classcxxopts_1_1_option_details_1aa34bf6a94eeb9b914b96344f52519e16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref><sp/><ref refid="classcxxopts_1_1_option_details_1aa34bf6a94eeb9b914b96344f52519e16" kindref="member">m_desc</ref>{};</highlight></codeline>
<codeline lineno="1310" refid="classcxxopts_1_1_option_details_1af610b82c4f86648ac54c7d2b2639e7c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;const<sp/>Value&gt;<sp/><ref refid="classcxxopts_1_1_option_details_1af610b82c4f86648ac54c7d2b2639e7c0" kindref="member">m_value</ref>{};</highlight></codeline>
<codeline lineno="1311" refid="classcxxopts_1_1_option_details_1abe72cc1db4b05a00bd777badafe3a322" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_details_1abe72cc1db4b05a00bd777badafe3a322" kindref="member">m_count</ref>;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313" refid="classcxxopts_1_1_option_details_1a97cd0d8b6131ee989815bc0abe1fbedf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_details_1a97cd0d8b6131ee989815bc0abe1fbedf" kindref="member">m_hash</ref>{};</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316" refid="structcxxopts_1_1_help_option_details" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcxxopts_1_1_help_option_details" kindref="compound">HelpOptionDetails</ref></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1318" refid="structcxxopts_1_1_help_option_details_1a83cb4bc76deb1d40c89de4165e4b0cdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structcxxopts_1_1_help_option_details_1a83cb4bc76deb1d40c89de4165e4b0cdc" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="1319" refid="structcxxopts_1_1_help_option_details_1a19a4fe10f8a5b47ec8e2134bea26aabe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structcxxopts_1_1_help_option_details_1a19a4fe10f8a5b47ec8e2134bea26aabe" kindref="member">l</ref>;</highlight></codeline>
<codeline lineno="1320" refid="structcxxopts_1_1_help_option_details_1a7c83455289612b05713b87154877caec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref><sp/><ref refid="structcxxopts_1_1_help_option_details_1a7c83455289612b05713b87154877caec" kindref="member">desc</ref>;</highlight></codeline>
<codeline lineno="1321" refid="structcxxopts_1_1_help_option_details_1ac869dd2ac03fc090f34bce1907f5edd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcxxopts_1_1_help_option_details_1ac869dd2ac03fc090f34bce1907f5edd5" kindref="member">has_default</ref>;</highlight></codeline>
<codeline lineno="1322" refid="structcxxopts_1_1_help_option_details_1aa59a81e78fb7e785dd8b61ab21233db8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structcxxopts_1_1_help_option_details_1aa59a81e78fb7e785dd8b61ab21233db8" kindref="member">default_value</ref>;</highlight></codeline>
<codeline lineno="1323" refid="structcxxopts_1_1_help_option_details_1ad9ddbdca27930394f32b51f7bf3b1748" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcxxopts_1_1_help_option_details_1ad9ddbdca27930394f32b51f7bf3b1748" kindref="member">has_implicit</ref>;</highlight></codeline>
<codeline lineno="1324" refid="structcxxopts_1_1_help_option_details_1a21114f51515edf454e214f3c881ae212" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structcxxopts_1_1_help_option_details_1a21114f51515edf454e214f3c881ae212" kindref="member">implicit_value</ref>;</highlight></codeline>
<codeline lineno="1325" refid="structcxxopts_1_1_help_option_details_1a61afda425e73f688a21eae557efa8f25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structcxxopts_1_1_help_option_details_1a61afda425e73f688a21eae557efa8f25" kindref="member">arg_help</ref>;</highlight></codeline>
<codeline lineno="1326" refid="structcxxopts_1_1_help_option_details_1a68e51f91246958b2e3e84d0178a55afe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcxxopts_1_1_help_option_details_1a68e51f91246958b2e3e84d0178a55afe" kindref="member">is_container</ref>;</highlight></codeline>
<codeline lineno="1327" refid="structcxxopts_1_1_help_option_details_1ae9edda8b102865694f3b76ef162f0ead" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcxxopts_1_1_help_option_details_1ae9edda8b102865694f3b76ef162f0ead" kindref="member">is_boolean</ref>;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330" refid="structcxxopts_1_1_help_group_details" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcxxopts_1_1_help_group_details" kindref="compound">HelpGroupDetails</ref></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1332" refid="structcxxopts_1_1_help_group_details_1abc389252a862724a1404d3c22fda6fc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structcxxopts_1_1_help_group_details_1abc389252a862724a1404d3c22fda6fc2" kindref="member">name</ref>{};</highlight></codeline>
<codeline lineno="1333" refid="structcxxopts_1_1_help_group_details_1a42db1cc0f95adbda0b1d73ca54ffb468" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structcxxopts_1_1_help_group_details_1a42db1cc0f95adbda0b1d73ca54ffb468" kindref="member">description</ref>{};</highlight></codeline>
<codeline lineno="1334" refid="structcxxopts_1_1_help_group_details_1ab2869d214c7fc9ac859d030afca33243" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;HelpOptionDetails&gt;<sp/><ref refid="structcxxopts_1_1_help_group_details_1ab2869d214c7fc9ac859d030afca33243" kindref="member">options</ref>{};</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337" refid="classcxxopts_1_1_option_value" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_option_value" kindref="compound">OptionValue</ref></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341" refid="classcxxopts_1_1_option_value_1a69645a46405198eea09f45137f1bcf8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a69645a46405198eea09f45137f1bcf8b" kindref="member">parse</ref></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>OptionDetails&gt;&amp;<sp/>details,</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a5e62e7e64679e627ba8946c36a559f2a" kindref="member">ensure_value</ref>(details);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="classcxxopts_1_1_option_value_1a1c8d74b5c22ef6350d3a2350c76c6613" kindref="member">m_count</ref>;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a4bbafc7ad74075d05aebd5ddc18d83cd" kindref="member">m_value</ref>-&gt;parse(text);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a2045cf1795fee8b9860e1b7a8dd00023" kindref="member">m_long_name</ref><sp/>=<sp/>&amp;details-&gt;long_name();</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354" refid="classcxxopts_1_1_option_value_1a58f4dc95f2a36c01f64c026baae6795f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a58f4dc95f2a36c01f64c026baae6795f" kindref="member">parse_default</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>OptionDetails&gt;&amp;<sp/>details)</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a5e62e7e64679e627ba8946c36a559f2a" kindref="member">ensure_value</ref>(details);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a4b65034339c40c08656fa674680d99e1" kindref="member">m_default</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a2045cf1795fee8b9860e1b7a8dd00023" kindref="member">m_long_name</ref><sp/>=<sp/>&amp;details-&gt;long_name();</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a4bbafc7ad74075d05aebd5ddc18d83cd" kindref="member">m_value</ref>-&gt;parse();</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363" refid="classcxxopts_1_1_option_value_1a85af628f49023ea63e1983d1f350cb34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a85af628f49023ea63e1983d1f350cb34" kindref="member">parse_no_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>OptionDetails&gt;&amp;<sp/>details)</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a2045cf1795fee8b9860e1b7a8dd00023" kindref="member">m_long_name</ref><sp/>=<sp/>&amp;details-&gt;long_name();</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CXXOPTS_NULL_DEREF_IGNORE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wnull-dereference&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cxxopts_8_h_1a6d9ad4f693e16a4c6cdce8373f403e5d" kindref="member">CXXOPTS_NODISCARD</ref></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375" refid="classcxxopts_1_1_option_value_1a69580b01f01453434ebd95f0bf2e8c85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a69580b01f01453434ebd95f0bf2e8c85" kindref="member">count</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_value_1a1c8d74b5c22ef6350d3a2350c76c6613" kindref="member">m_count</ref>;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CXXOPTS_NULL_DEREF_IGNORE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>maybe<sp/>default<sp/>options<sp/>should<sp/>count<sp/>towards<sp/>the<sp/>number<sp/>of<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cxxopts_8_h_1a6d9ad4f693e16a4c6cdce8373f403e5d" kindref="member">CXXOPTS_NODISCARD</ref></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387" refid="classcxxopts_1_1_option_value_1ab36579e07e3f29af87aa870f996a7906" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1ab36579e07e3f29af87aa870f996a7906" kindref="member">has_default</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_value_1a4b65034339c40c08656fa674680d99e1" kindref="member">m_default</ref>;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;</highlight></codeline>
<codeline lineno="1394" refid="classcxxopts_1_1_option_value_1a6953817ba21f573f4c305bda31084d1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a6953817ba21f573f4c305bda31084d1b" kindref="member">as</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1395"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcxxopts_1_1_option_value_1a4bbafc7ad74075d05aebd5ddc18d83cd" kindref="member">m_value</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;option_has_no_value_exception&gt;(</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a2045cf1795fee8b9860e1b7a8dd00023" kindref="member">m_long_name</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/>*<ref refid="classcxxopts_1_1_option_value_1a2045cf1795fee8b9860e1b7a8dd00023" kindref="member">m_long_name</ref>);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CXXOPTS_NO_RTTI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1values_1_1standard__value" kindref="compound">values::standard_value&lt;T&gt;</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*m_value).<ref refid="classcxxopts_1_1values_1_1abstract__value_1a13587e25582d606cd757d3ad5a4df3b9" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1values_1_1standard__value" kindref="compound">values::standard_value&lt;T&gt;</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*m_value).<ref refid="classcxxopts_1_1values_1_1abstract__value_1a13587e25582d606cd757d3ad5a4df3b9" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410" refid="classcxxopts_1_1_option_value_1a5e62e7e64679e627ba8946c36a559f2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a5e62e7e64679e627ba8946c36a559f2a" kindref="member">ensure_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>OptionDetails&gt;&amp;<sp/>details)</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcxxopts_1_1_option_value_1a4bbafc7ad74075d05aebd5ddc18d83cd" kindref="member">m_value</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_value_1a4bbafc7ad74075d05aebd5ddc18d83cd" kindref="member">m_value</ref><sp/>=<sp/>details-&gt;make_storage();</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419" refid="classcxxopts_1_1_option_value_1a2045cf1795fee8b9860e1b7a8dd00023" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string*<sp/><ref refid="classcxxopts_1_1_option_value_1a2045cf1795fee8b9860e1b7a8dd00023" kindref="member">m_long_name</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Holding<sp/>this<sp/>pointer<sp/>is<sp/>safe,<sp/>since<sp/>OptionValue&apos;s<sp/>only<sp/>exist<sp/>in<sp/>key-value<sp/>pairs,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>the<sp/>key<sp/>has<sp/>the<sp/>string<sp/>we<sp/>point<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422" refid="classcxxopts_1_1_option_value_1a4bbafc7ad74075d05aebd5ddc18d83cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Value&gt;<sp/><ref refid="classcxxopts_1_1_option_value_1a4bbafc7ad74075d05aebd5ddc18d83cd" kindref="member">m_value</ref>{};</highlight></codeline>
<codeline lineno="1423" refid="classcxxopts_1_1_option_value_1a1c8d74b5c22ef6350d3a2350c76c6613" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_value_1a1c8d74b5c22ef6350d3a2350c76c6613" kindref="member">m_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1424" refid="classcxxopts_1_1_option_value_1a4b65034339c40c08656fa674680d99e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_value_1a4b65034339c40c08656fa674680d99e1" kindref="member">m_default</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427" refid="classcxxopts_1_1_key_value" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_key_value" kindref="compound">KeyValue</ref></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1430" refid="classcxxopts_1_1_key_value_1aa517bd30c2c0071cc76f6e7244da5f2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_key_value_1aa517bd30c2c0071cc76f6e7244da5f2f" kindref="member">KeyValue</ref>(std::string<sp/>key_,<sp/>std::string<sp/>value_)</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_key_value_1a178a9b3f09d6cd186ada7254b8650401" kindref="member">m_key</ref>(std::move(key_))</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_key_value_1adca1ff7f66e9f29f7a59e8c2c8a7b4d3" kindref="member">m_value</ref>(std::move(value_))</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cxxopts_8_h_1a6d9ad4f693e16a4c6cdce8373f403e5d" kindref="member">CXXOPTS_NODISCARD</ref></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;</highlight></codeline>
<codeline lineno="1438" refid="classcxxopts_1_1_key_value_1a07faf052403faa9e2abd10a1adbf6e9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_key_value_1a07faf052403faa9e2abd10a1adbf6e9c" kindref="member">key</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1439"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_key_value_1a178a9b3f09d6cd186ada7254b8650401" kindref="member">m_key</ref>;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cxxopts_8_h_1a6d9ad4f693e16a4c6cdce8373f403e5d" kindref="member">CXXOPTS_NODISCARD</ref></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;</highlight></codeline>
<codeline lineno="1445" refid="classcxxopts_1_1_key_value_1a6d647e665fee87204926a244fe94e343" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_key_value_1a6d647e665fee87204926a244fe94e343" kindref="member">value</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1446"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_key_value_1adca1ff7f66e9f29f7a59e8c2c8a7b4d3" kindref="member">m_value</ref>;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>T</highlight></codeline>
<codeline lineno="1452" refid="classcxxopts_1_1_key_value_1af8c51b8c5fb52c8cb23c0437af2375ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_key_value_1af8c51b8c5fb52c8cb23c0437af2375ff" kindref="member">as</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1453"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>result;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1a9782d53713f30ced7138719bd966db2b" kindref="member">values::parse_value</ref>(<ref refid="classcxxopts_1_1_key_value_1adca1ff7f66e9f29f7a59e8c2c8a7b4d3" kindref="member">m_value</ref>,<sp/>result);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1460" refid="classcxxopts_1_1_key_value_1a178a9b3f09d6cd186ada7254b8650401" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcxxopts_1_1_key_value_1a178a9b3f09d6cd186ada7254b8650401" kindref="member">m_key</ref>;</highlight></codeline>
<codeline lineno="1461" refid="classcxxopts_1_1_key_value_1adca1ff7f66e9f29f7a59e8c2c8a7b4d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcxxopts_1_1_key_value_1adca1ff7f66e9f29f7a59e8c2c8a7b4d3" kindref="member">m_value</ref>;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464" refid="namespacecxxopts_1a53a2c0afe2f23b85f2e880e3844f6232" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespacecxxopts_1a53a2c0afe2f23b85f2e880e3844f6232" kindref="member">ParsedHashMap</ref><sp/>=<sp/>std::unordered_map&lt;size_t,<sp/>OptionValue&gt;;</highlight></codeline>
<codeline lineno="1465" refid="namespacecxxopts_1a6cb0a4c694ab5bb7096323b810b797f3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespacecxxopts_1a6cb0a4c694ab5bb7096323b810b797f3" kindref="member">NameHashMap</ref><sp/>=<sp/>std::unordered_map&lt;std::string,<sp/>size_t&gt;;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467" refid="classcxxopts_1_1_parse_result" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_parse_result" kindref="compound">ParseResult</ref></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1470" refid="classcxxopts_1_1_parse_result_1_1_iterator" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_parse_result_1_1_iterator" kindref="compound">Iterator</ref></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1473" refid="classcxxopts_1_1_parse_result_1_1_iterator_1a028a7211e9afba85510fbeff708a877c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1a028a7211e9afba85510fbeff708a877c" kindref="member">iterator_category</ref><sp/>=<sp/>std::forward_iterator_tag;</highlight></codeline>
<codeline lineno="1474" refid="classcxxopts_1_1_parse_result_1_1_iterator_1ad415f3d6f28ec474a22a90bda79dc668" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_key_value" kindref="compound">value_type</ref><sp/>=<sp/><ref refid="classcxxopts_1_1_key_value" kindref="compound">KeyValue</ref>;</highlight></codeline>
<codeline lineno="1475" refid="classcxxopts_1_1_parse_result_1_1_iterator_1a4802fe1708a301c4be98b423f2823fe3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1a4802fe1708a301c4be98b423f2823fe3" kindref="member">difference_type</ref><sp/>=<sp/>void;</highlight></codeline>
<codeline lineno="1476" refid="classcxxopts_1_1_parse_result_1_1_iterator_1adc569db0768e1ac98ca5fec44b2c8f55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_key_value" kindref="compound">pointer</ref><sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_key_value" kindref="compound">KeyValue</ref>*;</highlight></codeline>
<codeline lineno="1477" refid="classcxxopts_1_1_parse_result_1_1_iterator_1a4d8cab1503154a28ff6adc5198114374" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_key_value" kindref="compound">reference</ref><sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_key_value" kindref="compound">KeyValue</ref>&amp;;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479" refid="classcxxopts_1_1_parse_result_1_1_iterator_1ab661290b7e3d0e3f9b9b2b986f26c3fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1ab661290b7e3d0e3f9b9b2b986f26c3fd" kindref="member">Iterator</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1480" refid="classcxxopts_1_1_parse_result_1_1_iterator_1a4271f7d62fcb221672696eb557a8774d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1a4271f7d62fcb221672696eb557a8774d" kindref="member">Iterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator" kindref="compound">Iterator</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482" refid="classcxxopts_1_1_parse_result_1_1_iterator_1ac0c22d6b5b8fb9723309b772a9fa12cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1ac0c22d6b5b8fb9723309b772a9fa12cd" kindref="member">Iterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result" kindref="compound">ParseResult</ref><sp/>*pr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result_1a63ac972d67d59d5d6f2b6810ee1ad3c3" kindref="member">end</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1a0abfc80c0ca5c6d714df8a03e757516e" kindref="member">m_pr</ref>(pr)</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1ab4f1163aa5e31ef5a073170ce207f050" kindref="member">m_iter</ref>(<ref refid="classcxxopts_1_1_parse_result_1a63ac972d67d59d5d6f2b6810ee1ad3c3" kindref="member">end</ref>?<sp/>pr-&gt;<ref refid="classcxxopts_1_1_parse_result_1af2d75fd14457385e5127114007f64e20" kindref="member">m_defaults</ref>.<ref refid="classcxxopts_1_1_parse_result_1a63ac972d67d59d5d6f2b6810ee1ad3c3" kindref="member">end</ref>():<sp/>pr-&gt;<ref refid="classcxxopts_1_1_parse_result_1ab9d7bcfd12003cd06bddd374b364a0ec" kindref="member">m_sequential</ref>.<ref refid="classcxxopts_1_1_parse_result_1a04bc1c49adacb8ded2d4f615a1b8bc82" kindref="member">begin</ref>())</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488" refid="classcxxopts_1_1_parse_result_1_1_iterator_1a1b09a554a633442a754486bf0058dd65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator" kindref="compound">Iterator</ref>&amp;<sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1a1b09a554a633442a754486bf0058dd65" kindref="member">operator++</ref>()</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1ab4f1163aa5e31ef5a073170ce207f050" kindref="member">m_iter</ref>;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1ab4f1163aa5e31ef5a073170ce207f050" kindref="member">m_iter</ref><sp/>==<sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1a0abfc80c0ca5c6d714df8a03e757516e" kindref="member">m_pr</ref>-&gt;<ref refid="classcxxopts_1_1_parse_result_1ab9d7bcfd12003cd06bddd374b364a0ec" kindref="member">m_sequential</ref>.end())</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1ab4f1163aa5e31ef5a073170ce207f050" kindref="member">m_iter</ref><sp/>=<sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1a0abfc80c0ca5c6d714df8a03e757516e" kindref="member">m_pr</ref>-&gt;<ref refid="classcxxopts_1_1_parse_result_1af2d75fd14457385e5127114007f64e20" kindref="member">m_defaults</ref>.begin();</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499" refid="classcxxopts_1_1_parse_result_1_1_iterator_1af3ea912889d82299501e6d7c9d9d0332" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator" kindref="compound">Iterator</ref><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1af3ea912889d82299501e6d7c9d9d0332" kindref="member">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator" kindref="compound">Iterator</ref><sp/>retval<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(*this);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506" refid="classcxxopts_1_1_parse_result_1_1_iterator_1a4f87f2937a3eb08f6e4b03e415966201" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1a4f87f2937a3eb08f6e4b03e415966201" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator" kindref="compound">Iterator</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1507"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1ab4f1163aa5e31ef5a073170ce207f050" kindref="member">m_iter</ref><sp/>==<sp/>other.<ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1ab4f1163aa5e31ef5a073170ce207f050" kindref="member">m_iter</ref>;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511" refid="classcxxopts_1_1_parse_result_1_1_iterator_1a3ecd2b61c580c4f6b74a0b194c93b4c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1a3ecd2b61c580c4f6b74a0b194c93b4c1" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator" kindref="compound">Iterator</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1512"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516" refid="classcxxopts_1_1_parse_result_1_1_iterator_1aa2551df78e11cec0ce283b67e17d5757" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_key_value" kindref="compound">KeyValue</ref>&amp;<sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1aa2551df78e11cec0ce283b67e17d5757" kindref="member">operator*</ref>()</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1ab4f1163aa5e31ef5a073170ce207f050" kindref="member">m_iter</ref>;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521" refid="classcxxopts_1_1_parse_result_1_1_iterator_1abfd067d3f69b365c0394d1b6b34c6229" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_key_value" kindref="compound">KeyValue</ref>*<sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1abfd067d3f69b365c0394d1b6b34c6229" kindref="member">operator-&gt;</ref>()</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1ab4f1163aa5e31ef5a073170ce207f050" kindref="member">m_iter</ref>.operator-&gt;();</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1527" refid="classcxxopts_1_1_parse_result_1_1_iterator_1a0abfc80c0ca5c6d714df8a03e757516e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result" kindref="compound">ParseResult</ref>*<sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1a0abfc80c0ca5c6d714df8a03e757516e" kindref="member">m_pr</ref>;</highlight></codeline>
<codeline lineno="1528" refid="classcxxopts_1_1_parse_result_1_1_iterator_1ab4f1163aa5e31ef5a073170ce207f050" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;KeyValue&gt;::const_iterator<sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator_1ab4f1163aa5e31ef5a073170ce207f050" kindref="member">m_iter</ref>;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531" refid="classcxxopts_1_1_parse_result_1aa5f4a299ffec3be89782fc738ebd1065" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1aa5f4a299ffec3be89782fc738ebd1065" kindref="member">ParseResult</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1532" refid="classcxxopts_1_1_parse_result_1a23ef5f632ad50d13f93d6b846708de18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1a23ef5f632ad50d13f93d6b846708de18" kindref="member">ParseResult</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result" kindref="compound">ParseResult</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534" refid="classcxxopts_1_1_parse_result_1a1f05143f599a9c92a0321dd802988ba7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1a1f05143f599a9c92a0321dd802988ba7" kindref="member">ParseResult</ref>(<ref refid="namespacecxxopts_1a6cb0a4c694ab5bb7096323b810b797f3" kindref="member">NameHashMap</ref>&amp;&amp;<sp/>keys,<sp/><ref refid="namespacecxxopts_1a53a2c0afe2f23b85f2e880e3844f6232" kindref="member">ParsedHashMap</ref>&amp;&amp;<sp/>values,<sp/>std::vector&lt;KeyValue&gt;<sp/>sequential,<sp/></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;KeyValue&gt;<sp/>default_opts,<sp/>std::vector&lt;std::string&gt;&amp;&amp;<sp/>unmatched_args)</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_parse_result_1a80a096c08b5cbea6fb8b3cf9e5866cdc" kindref="member">m_keys</ref>(std::move(keys))</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_parse_result_1a3de3faf3da35a04f003b5b71e2f992d2" kindref="member">m_values</ref>(std::move(values))</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_parse_result_1ab9d7bcfd12003cd06bddd374b364a0ec" kindref="member">m_sequential</ref>(std::move(sequential))</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_parse_result_1af2d75fd14457385e5127114007f64e20" kindref="member">m_defaults</ref>(std::move(default_opts))</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_parse_result_1ab2f9e18fec44eed9f35bceeecb3f8dc8" kindref="member">m_unmatched</ref>(std::move(unmatched_args))</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544" refid="classcxxopts_1_1_parse_result_1a2453c59c7645794d4dcdd5f953c626ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result" kindref="compound">ParseResult</ref>&amp;<sp/><ref refid="classcxxopts_1_1_parse_result_1a2453c59c7645794d4dcdd5f953c626ea" kindref="member">operator=</ref>(<ref refid="classcxxopts_1_1_parse_result" kindref="compound">ParseResult</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1545" refid="classcxxopts_1_1_parse_result_1aeee4df793ee1619395f7c7030d97cfc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result" kindref="compound">ParseResult</ref>&amp;<sp/><ref refid="classcxxopts_1_1_parse_result_1aeee4df793ee1619395f7c7030d97cfc1" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result" kindref="compound">ParseResult</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator" kindref="compound">Iterator</ref></highlight></codeline>
<codeline lineno="1548" refid="classcxxopts_1_1_parse_result_1a04bc1c49adacb8ded2d4f615a1b8bc82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1a04bc1c49adacb8ded2d4f615a1b8bc82" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1549"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator" kindref="compound">Iterator</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref></highlight></codeline>
<codeline lineno="1554" refid="classcxxopts_1_1_parse_result_1a63ac972d67d59d5d6f2b6810ee1ad3c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1a63ac972d67d59d5d6f2b6810ee1ad3c3" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1555"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result_1_1_iterator" kindref="compound">Iterator</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560" refid="classcxxopts_1_1_parse_result_1a0c638814a6a3f3301fffb6c32ddf83ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1a0c638814a6a3f3301fffb6c32ddf83ad" kindref="member">count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>o)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1561"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/><ref refid="classcxxopts_1_1_parse_result_1a80a096c08b5cbea6fb8b3cf9e5866cdc" kindref="member">m_keys</ref>.find(o);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>==<sp/><ref refid="classcxxopts_1_1_parse_result_1a80a096c08b5cbea6fb8b3cf9e5866cdc" kindref="member">m_keys</ref>.end())</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>viter<sp/>=<sp/><ref refid="classcxxopts_1_1_parse_result_1a3de3faf3da35a04f003b5b71e2f992d2" kindref="member">m_values</ref>.find(iter-&gt;second);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(viter<sp/>==<sp/><ref refid="classcxxopts_1_1_parse_result_1a3de3faf3da35a04f003b5b71e2f992d2" kindref="member">m_values</ref>.end())</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>viter-&gt;second.count();</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_value" kindref="compound">OptionValue</ref>&amp;</highlight></codeline>
<codeline lineno="1579" refid="classcxxopts_1_1_parse_result_1a99aafd900cfe43417ca23cb4a340f8f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1a99aafd900cfe43417ca23cb4a340f8f4" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>option)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1580"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/><ref refid="classcxxopts_1_1_parse_result_1a80a096c08b5cbea6fb8b3cf9e5866cdc" kindref="member">m_keys</ref>.find(option);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>==<sp/><ref refid="classcxxopts_1_1_parse_result_1a80a096c08b5cbea6fb8b3cf9e5866cdc" kindref="member">m_keys</ref>.end())</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;option_not_present_exception&gt;(option);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>viter<sp/>=<sp/><ref refid="classcxxopts_1_1_parse_result_1a3de3faf3da35a04f003b5b71e2f992d2" kindref="member">m_values</ref>.find(iter-&gt;second);</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(viter<sp/>==<sp/><ref refid="classcxxopts_1_1_parse_result_1a3de3faf3da35a04f003b5b71e2f992d2" kindref="member">m_values</ref>.end())</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;option_not_present_exception&gt;(option);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>viter-&gt;second;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;KeyValue&gt;&amp;</highlight></codeline>
<codeline lineno="1599" refid="classcxxopts_1_1_parse_result_1aa36da283a42b3e75134af044f4ce6334" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1aa36da283a42b3e75134af044f4ce6334" kindref="member">arguments</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1600"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result_1ab9d7bcfd12003cd06bddd374b364a0ec" kindref="member">m_sequential</ref>;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;</highlight></codeline>
<codeline lineno="1605" refid="classcxxopts_1_1_parse_result_1ab514eb0c342b577c2cb3fbce989016e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1ab514eb0c342b577c2cb3fbce989016e3" kindref="member">unmatched</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1606"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result_1ab2f9e18fec44eed9f35bceeecb3f8dc8" kindref="member">m_unmatched</ref>;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;KeyValue&gt;&amp;</highlight></codeline>
<codeline lineno="1611" refid="classcxxopts_1_1_parse_result_1acfee63a8f9c7b1ba9fc3c8ed4e37ae03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1acfee63a8f9c7b1ba9fc3c8ed4e37ae03" kindref="member">defaults</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1612"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result_1af2d75fd14457385e5127114007f64e20" kindref="member">m_defaults</ref>;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string</highlight></codeline>
<codeline lineno="1617" refid="classcxxopts_1_1_parse_result_1ae6c51699ddbd78cf786006ce53aca228" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result_1ae6c51699ddbd78cf786006ce53aca228" kindref="member">arguments_string</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1618"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kv:<sp/><ref refid="classcxxopts_1_1_parse_result_1ab9d7bcfd12003cd06bddd374b364a0ec" kindref="member">m_sequential</ref>)</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>kv.key()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>kv.value()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kv:<sp/><ref refid="classcxxopts_1_1_parse_result_1af2d75fd14457385e5127114007f64e20" kindref="member">m_defaults</ref>)</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>kv.key()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>kv.value()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;(default)&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1632" refid="classcxxopts_1_1_parse_result_1a80a096c08b5cbea6fb8b3cf9e5866cdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a6cb0a4c694ab5bb7096323b810b797f3" kindref="member">NameHashMap</ref><sp/><ref refid="classcxxopts_1_1_parse_result_1a80a096c08b5cbea6fb8b3cf9e5866cdc" kindref="member">m_keys</ref>{};</highlight></codeline>
<codeline lineno="1633" refid="classcxxopts_1_1_parse_result_1a3de3faf3da35a04f003b5b71e2f992d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a53a2c0afe2f23b85f2e880e3844f6232" kindref="member">ParsedHashMap</ref><sp/><ref refid="classcxxopts_1_1_parse_result_1a3de3faf3da35a04f003b5b71e2f992d2" kindref="member">m_values</ref>{};</highlight></codeline>
<codeline lineno="1634" refid="classcxxopts_1_1_parse_result_1ab9d7bcfd12003cd06bddd374b364a0ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;KeyValue&gt;<sp/><ref refid="classcxxopts_1_1_parse_result_1ab9d7bcfd12003cd06bddd374b364a0ec" kindref="member">m_sequential</ref>{};</highlight></codeline>
<codeline lineno="1635" refid="classcxxopts_1_1_parse_result_1af2d75fd14457385e5127114007f64e20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;KeyValue&gt;<sp/><ref refid="classcxxopts_1_1_parse_result_1af2d75fd14457385e5127114007f64e20" kindref="member">m_defaults</ref>{};</highlight></codeline>
<codeline lineno="1636" refid="classcxxopts_1_1_parse_result_1ab2f9e18fec44eed9f35bceeecb3f8dc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classcxxopts_1_1_parse_result_1ab2f9e18fec44eed9f35bceeecb3f8dc8" kindref="member">m_unmatched</ref>{};</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639" refid="structcxxopts_1_1_option" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcxxopts_1_1_option" kindref="compound">Option</ref></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1641" refid="structcxxopts_1_1_option_1a9e4d1f0faf8bbcd414f20b08cfac8e70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcxxopts_1_1_option_1a9e4d1f0faf8bbcd414f20b08cfac8e70" kindref="member">Option</ref></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>opts,</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>desc,</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;const<sp/>Value&gt;<sp/><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref><sp/>=<sp/>::cxxopts::value&lt;bool&gt;(),</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>arg_help<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structcxxopts_1_1_option_1af5408ed9c7f5d322a8f4925aa337fa3e" kindref="member">opts_</ref>(std::move(opts))</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="structcxxopts_1_1_option_1af7e90af1a125c138802e576225ecb675" kindref="member">desc_</ref>(std::move(desc))</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="structcxxopts_1_1_option_1a15377ffd237b0a9c5eb81fd632d7c1fb" kindref="member">value_</ref>(std::move(<ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>))</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="structcxxopts_1_1_option_1adde04f86cc5d1e5ee2acdf401d1c0e54" kindref="member">arg_help_</ref>(std::move(arg_help))</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655" refid="structcxxopts_1_1_option_1af5408ed9c7f5d322a8f4925aa337fa3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structcxxopts_1_1_option_1af5408ed9c7f5d322a8f4925aa337fa3e" kindref="member">opts_</ref>;</highlight></codeline>
<codeline lineno="1656" refid="structcxxopts_1_1_option_1af7e90af1a125c138802e576225ecb675" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structcxxopts_1_1_option_1af7e90af1a125c138802e576225ecb675" kindref="member">desc_</ref>;</highlight></codeline>
<codeline lineno="1657" refid="structcxxopts_1_1_option_1a15377ffd237b0a9c5eb81fd632d7c1fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;const<sp/>Value&gt;<sp/><ref refid="structcxxopts_1_1_option_1a15377ffd237b0a9c5eb81fd632d7c1fb" kindref="member">value_</ref>;</highlight></codeline>
<codeline lineno="1658" refid="structcxxopts_1_1_option_1adde04f86cc5d1e5ee2acdf401d1c0e54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structcxxopts_1_1_option_1adde04f86cc5d1e5ee2acdf401d1c0e54" kindref="member">arg_help_</ref>;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661" refid="namespacecxxopts_1acbe4e799af04e9f666aabb38aed191e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespacecxxopts_1acbe4e799af04e9f666aabb38aed191e9" kindref="member">OptionMap</ref><sp/>=<sp/>std::unordered_map&lt;std::string,<sp/>std::shared_ptr&lt;OptionDetails&gt;&gt;;</highlight></codeline>
<codeline lineno="1662" refid="namespacecxxopts_1a9e9e1130cb7950a3af5c8e474f36107d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespacecxxopts_1a9e9e1130cb7950a3af5c8e474f36107d" kindref="member">PositionalList</ref><sp/>=<sp/>std::vector&lt;std::string&gt;;</highlight></codeline>
<codeline lineno="1663" refid="namespacecxxopts_1a89e13b1a05701bb8a4b6401fdbb1eb71" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespacecxxopts_1a89e13b1a05701bb8a4b6401fdbb1eb71" kindref="member">PositionalListIterator</ref><sp/>=<sp/>PositionalList::const_iterator;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665" refid="classcxxopts_1_1_option_parser" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_option_parser" kindref="compound">OptionParser</ref></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1668" refid="classcxxopts_1_1_option_parser_1a0b61e22df2480c2c91f2793f3c1452ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a0b61e22df2480c2c91f2793f3c1452ff" kindref="member">OptionParser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1acbe4e799af04e9f666aabb38aed191e9" kindref="member">OptionMap</ref>&amp;<sp/>options,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1a9e9e1130cb7950a3af5c8e474f36107d" kindref="member">PositionalList</ref>&amp;<sp/>positional,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_unrecognised)</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_parser_1a1daaa87be1a5f6cc379f880e916b9958" kindref="member">m_options</ref>(options)</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_option_parser_1a424687c64b3524f638b2d26376ea39c3" kindref="member">m_positional</ref>(positional)</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_option_parser_1a9603840d51c4695b3ad5258702c619d9" kindref="member">m_allow_unrecognised</ref>(allow_unrecognised)</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result" kindref="compound">ParseResult</ref></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="global_8_h_1a735b1ce7a340373ac87191026132d105" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>argv);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a4d595d8f6f34760bc2248d1b96af53a4" kindref="member">consume_positional</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>a,<sp/><ref refid="namespacecxxopts_1a89e13b1a05701bb8a4b6401fdbb1eb71" kindref="member">PositionalListIterator</ref>&amp;<sp/>next);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a0c093ba32746de7c3b08715eab961aff" kindref="member">checked_parse_arg</ref></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>argv,</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>current,</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OptionDetails&gt;&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a20b45a90265756b859aec3ebcbee8724" kindref="member">add_to_option</ref>(OptionMap::const_iterator<sp/>iter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>option,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>arg);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a07db7b6bb2095df7b75b50ed2311ffe5" kindref="member">parse_option</ref></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OptionDetails&gt;&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>arg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a28026f132e532009842f11359fb08373" kindref="member">parse_default</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OptionDetails&gt;&amp;<sp/>details);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a80bbe1ff81b5d39bf6fda208e95a0d04" kindref="member">parse_no_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OptionDetails&gt;&amp;<sp/>details);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_parser_1a375fff61bb08268e6deb81baa0514b27" kindref="member">finalise_aliases</ref>();</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712" refid="classcxxopts_1_1_option_parser_1a1daaa87be1a5f6cc379f880e916b9958" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1acbe4e799af04e9f666aabb38aed191e9" kindref="member">OptionMap</ref>&amp;<sp/><ref refid="classcxxopts_1_1_option_parser_1a1daaa87be1a5f6cc379f880e916b9958" kindref="member">m_options</ref>;</highlight></codeline>
<codeline lineno="1713" refid="classcxxopts_1_1_option_parser_1a424687c64b3524f638b2d26376ea39c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1a9e9e1130cb7950a3af5c8e474f36107d" kindref="member">PositionalList</ref>&amp;<sp/><ref refid="classcxxopts_1_1_option_parser_1a424687c64b3524f638b2d26376ea39c3" kindref="member">m_positional</ref>;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715" refid="classcxxopts_1_1_option_parser_1a5b4c043201d07e3a37a138313ea53fef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;KeyValue&gt;<sp/><ref refid="classcxxopts_1_1_option_parser_1a5b4c043201d07e3a37a138313ea53fef" kindref="member">m_sequential</ref>{};</highlight></codeline>
<codeline lineno="1716" refid="classcxxopts_1_1_option_parser_1aeebe66824e25c8d466ecfd21c4234380" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;KeyValue&gt;<sp/><ref refid="classcxxopts_1_1_option_parser_1aeebe66824e25c8d466ecfd21c4234380" kindref="member">m_defaults</ref>{};</highlight></codeline>
<codeline lineno="1717" refid="classcxxopts_1_1_option_parser_1a9603840d51c4695b3ad5258702c619d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_parser_1a9603840d51c4695b3ad5258702c619d9" kindref="member">m_allow_unrecognised</ref>;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719" refid="classcxxopts_1_1_option_parser_1a941358c67afc74005bdd779c39c9ed44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a53a2c0afe2f23b85f2e880e3844f6232" kindref="member">ParsedHashMap</ref><sp/><ref refid="classcxxopts_1_1_option_parser_1a941358c67afc74005bdd779c39c9ed44" kindref="member">m_parsed</ref>{};</highlight></codeline>
<codeline lineno="1720" refid="classcxxopts_1_1_option_parser_1a55888886d57470ca84f908948b39fe6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a6cb0a4c694ab5bb7096323b810b797f3" kindref="member">NameHashMap</ref><sp/><ref refid="classcxxopts_1_1_option_parser_1a55888886d57470ca84f908948b39fe6b" kindref="member">m_keys</ref>{};</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723" refid="classcxxopts_1_1_options" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_options" kindref="compound">Options</ref></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727" refid="classcxxopts_1_1_options_1ab73d569871f0a8ae1ba9be77397fab5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_options_1ab73d569871f0a8ae1ba9be77397fab5e" kindref="member">Options</ref>(std::string<sp/>program,<sp/>std::string<sp/>help_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_options_1a49f97b72bcc81357c9df0cbc657bb3a7" kindref="member">m_program</ref>(std::move(program))</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_options_1a415a57d6ed9bac80126e1b9d5e8b800f" kindref="member">m_help_string</ref>(<ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(std::move(help_string)))</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_options_1a32488bc1b1581d80b90a8a476fbeb1c4" kindref="member">m_custom_help</ref>(</highlight><highlight class="stringliteral">&quot;[OPTION...]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_options_1ac5274870d676ae960f285a2e8f0dfdf6" kindref="member">m_positional_help</ref>(</highlight><highlight class="stringliteral">&quot;positional<sp/>parameters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_options_1ae0a47e72e50fc46543bc1bce186fe66a" kindref="member">m_show_positional</ref>(false)</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_options_1a862b3814638d3a11f582c417e09f02fc" kindref="member">m_allow_unrecognised</ref>(false)</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_options_1a195a58cf2247ca00746c647f942a5fda" kindref="member">m_width</ref>(76)</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_options_1ad8a944b69e10ac5ac5c163a1415088f1" kindref="member">m_tab_expansion</ref>(false)</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classcxxopts_1_1_options_1a6eda69429efb7bff7e3837c67c2953be" kindref="member">m_options</ref>(std::make_shared&lt;<ref refid="namespacecxxopts_1acbe4e799af04e9f666aabb38aed191e9" kindref="member">OptionMap</ref>&gt;())</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options" kindref="compound">Options</ref>&amp;</highlight></codeline>
<codeline lineno="1741" refid="classcxxopts_1_1_options_1af7d13089d919a6fee89b90372c11252f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1af7d13089d919a6fee89b90372c11252f" kindref="member">positional_help</ref>(std::string<sp/>help_text)</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1ac5274870d676ae960f285a2e8f0dfdf6" kindref="member">m_positional_help</ref><sp/>=<sp/>std::move(help_text);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options" kindref="compound">Options</ref>&amp;</highlight></codeline>
<codeline lineno="1748" refid="classcxxopts_1_1_options_1ad9b7503fbb631a4c30d949d4a7c317f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1ad9b7503fbb631a4c30d949d4a7c317f6" kindref="member">custom_help</ref>(std::string<sp/>help_text)</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a32488bc1b1581d80b90a8a476fbeb1c4" kindref="member">m_custom_help</ref><sp/>=<sp/>std::move(help_text);</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options" kindref="compound">Options</ref>&amp;</highlight></codeline>
<codeline lineno="1755" refid="classcxxopts_1_1_options_1a60dc8a681dcfe6bbe051a272187eaa01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a60dc8a681dcfe6bbe051a272187eaa01" kindref="member">show_positional_help</ref>()</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1ae0a47e72e50fc46543bc1bce186fe66a" kindref="member">m_show_positional</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options" kindref="compound">Options</ref>&amp;</highlight></codeline>
<codeline lineno="1762" refid="classcxxopts_1_1_options_1a9adcc723d37ae463b10a248200515d15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a9adcc723d37ae463b10a248200515d15" kindref="member">allow_unrecognised_options</ref>()</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a862b3814638d3a11f582c417e09f02fc" kindref="member">m_allow_unrecognised</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options" kindref="compound">Options</ref>&amp;</highlight></codeline>
<codeline lineno="1769" refid="classcxxopts_1_1_options_1a491f557e100e7cc56623527066225abf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a491f557e100e7cc56623527066225abf" kindref="member">set_width</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width)</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a195a58cf2247ca00746c647f942a5fda" kindref="member">m_width</ref><sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options" kindref="compound">Options</ref>&amp;</highlight></codeline>
<codeline lineno="1776" refid="classcxxopts_1_1_options_1a938a9a0d9d9bdcaa0ed4e4196a6504b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a938a9a0d9d9bdcaa0ed4e4196a6504b4" kindref="member">set_tab_expansion</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expansion=</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1ad8a944b69e10ac5ac5c163a1415088f1" kindref="member">m_tab_expansion</ref><sp/>=<sp/>expansion;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_parse_result" kindref="compound">ParseResult</ref></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="global_8_h_1a735b1ce7a340373ac87191026132d105" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>argv);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_adder" kindref="compound">OptionAdder</ref></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a8c4fcf551295cde940a1a60012b3e9b6" kindref="member">add_options</ref>(std::string<sp/>group<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a8c4fcf551295cde940a1a60012b3e9b6" kindref="member">add_options</ref></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>group,</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::initializer_list&lt;Option&gt;<sp/>options</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1ac698adfe5b5ca50d36017a52b27fb828" kindref="member">add_option</ref></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>group,</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcxxopts_1_1_option" kindref="compound">Option</ref>&amp;<sp/>option</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1ac698adfe5b5ca50d36017a52b27fb828" kindref="member">add_option</ref></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>group,</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>l,</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>desc,</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>Value&gt;&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>arg_help</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parse<sp/>positional<sp/>arguments<sp/>into<sp/>the<sp/>given<sp/>option</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a08d69938b38f43d9bc534ec3b60e672b" kindref="member">parse_positional</ref>(std::string<sp/>option);</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a08d69938b38f43d9bc534ec3b60e672b" kindref="member">parse_positional</ref>(std::vector&lt;std::string&gt;<sp/>options);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a08d69938b38f43d9bc534ec3b60e672b" kindref="member">parse_positional</ref>(std::initializer_list&lt;std::string&gt;<sp/>options);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825" refid="classcxxopts_1_1_options_1a2e7b51be5b760aab92134268812f2042" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a2e7b51be5b760aab92134268812f2042" kindref="member">parse_positional</ref>(<ref refid="struct_iterator" kindref="compound">Iterator</ref><sp/>begin,<sp/><ref refid="struct_iterator" kindref="compound">Iterator</ref><sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a08d69938b38f43d9bc534ec3b60e672b" kindref="member">parse_positional</ref>(std::vector&lt;std::string&gt;{begin,<sp/>end});</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a7392b09071f42ed45dea85738af965b4" kindref="member">help</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/><ref refid="classcxxopts_1_1_options_1a86dce378e2f277514653394952715021" kindref="member">groups</ref><sp/>=<sp/>{})<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a86dce378e2f277514653394952715021" kindref="member">groups</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HelpGroupDetails&amp;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1ab5ebc9a3f07419d8b5a58d55c9929f09" kindref="member">group_help</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>group)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a6a7ca6845bfe17a801b0c3f229655f42" kindref="member">add_one_option</ref></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>option,</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OptionDetails&gt;&amp;<sp/>details</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a7a9611069d511f815c71a1f4aca302eb" kindref="member">help_one_group</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>group)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1ab09329dad31b464891556a4cd2659d04" kindref="member">generate_group_help</ref></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;<sp/>result,</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/><ref refid="classcxxopts_1_1_options_1a86dce378e2f277514653394952715021" kindref="member">groups</ref></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1adc15c2e713a3c026c7a25e83612ec247" kindref="member">generate_all_groups_help</ref>(<ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;<sp/>result)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1860" refid="classcxxopts_1_1_options_1a49f97b72bcc81357c9df0cbc657bb3a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcxxopts_1_1_options_1a49f97b72bcc81357c9df0cbc657bb3a7" kindref="member">m_program</ref>{};</highlight></codeline>
<codeline lineno="1861" refid="classcxxopts_1_1_options_1a415a57d6ed9bac80126e1b9d5e8b800f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref><sp/><ref refid="classcxxopts_1_1_options_1a415a57d6ed9bac80126e1b9d5e8b800f" kindref="member">m_help_string</ref>{};</highlight></codeline>
<codeline lineno="1862" refid="classcxxopts_1_1_options_1a32488bc1b1581d80b90a8a476fbeb1c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcxxopts_1_1_options_1a32488bc1b1581d80b90a8a476fbeb1c4" kindref="member">m_custom_help</ref>{};</highlight></codeline>
<codeline lineno="1863" refid="classcxxopts_1_1_options_1ac5274870d676ae960f285a2e8f0dfdf6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcxxopts_1_1_options_1ac5274870d676ae960f285a2e8f0dfdf6" kindref="member">m_positional_help</ref>{};</highlight></codeline>
<codeline lineno="1864" refid="classcxxopts_1_1_options_1ae0a47e72e50fc46543bc1bce186fe66a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_options_1ae0a47e72e50fc46543bc1bce186fe66a" kindref="member">m_show_positional</ref>;</highlight></codeline>
<codeline lineno="1865" refid="classcxxopts_1_1_options_1a862b3814638d3a11f582c417e09f02fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_options_1a862b3814638d3a11f582c417e09f02fc" kindref="member">m_allow_unrecognised</ref>;</highlight></codeline>
<codeline lineno="1866" refid="classcxxopts_1_1_options_1a195a58cf2247ca00746c647f942a5fda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_options_1a195a58cf2247ca00746c647f942a5fda" kindref="member">m_width</ref>;</highlight></codeline>
<codeline lineno="1867" refid="classcxxopts_1_1_options_1ad8a944b69e10ac5ac5c163a1415088f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_options_1ad8a944b69e10ac5ac5c163a1415088f1" kindref="member">m_tab_expansion</ref>;</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869" refid="classcxxopts_1_1_options_1a6eda69429efb7bff7e3837c67c2953be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OptionMap&gt;<sp/><ref refid="classcxxopts_1_1_options_1a6eda69429efb7bff7e3837c67c2953be" kindref="member">m_options</ref>;</highlight></codeline>
<codeline lineno="1870" refid="classcxxopts_1_1_options_1a2f7e42d87e511d25966cf48b504fa1f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classcxxopts_1_1_options_1a2f7e42d87e511d25966cf48b504fa1f9" kindref="member">m_positional</ref>{};</highlight></codeline>
<codeline lineno="1871" refid="classcxxopts_1_1_options_1ad9aeb1f3ce3755f6294442c419a414c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_set&lt;std::string&gt;<sp/><ref refid="classcxxopts_1_1_options_1ad9aeb1f3ce3755f6294442c419a414c1" kindref="member">m_positional_set</ref>{};</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mapping<sp/>from<sp/>groups<sp/>to<sp/>help<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1874" refid="classcxxopts_1_1_options_1a5df536e6ca2018564263e350c2ed8679" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>HelpGroupDetails&gt;<sp/><ref refid="classcxxopts_1_1_options_1a5df536e6ca2018564263e350c2ed8679" kindref="member">m_help</ref>{};</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight></codeline>
<codeline lineno="1876" refid="classcxxopts_1_1_options_1a7408c12072b6d9a6cb7581ec17b48a1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;OptionDetails&gt;<sp/><ref refid="classcxxopts_1_1_options_1a7408c12072b6d9a6cb7581ec17b48a1e" kindref="member">m_option_list</ref>{};</highlight></codeline>
<codeline lineno="1877" refid="classcxxopts_1_1_options_1adc78b18ef63a36a06c3311e6c56b9ebb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(<ref refid="classcxxopts_1_1_options_1a7408c12072b6d9a6cb7581ec17b48a1e" kindref="member">m_option_list</ref>)::iterator&gt;<sp/><ref refid="classcxxopts_1_1_options_1adc78b18ef63a36a06c3311e6c56b9ebb" kindref="member">m_option_map</ref>{};</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880" refid="classcxxopts_1_1_option_adder" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxopts_1_1_option_adder" kindref="compound">OptionAdder</ref></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884" refid="classcxxopts_1_1_option_adder_1ac9da55d72245e55eed70486200a60728" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_adder_1ac9da55d72245e55eed70486200a60728" kindref="member">OptionAdder</ref>(<ref refid="classcxxopts_1_1_options" kindref="compound">Options</ref>&amp;<sp/>options,<sp/>std::string<sp/>group)</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcxxopts_1_1_option_adder_1a84a1bb47fc5417299ceefbbdaf84c6cb" kindref="member">m_options</ref>(options),<sp/><ref refid="classcxxopts_1_1_option_adder_1ab159178d063eaa4836fe828036dc25a8" kindref="member">m_group</ref>(std::move(group))</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_adder" kindref="compound">OptionAdder</ref>&amp;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>operator()</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>opts,</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>desc,</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>Value&gt;&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>::cxxopts::value&lt;bool&gt;(),</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>arg_help<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1900" refid="classcxxopts_1_1_option_adder_1a84a1bb47fc5417299ceefbbdaf84c6cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options" kindref="compound">Options</ref>&amp;<sp/><ref refid="classcxxopts_1_1_option_adder_1a84a1bb47fc5417299ceefbbdaf84c6cb" kindref="member">m_options</ref>;</highlight></codeline>
<codeline lineno="1901" refid="classcxxopts_1_1_option_adder_1ab159178d063eaa4836fe828036dc25a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcxxopts_1_1_option_adder_1ab159178d063eaa4836fe828036dc25a8" kindref="member">m_group</ref>;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>OPTION_LONGEST<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>OPTION_DESC_GAP<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/>format_option</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcxxopts_1_1_help_option_details" kindref="compound">HelpOptionDetails</ref>&amp;<sp/>o</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>s<sp/>=<sp/>o.<ref refid="structcxxopts_1_1_help_option_details_1a83cb4bc76deb1d40c89de4165e4b0cdc" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>l<sp/>=<sp/>o.<ref refid="structcxxopts_1_1_help_option_details_1a19a4fe10f8a5b47ec8e2134bea26aabe" kindref="member">l</ref>;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.empty())</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(s);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l.empty())</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l.empty())</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>--&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(l);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arg<sp/>=<sp/>!o.<ref refid="structcxxopts_1_1_help_option_details_1a61afda425e73f688a21eae557efa8f25" kindref="member">arg_help</ref>.empty()<sp/>?<sp/><ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(o.<ref refid="structcxxopts_1_1_help_option_details_1a61afda425e73f688a21eae557efa8f25" kindref="member">arg_help</ref>)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;arg&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o.<ref refid="structcxxopts_1_1_help_option_details_1ae9edda8b102865694f3b76ef162f0ead" kindref="member">is_boolean</ref>)</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.<ref refid="structcxxopts_1_1_help_option_details_1ad9ddbdca27930394f32b51f7bf3b1748" kindref="member">has_implicit</ref>)</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>[=&quot;</highlight><highlight class="normal"><sp/>+<sp/>arg<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;(=&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(o.<ref refid="structcxxopts_1_1_help_option_details_1a21114f51515edf454e214f3c881ae212" kindref="member">implicit_value</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>arg;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/>format_description</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HelpOptionDetails&amp;<sp/>o,</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>allowed,</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tab_expansion</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>desc<sp/>=<sp/>o.desc;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.has_default<sp/>&amp;&amp;<sp/>(!o.is_boolean<sp/>||<sp/>o.default_value<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!o.default_value.empty())</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc<sp/>+=<sp/><ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>(default:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>o.default_value<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc<sp/>+=<sp/><ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>(default:<sp/>\&quot;\&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref><sp/>result;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_expansion)</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref><sp/>desc2;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size<sp/>=<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>std::begin(desc);<sp/>c<sp/>!=<sp/>std::end(desc);<sp/>++c)</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc2<sp/>+=<sp/>*c;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>skip<sp/>=<sp/>8<sp/>-<sp/>size<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1aea4319f3c17c89dc3c067d68d0fb915d" kindref="member">stringAppend</ref>(desc2,<sp/>skip,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>+=<sp/>skip;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc2<sp/>+=<sp/>*c;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++size;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc<sp/>=<sp/>desc2;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>desc<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>current<sp/>=<sp/>std::begin(desc);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>previous<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>startLine<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lastSpace<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size<sp/>=<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{};</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>appendNewLine;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyWhiteSpace<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current<sp/>!=<sp/>std::end(desc))</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appendNewLine<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::isblank(*previous))</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSpace<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!std::isblank(*current))</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onlyWhiteSpace<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*current<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++current;</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appendNewLine<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!appendNewLine<sp/>&amp;&amp;<sp/>size<sp/>&gt;=<sp/>allowed)</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastSpace<sp/>!=<sp/>startLine)</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>lastSpace;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appendNewLine<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(appendNewLine)</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1aea4319f3c17c89dc3c067d68d0fb915d" kindref="member">stringAppend</ref>(result,<sp/>startLine,<sp/>current);</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startLine<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSpace<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*previous<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1aea4319f3c17c89dc3c067d68d0fb915d" kindref="member">stringAppend</ref>(result,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1aea4319f3c17c89dc3c067d68d0fb915d" kindref="member">stringAppend</ref>(result,<sp/>start,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*previous<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1aea4319f3c17c89dc3c067d68d0fb915d" kindref="member">stringAppend</ref>(result,<sp/>lastSpace,<sp/>current);</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onlyWhiteSpace<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++current;</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++size;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//append<sp/>whatever<sp/>is<sp/>left<sp/>but<sp/>ignore<sp/>whitespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!onlyWhiteSpace)</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1aea4319f3c17c89dc3c067d68d0fb915d" kindref="member">stringAppend</ref>(result,<sp/>startLine,<sp/>previous);</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2088" refid="classcxxopts_1_1_options_1a95878aa582f2ed8e0a2b73e735eb287d" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_options_1a8c4fcf551295cde940a1a60012b3e9b6" kindref="member">Options::add_options</ref></highlight></codeline>
<codeline lineno="2089"><highlight class="normal">(</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;group,</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/>std::initializer_list&lt;Option&gt;<sp/>options</highlight></codeline>
<codeline lineno="2092"><highlight class="normal">)</highlight></codeline>
<codeline lineno="2093"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_adder" kindref="compound">OptionAdder</ref><sp/>option_adder(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>group);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;option:<sp/>options)</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/>option_adder(option.opts_,<sp/>option.desc_,<sp/>option.value_,<sp/>option.arg_help_);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><ref refid="classcxxopts_1_1_option_adder" kindref="compound">OptionAdder</ref></highlight></codeline>
<codeline lineno="2103" refid="classcxxopts_1_1_options_1a8c4fcf551295cde940a1a60012b3e9b6" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_options_1a8c4fcf551295cde940a1a60012b3e9b6" kindref="member">Options::add_options</ref>(std::string<sp/>group)</highlight></codeline>
<codeline lineno="2104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_option_adder" kindref="compound">OptionAdder</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>std::move(group));</highlight></codeline>
<codeline lineno="2106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><ref refid="classcxxopts_1_1_option_adder" kindref="compound">OptionAdder</ref>&amp;</highlight></codeline>
<codeline lineno="2110" refid="classcxxopts_1_1_option_adder_1a4feb747760c5fbaa807a4c8e1c335ac5" refkind="member"><highlight class="normal">OptionAdder::operator()</highlight></codeline>
<codeline lineno="2111"><highlight class="normal">(</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>opts,</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>desc,</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>Value&gt;&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/>std::string<sp/>arg_help</highlight></codeline>
<codeline lineno="2116"><highlight class="normal">)</highlight></codeline>
<codeline lineno="2117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/>std::string<sp/>short_sw,<sp/>long_sw;</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/>std::tie(short_sw,<sp/>long_sw)<sp/>=<sp/><ref refid="namespacecxxopts_1_1values_1_1parser__tool_1a87d93ecf1931bfdf64feb40a008fa909" kindref="member">values::parser_tool::SplitSwitchDef</ref>(opts);</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!short_sw.length()<sp/>&amp;&amp;<sp/>!long_sw.length())</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/>throw_or_mimic&lt;invalid_option_format_error&gt;(opts);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(long_sw.length()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>short_sw.length())</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/>throw_or_mimic&lt;invalid_option_format_error&gt;(opts);</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>option_names<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/>(</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;short_,</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;long_</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(long_.length()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(long_,<sp/>short_);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(short_,<sp/>long_);</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/>}(short_sw,<sp/>long_sw);</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/>m_options.add_option</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/>(</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/>m_group,</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::get&lt;0&gt;(option_names),</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/>std::get&lt;1&gt;(option_names),</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/>desc,</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/>std::move(arg_help)</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2158" refid="classcxxopts_1_1_option_parser_1a28026f132e532009842f11359fb08373" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_option_parser_1a28026f132e532009842f11359fb08373" kindref="member">OptionParser::parse_default</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OptionDetails&gt;&amp;<sp/>details)</highlight></codeline>
<codeline lineno="2159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>remove<sp/>the<sp/>duplicate<sp/>code<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>store<sp/>=<sp/><ref refid="classcxxopts_1_1_option_parser_1a941358c67afc74005bdd779c39c9ed44" kindref="member">m_parsed</ref>[details-&gt;hash()];</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/>store.parse_default(details);</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1aeebe66824e25c8d466ecfd21c4234380" kindref="member">m_defaults</ref>.emplace_back(details-&gt;long_name(),<sp/>details-&gt;value().get_default_value());</highlight></codeline>
<codeline lineno="2164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2168" refid="classcxxopts_1_1_option_parser_1a80bbe1ff81b5d39bf6fda208e95a0d04" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_option_parser_1a80bbe1ff81b5d39bf6fda208e95a0d04" kindref="member">OptionParser::parse_no_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OptionDetails&gt;&amp;<sp/>details)</highlight></codeline>
<codeline lineno="2169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>store<sp/>=<sp/><ref refid="classcxxopts_1_1_option_parser_1a941358c67afc74005bdd779c39c9ed44" kindref="member">m_parsed</ref>[details-&gt;hash()];</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/>store.parse_no_value(details);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2176" refid="classcxxopts_1_1_option_parser_1a07db7b6bb2095df7b75b50ed2311ffe5" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_option_parser_1a07db7b6bb2095df7b75b50ed2311ffe5" kindref="member">OptionParser::parse_option</ref></highlight></codeline>
<codeline lineno="2177"><highlight class="normal">(</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OptionDetails&gt;&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*name*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>arg</highlight></codeline>
<codeline lineno="2181"><highlight class="normal">)</highlight></codeline>
<codeline lineno="2182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>-&gt;hash();</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>result<sp/>=<sp/><ref refid="classcxxopts_1_1_option_parser_1a941358c67afc74005bdd779c39c9ed44" kindref="member">m_parsed</ref>[hash];</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/>result.parse(<ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,<sp/>arg);</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a5b4c043201d07e3a37a138313ea53fef" kindref="member">m_sequential</ref>.emplace_back(<ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>-&gt;long_name(),<sp/>arg);</highlight></codeline>
<codeline lineno="2188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192" refid="classcxxopts_1_1_option_parser_1a0c093ba32746de7c3b08715eab961aff" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_option_parser_1a0c093ba32746de7c3b08715eab961aff" kindref="member">OptionParser::checked_parse_arg</ref></highlight></codeline>
<codeline lineno="2193"><highlight class="normal">(</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>argv,</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>current,</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OptionDetails&gt;&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name</highlight></codeline>
<codeline lineno="2199"><highlight class="normal">)</highlight></codeline>
<codeline lineno="2200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>+<sp/>1<sp/>&gt;=<sp/>argc)</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>-&gt;value().has_implicit())</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a07db7b6bb2095df7b75b50ed2311ffe5" kindref="member">parse_option</ref>(<ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,<sp/>name,<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>-&gt;value().get_implicit_value());</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;missing_argument_exception&gt;(name);</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>-&gt;value().has_implicit())</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a07db7b6bb2095df7b75b50ed2311ffe5" kindref="member">parse_option</ref>(<ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,<sp/>name,<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>-&gt;value().get_implicit_value());</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a07db7b6bb2095df7b75b50ed2311ffe5" kindref="member">parse_option</ref>(<ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,<sp/>name,<sp/>argv[current<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++current;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228" refid="classcxxopts_1_1_option_parser_1a20b45a90265756b859aec3ebcbee8724" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_option_parser_1a20b45a90265756b859aec3ebcbee8724" kindref="member">OptionParser::add_to_option</ref>(OptionMap::const_iterator<sp/>iter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>option,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>arg)</highlight></codeline>
<codeline lineno="2229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a07db7b6bb2095df7b75b50ed2311ffe5" kindref="member">parse_option</ref>(iter-&gt;second,<sp/>option,<sp/>arg);</highlight></codeline>
<codeline lineno="2231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235" refid="classcxxopts_1_1_option_parser_1a4d595d8f6f34760bc2248d1b96af53a4" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_option_parser_1a4d595d8f6f34760bc2248d1b96af53a4" kindref="member">OptionParser::consume_positional</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>a,<sp/><ref refid="namespacecxxopts_1a89e13b1a05701bb8a4b6401fdbb1eb71" kindref="member">PositionalListIterator</ref>&amp;<sp/>next)</highlight></codeline>
<codeline lineno="2236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(next<sp/>!=<sp/><ref refid="classcxxopts_1_1_option_parser_1a424687c64b3524f638b2d26376ea39c3" kindref="member">m_positional</ref>.end())</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/><ref refid="classcxxopts_1_1_option_parser_1a1daaa87be1a5f6cc379f880e916b9958" kindref="member">m_options</ref>.find(*next);</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/><ref refid="classcxxopts_1_1_option_parser_1a1daaa87be1a5f6cc379f880e916b9958" kindref="member">m_options</ref>.end())</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iter-&gt;second-&gt;value().is_container())</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>result<sp/>=<sp/><ref refid="classcxxopts_1_1_option_parser_1a941358c67afc74005bdd779c39c9ed44" kindref="member">m_parsed</ref>[iter-&gt;second-&gt;hash()];</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.count()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a20b45a90265756b859aec3ebcbee8724" kindref="member">add_to_option</ref>(iter,<sp/>*next,<sp/>a);</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++next;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++next;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a20b45a90265756b859aec3ebcbee8724" kindref="member">add_to_option</ref>(iter,<sp/>*next,<sp/>a);</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/>throw_or_mimic&lt;option_not_exists_exception&gt;(*next);</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265" refid="classcxxopts_1_1_options_1a08d69938b38f43d9bc534ec3b60e672b" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_options_1a08d69938b38f43d9bc534ec3b60e672b" kindref="member">Options::parse_positional</ref>(std::string<sp/>option)</highlight></codeline>
<codeline lineno="2266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><ref refid="classcxxopts_1_1_options_1a08d69938b38f43d9bc534ec3b60e672b" kindref="member">parse_positional</ref>(std::vector&lt;std::string&gt;{std::move(option)});</highlight></codeline>
<codeline lineno="2268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2272" refid="classcxxopts_1_1_options_1a9078209209185ac59cb6b293558919da" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_options_1a08d69938b38f43d9bc534ec3b60e672b" kindref="member">Options::parse_positional</ref>(std::vector&lt;std::string&gt;<sp/>options)</highlight></codeline>
<codeline lineno="2273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><ref refid="classcxxopts_1_1_options_1a2f7e42d87e511d25966cf48b504fa1f9" kindref="member">m_positional</ref><sp/>=<sp/>std::move(options);</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><ref refid="classcxxopts_1_1_options_1ad9aeb1f3ce3755f6294442c419a414c1" kindref="member">m_positional_set</ref>.insert(<ref refid="classcxxopts_1_1_options_1a2f7e42d87e511d25966cf48b504fa1f9" kindref="member">m_positional</ref>.begin(),<sp/><ref refid="classcxxopts_1_1_options_1a2f7e42d87e511d25966cf48b504fa1f9" kindref="member">m_positional</ref>.end());</highlight></codeline>
<codeline lineno="2277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2281" refid="classcxxopts_1_1_options_1a21ddde716cb71a6ba1b7943e313a3398" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_options_1a08d69938b38f43d9bc534ec3b60e672b" kindref="member">Options::parse_positional</ref>(std::initializer_list&lt;std::string&gt;<sp/>options)</highlight></codeline>
<codeline lineno="2282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><ref refid="classcxxopts_1_1_options_1a08d69938b38f43d9bc534ec3b60e672b" kindref="member">parse_positional</ref>(std::vector&lt;std::string&gt;(options));</highlight></codeline>
<codeline lineno="2284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><ref refid="classcxxopts_1_1_parse_result" kindref="compound">ParseResult</ref></highlight></codeline>
<codeline lineno="2288" refid="classcxxopts_1_1_options_1a3e740564cc4c991078f1451e1fcd082b" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_options_1a3e740564cc4c991078f1451e1fcd082b" kindref="member">Options::parse</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>argv)</highlight></codeline>
<codeline lineno="2289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><ref refid="classcxxopts_1_1_option_parser" kindref="compound">OptionParser</ref><sp/>parser(*<ref refid="classcxxopts_1_1_options_1a6eda69429efb7bff7e3837c67c2953be" kindref="member">m_options</ref>,<sp/><ref refid="classcxxopts_1_1_options_1a2f7e42d87e511d25966cf48b504fa1f9" kindref="member">m_positional</ref>,<sp/><ref refid="classcxxopts_1_1_options_1a862b3814638d3a11f582c417e09f02fc" kindref="member">m_allow_unrecognised</ref>);</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser.<ref refid="classcxxopts_1_1_option_parser_1a4218816ce33c211b54acb9e71603ea0b" kindref="member">parse</ref>(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result" kindref="compound">ParseResult</ref></highlight></codeline>
<codeline lineno="2296" refid="classcxxopts_1_1_option_parser_1a4218816ce33c211b54acb9e71603ea0b" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_option_parser_1a4218816ce33c211b54acb9e71603ea0b" kindref="member">OptionParser::parse</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>argv)</highlight></codeline>
<codeline lineno="2297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>consume_remaining<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>next_positional<sp/>=<sp/><ref refid="classcxxopts_1_1_option_parser_1a424687c64b3524f638b2d26376ea39c3" kindref="member">m_positional</ref>.<ref refid="classcxxopts_1_1_parse_result_1a04bc1c49adacb8ded2d4f615a1b8bc82" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>unmatched;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current<sp/>!=<sp/>argc)</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argv[current],<sp/></highlight><highlight class="stringliteral">&quot;--&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consume_remaining<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++current;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc" kindref="compound">values::parser_tool::ArguDesc</ref><sp/>argu_desc<sp/>=</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1_1values_1_1parser__tool_1a0c95fda26d85865d26182d1df061ed8a" kindref="member">values::parser_tool::ParseArgument</ref>(argv[current],<sp/>matched);</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!matched)</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//not<sp/>a<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>if<sp/>it<sp/>starts<sp/>with<sp/>a<sp/>`-`,<sp/>then<sp/>it&apos;s<sp/>an<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[current][0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>argv[current][1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classcxxopts_1_1_option_parser_1a9603840d51c4695b3ad5258702c619d9" kindref="member">m_allow_unrecognised</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;option_syntax_exception&gt;(argv[current]);</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>true<sp/>is<sp/>returned<sp/>here<sp/>then<sp/>it<sp/>was<sp/>consumed,<sp/>otherwise<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcxxopts_1_1_option_parser_1a4d595d8f6f34760bc2248d1b96af53a4" kindref="member">consume_positional</ref>(argv[current],<sp/>next_positional))</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unmatched.emplace_back(argv[current]);</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>we<sp/>return<sp/>from<sp/>here<sp/>then<sp/>it<sp/>was<sp/>parsed<sp/>successfully,<sp/>so<sp/>continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//short<sp/>or<sp/>long<sp/>option?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argu_desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a40b774c45dd1737936c205efa87168e4" kindref="member">grouping</ref>)</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s<sp/>=<sp/>argu_desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a35ee7f646c94992a633956cfb1807d70" kindref="member">arg_name</ref>;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>s.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name(1,<sp/>s[i]);</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/><ref refid="classcxxopts_1_1_option_parser_1a1daaa87be1a5f6cc379f880e916b9958" kindref="member">m_options</ref>.find(name);</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>==<sp/><ref refid="classcxxopts_1_1_option_parser_1a1daaa87be1a5f6cc379f880e916b9958" kindref="member">m_options</ref>.end())</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcxxopts_1_1_option_parser_1a9603840d51c4695b3ad5258702c619d9" kindref="member">m_allow_unrecognised</ref>)</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unmatched.push_back(std::string(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">)<sp/>+<sp/>s[i]);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;option_not_exists_exception&gt;(name);</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref><sp/>=<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>1<sp/>==<sp/>s.size())</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//it<sp/>must<sp/>be<sp/>the<sp/>last<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a0c093ba32746de7c3b08715eab961aff" kindref="member">checked_parse_arg</ref>(argc,<sp/>argv,<sp/>current,<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,<sp/>name);</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>-&gt;value().has_implicit())</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a07db7b6bb2095df7b75b50ed2311ffe5" kindref="member">parse_option</ref>(<ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,<sp/>name,<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>-&gt;value().get_implicit_value());</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>1<sp/>&lt;<sp/>s.size())</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>arg_value<sp/>=<sp/>s.substr(i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a07db7b6bb2095df7b75b50ed2311ffe5" kindref="member">parse_option</ref>(<ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,<sp/>name,<sp/>arg_value);</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;option_requires_argument_exception&gt;(name);</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argu_desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a35ee7f646c94992a633956cfb1807d70" kindref="member">arg_name</ref>.length()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name<sp/>=<sp/>argu_desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a35ee7f646c94992a633956cfb1807d70" kindref="member">arg_name</ref>;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/><ref refid="classcxxopts_1_1_option_parser_1a1daaa87be1a5f6cc379f880e916b9958" kindref="member">m_options</ref>.find(name);</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>==<sp/><ref refid="classcxxopts_1_1_option_parser_1a1daaa87be1a5f6cc379f880e916b9958" kindref="member">m_options</ref>.end())</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcxxopts_1_1_option_parser_1a9603840d51c4695b3ad5258702c619d9" kindref="member">m_allow_unrecognised</ref>)</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>unrecognised<sp/>options<sp/>in<sp/>argument<sp/>list,<sp/>skip<sp/>to<sp/>next<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unmatched.emplace_back(argv[current]);</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++current;</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw_or_mimic&lt;option_not_exists_exception&gt;(name);</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>opt<sp/>=<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//equals<sp/>provided<sp/>for<sp/>long<sp/>option?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argu_desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1a2bb71b16c97fa27af41d8d03bca1f06a" kindref="member">set_value</ref>)</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parse<sp/>the<sp/>option<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a07db7b6bb2095df7b75b50ed2311ffe5" kindref="member">parse_option</ref>(opt,<sp/>name,<sp/>argu_desc.<ref refid="structcxxopts_1_1values_1_1parser__tool_1_1_argu_desc_1ac60c40e3b9798897ebbfd76040eb2208" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parse<sp/>the<sp/>next<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a0c093ba32746de7c3b08715eab961aff" kindref="member">checked_parse_arg</ref>(argc,<sp/>argv,<sp/>current,<sp/>opt,<sp/>name);</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/>++current;</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>opt<sp/>:<sp/><ref refid="classcxxopts_1_1_option_parser_1a1daaa87be1a5f6cc379f880e916b9958" kindref="member">m_options</ref>)</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>detail<sp/>=<sp/>opt.second;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref><sp/>=<sp/>detail-&gt;value();</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>store<sp/>=<sp/><ref refid="classcxxopts_1_1_option_parser_1a941358c67afc74005bdd779c39c9ed44" kindref="member">m_parsed</ref>[detail-&gt;hash()];</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>.has_default())<sp/>{</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!store.count()<sp/>&amp;&amp;<sp/>!store.has_default())<sp/>{</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a28026f132e532009842f11359fb08373" kindref="member">parse_default</ref>(detail);</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a80bbe1ff81b5d39bf6fda208e95a0d04" kindref="member">parse_no_value</ref>(detail);</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(consume_remaining)</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current<sp/>&lt;<sp/>argc)</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classcxxopts_1_1_option_parser_1a4d595d8f6f34760bc2248d1b96af53a4" kindref="member">consume_positional</ref>(argv[current],<sp/>next_positional))<sp/>{</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++current;</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//adjust<sp/>argv<sp/>for<sp/>any<sp/>that<sp/>couldn&apos;t<sp/>be<sp/>swallowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current<sp/>!=<sp/>argc)<sp/>{</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unmatched.emplace_back(argv[current]);</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++current;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a375fff61bb08268e6deb81baa0514b27" kindref="member">finalise_aliases</ref>();</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><ref refid="classcxxopts_1_1_parse_result" kindref="compound">ParseResult</ref><sp/>parsed(std::move(<ref refid="classcxxopts_1_1_option_parser_1a55888886d57470ca84f908948b39fe6b" kindref="member">m_keys</ref>),<sp/>std::move(<ref refid="classcxxopts_1_1_option_parser_1a941358c67afc74005bdd779c39c9ed44" kindref="member">m_parsed</ref>),<sp/>std::move(<ref refid="classcxxopts_1_1_option_parser_1a5b4c043201d07e3a37a138313ea53fef" kindref="member">m_sequential</ref>),<sp/>std::move(<ref refid="classcxxopts_1_1_option_parser_1aeebe66824e25c8d466ecfd21c4234380" kindref="member">m_defaults</ref>),<sp/>std::move(unmatched));</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parsed;</highlight></codeline>
<codeline lineno="2463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2467" refid="classcxxopts_1_1_option_parser_1a375fff61bb08268e6deb81baa0514b27" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_option_parser_1a375fff61bb08268e6deb81baa0514b27" kindref="member">OptionParser::finalise_aliases</ref>()</highlight></codeline>
<codeline lineno="2468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>option:<sp/><ref refid="classcxxopts_1_1_option_parser_1a1daaa87be1a5f6cc379f880e916b9958" kindref="member">m_options</ref>)</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>detail<sp/>=<sp/>*option.second;</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>detail.hash();</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a55888886d57470ca84f908948b39fe6b" kindref="member">m_keys</ref>[detail.short_name()]<sp/>=<sp/>hash;</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a55888886d57470ca84f908948b39fe6b" kindref="member">m_keys</ref>[detail.long_name()]<sp/>=<sp/>hash;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_option_parser_1a941358c67afc74005bdd779c39c9ed44" kindref="member">m_parsed</ref>.emplace(hash,<sp/><ref refid="classcxxopts_1_1_option_value" kindref="compound">OptionValue</ref>());</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2482" refid="classcxxopts_1_1_options_1ac698adfe5b5ca50d36017a52b27fb828" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_options_1ac698adfe5b5ca50d36017a52b27fb828" kindref="member">Options::add_option</ref></highlight></codeline>
<codeline lineno="2483"><highlight class="normal">(</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>group,</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcxxopts_1_1_option" kindref="compound">Option</ref>&amp;<sp/>option</highlight></codeline>
<codeline lineno="2486"><highlight class="normal">)</highlight></codeline>
<codeline lineno="2487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a8c4fcf551295cde940a1a60012b3e9b6" kindref="member">add_options</ref>(group,<sp/>{option});</highlight></codeline>
<codeline lineno="2489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2493" refid="classcxxopts_1_1_options_1af6a920c65d1a22140278b8f2637f8930" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_options_1ac698adfe5b5ca50d36017a52b27fb828" kindref="member">Options::add_option</ref></highlight></codeline>
<codeline lineno="2494"><highlight class="normal">(</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>group,</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>l,</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/>std::string<sp/>desc,</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>Value&gt;&amp;<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/>std::string<sp/>arg_help</highlight></codeline>
<codeline lineno="2501"><highlight class="normal">)</highlight></codeline>
<codeline lineno="2502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stringDesc<sp/>=<sp/><ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(std::move(desc));</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>option<sp/>=<sp/>std::make_shared&lt;OptionDetails&gt;(s,<sp/>l,<sp/>stringDesc,<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.empty())</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a6a7ca6845bfe17a801b0c3f229655f42" kindref="member">add_one_option</ref>(s,<sp/>option);</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l.empty())</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a6a7ca6845bfe17a801b0c3f229655f42" kindref="member">add_one_option</ref>(l,<sp/>option);</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><ref refid="classcxxopts_1_1_options_1a7408c12072b6d9a6cb7581ec17b48a1e" kindref="member">m_option_list</ref>.push_front(*option.get());</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/><ref refid="classcxxopts_1_1_options_1a7408c12072b6d9a6cb7581ec17b48a1e" kindref="member">m_option_list</ref>.begin();</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><ref refid="classcxxopts_1_1_options_1adc78b18ef63a36a06c3311e6c56b9ebb" kindref="member">m_option_map</ref>[s]<sp/>=<sp/>iter;</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><ref refid="classcxxopts_1_1_options_1adc78b18ef63a36a06c3311e6c56b9ebb" kindref="member">m_option_map</ref>[l]<sp/>=<sp/>iter;</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//add<sp/>the<sp/>help<sp/>details</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>options<sp/>=<sp/><ref refid="classcxxopts_1_1_options_1a5df536e6ca2018564263e350c2ed8679" kindref="member">m_help</ref>[group];</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/>options.options.emplace_back(<ref refid="structcxxopts_1_1_help_option_details" kindref="compound">HelpOptionDetails</ref>{s,<sp/>l,<sp/>stringDesc,</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>-&gt;<ref refid="structcxxopts_1_1_help_option_details_1ac869dd2ac03fc090f34bce1907f5edd5" kindref="member">has_default</ref>(),<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>-&gt;get_default_value(),</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>-&gt;has_implicit(),<sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>-&gt;get_implicit_value(),</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::move(arg_help),</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>-&gt;is_container(),</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a6b58e451713ebbf12866c1cd8e0a66ab" kindref="member">value</ref>-&gt;is_boolean()});</highlight></codeline>
<codeline lineno="2530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2534" refid="classcxxopts_1_1_options_1a6a7ca6845bfe17a801b0c3f229655f42" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_options_1a6a7ca6845bfe17a801b0c3f229655f42" kindref="member">Options::add_one_option</ref></highlight></codeline>
<codeline lineno="2535"><highlight class="normal">(</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>option,</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OptionDetails&gt;&amp;<sp/>details</highlight></codeline>
<codeline lineno="2538"><highlight class="normal">)</highlight></codeline>
<codeline lineno="2539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>in<sp/>=<sp/><ref refid="classcxxopts_1_1_options_1a6eda69429efb7bff7e3837c67c2953be" kindref="member">m_options</ref>-&gt;emplace(option,<sp/>details);</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!in.second)</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/>throw_or_mimic&lt;option_exists_error&gt;(option);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref></highlight></codeline>
<codeline lineno="2550" refid="classcxxopts_1_1_options_1a7a9611069d511f815c71a1f4aca302eb" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_options_1a7a9611069d511f815c71a1f4aca302eb" kindref="member">Options::help_one_group</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>g)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2551"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">OptionHelp<sp/>=<sp/>std::vector&lt;std::pair&lt;String,<sp/>String&gt;&gt;;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>group<sp/>=<sp/><ref refid="classcxxopts_1_1_options_1a5df536e6ca2018564263e350c2ed8679" kindref="member">m_help</ref>.find(g);</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(group<sp/>==<sp/><ref refid="classcxxopts_1_1_options_1a5df536e6ca2018564263e350c2ed8679" kindref="member">m_help</ref>.end())</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/>OptionHelp<sp/>format;</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>longest<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref><sp/>result;</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g.empty())</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>g<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>options:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>o<sp/>:<sp/>group-&gt;second.options)</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcxxopts_1_1_options_1ad9aeb1f3ce3755f6294442c419a414c1" kindref="member">m_positional_set</ref>.find(o.l)<sp/>!=<sp/><ref refid="classcxxopts_1_1_options_1ad9aeb1f3ce3755f6294442c419a414c1" kindref="member">m_positional_set</ref>.end()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classcxxopts_1_1_options_1ae0a47e72e50fc46543bc1bce186fe66a" kindref="member">m_show_positional</ref>)</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>format_option(o);</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/>longest<sp/>=<sp/>(std::max)(longest,<sp/><ref refid="namespacecxxopts_1a6e40a21a193047cd4575ac90411ca295" kindref="member">stringLength</ref>(s));</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/>format.push_back(std::make_pair(s,<sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>()));</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/>longest<sp/>=<sp/>(std::min)(longest,<sp/>OPTION_LONGEST);</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//widest<sp/>allowed<sp/>description<sp/>--<sp/>min<sp/>10<sp/>chars<sp/>for<sp/>helptext/line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>allowed<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcxxopts_1_1_options_1a195a58cf2247ca00746c647f942a5fda" kindref="member">m_width</ref><sp/>&gt;<sp/>allowed<sp/>+<sp/>longest<sp/>+<sp/>OPTION_DESC_GAP)</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/>allowed<sp/>=<sp/><ref refid="classcxxopts_1_1_options_1a195a58cf2247ca00746c647f942a5fda" kindref="member">m_width</ref><sp/>-<sp/>longest<sp/>-<sp/>OPTION_DESC_GAP;</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"></highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fiter<sp/>=<sp/>format.begin();</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>o<sp/>:<sp/>group-&gt;second.options)</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcxxopts_1_1_options_1ad9aeb1f3ce3755f6294442c419a414c1" kindref="member">m_positional_set</ref>.find(o.l)<sp/>!=<sp/><ref refid="classcxxopts_1_1_options_1ad9aeb1f3ce3755f6294442c419a414c1" kindref="member">m_positional_set</ref>.end()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classcxxopts_1_1_options_1ae0a47e72e50fc46543bc1bce186fe66a" kindref="member">m_show_positional</ref>)</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>format_description(o,<sp/>longest<sp/>+<sp/>OPTION_DESC_GAP,<sp/>allowed,<sp/><ref refid="classcxxopts_1_1_options_1ad8a944b69e10ac5ac5c163a1415088f1" kindref="member">m_tab_expansion</ref>);</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>fiter-&gt;first;</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecxxopts_1a6e40a21a193047cd4575ac90411ca295" kindref="member">stringLength</ref>(fiter-&gt;first)<sp/>&gt;<sp/>longest)</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(std::string(longest<sp/>+<sp/>OPTION_DESC_GAP,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(std::string(longest<sp/>+<sp/>OPTION_DESC_GAP<sp/>-</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1a6e40a21a193047cd4575ac90411ca295" kindref="member">stringLength</ref>(fiter-&gt;first),</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/>++fiter;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2626" refid="classcxxopts_1_1_options_1ab09329dad31b464891556a4cd2659d04" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_options_1ab09329dad31b464891556a4cd2659d04" kindref="member">Options::generate_group_help</ref></highlight></codeline>
<codeline lineno="2627"><highlight class="normal">(</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;<sp/>result,</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>print_groups</highlight></codeline>
<codeline lineno="2630"><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2631"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>print_groups.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;<sp/>group_help_text<sp/>=<sp/><ref refid="classcxxopts_1_1_options_1a7a9611069d511f815c71a1f4aca302eb" kindref="member">help_one_group</ref>(print_groups[i]);</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecxxopts_1a3ffde9e4565bba175bd56c06c0f99162" kindref="member">empty</ref>(group_help_text))</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>group_help_text;</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>print_groups.size()<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2649" refid="classcxxopts_1_1_options_1adc15c2e713a3c026c7a25e83612ec247" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_options_1adc15c2e713a3c026c7a25e83612ec247" kindref="member">Options::generate_all_groups_help</ref>(<ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref>&amp;<sp/>result)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2650"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>all_groups;</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/>std::transform(</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a5df536e6ca2018564263e350c2ed8679" kindref="member">m_help</ref>.begin(),</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a5df536e6ca2018564263e350c2ed8679" kindref="member">m_help</ref>.end(),</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/>std::back_inserter(all_groups),</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/>[]<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>HelpGroupDetails&gt;::value_type&amp;<sp/>group)</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>group.first;</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><ref refid="classcxxopts_1_1_options_1ab09329dad31b464891556a4cd2659d04" kindref="member">generate_group_help</ref>(result,<sp/>all_groups);</highlight></codeline>
<codeline lineno="2664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal">std::string</highlight></codeline>
<codeline lineno="2668" refid="classcxxopts_1_1_options_1a7392b09071f42ed45dea85738af965b4" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_options_1a7392b09071f42ed45dea85738af965b4" kindref="member">Options::help</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>help_groups)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2669"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><ref refid="namespacecxxopts_1a0ae1a379f800ffc427fa06539fb72b2f" kindref="member">String</ref><sp/>result<sp/>=<sp/><ref refid="classcxxopts_1_1_options_1a415a57d6ed9bac80126e1b9d5e8b800f" kindref="member">m_help_string</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nUsage:\n<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(<ref refid="classcxxopts_1_1_options_1a49f97b72bcc81357c9df0cbc657bb3a7" kindref="member">m_program</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(<ref refid="classcxxopts_1_1_options_1a32488bc1b1581d80b90a8a476fbeb1c4" kindref="member">m_custom_help</ref>);</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classcxxopts_1_1_options_1a2f7e42d87e511d25966cf48b504fa1f9" kindref="member">m_positional</ref>.empty()<sp/>&amp;&amp;<sp/>!<ref refid="classcxxopts_1_1_options_1ac5274870d676ae960f285a2e8f0dfdf6" kindref="member">m_positional_help</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacecxxopts_1ac8ee50fdeb30245d157343a3bade9ede" kindref="member">toLocalString</ref>(<ref refid="classcxxopts_1_1_options_1ac5274870d676ae960f285a2e8f0dfdf6" kindref="member">m_positional_help</ref>);</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(help_groups.empty())</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1adc15c2e713a3c026c7a25e83612ec247" kindref="member">generate_all_groups_help</ref>(result);</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1ab09329dad31b464891556a4cd2659d04" kindref="member">generate_group_help</ref>(result,<sp/>help_groups);</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecxxopts_1a21f7a08caacc41cc3475f4bc7f9a1a67" kindref="member">toUTF8String</ref>(result);</highlight></codeline>
<codeline lineno="2689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal">std::vector&lt;std::string&gt;</highlight></codeline>
<codeline lineno="2693" refid="classcxxopts_1_1_options_1a86dce378e2f277514653394952715021" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_options_1a86dce378e2f277514653394952715021" kindref="member">Options::groups</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2694"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>g;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/>std::transform(</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a5df536e6ca2018564263e350c2ed8679" kindref="member">m_help</ref>.begin(),</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcxxopts_1_1_options_1a5df536e6ca2018564263e350c2ed8679" kindref="member">m_help</ref>.end(),</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/>std::back_inserter(g),</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/>[]<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>HelpGroupDetails&gt;::value_type&amp;<sp/>pair)</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>pair.first;</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g;</highlight></codeline>
<codeline lineno="2708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcxxopts_1_1_help_group_details" kindref="compound">HelpGroupDetails</ref>&amp;</highlight></codeline>
<codeline lineno="2712" refid="classcxxopts_1_1_options_1ab5ebc9a3f07419d8b5a58d55c9929f09" refkind="member"><highlight class="normal"><ref refid="classcxxopts_1_1_options_1ab5ebc9a3f07419d8b5a58d55c9929f09" kindref="member">Options::group_help</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>group)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2713"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_options_1a5df536e6ca2018564263e350c2ed8679" kindref="member">m_help</ref>.at(group);</highlight></codeline>
<codeline lineno="2715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cxxopts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2718"><highlight class="normal"></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//CXXOPTS_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/weinberg/Projects/EXP/include/cxxopts.H"/>
  </compounddef>
</doxygen>
