<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="exputils_8_h" kind="file" language="C++">
    <compoundname>exputils.H</compoundname>
    <includes local="no">string</includes>
    <includes local="no">Eigen/Eigen</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/include/exputils.H</label>
        <link refid="exputils_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Eigen/Eigen</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="exputils_8_h_1a37b433809e32a3f1ca9c1752e94a7c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; bool, double, std::vector&lt; double &gt; &gt;</type>
        <definition>std::tuple&lt; bool, double, std::vector&lt; double &gt; &gt; orthoCompute</definition>
        <argsstring>(const std::vector&lt; Eigen::MatrixXd &gt; &amp;tests)</argsstring>
        <name>orthoCompute</name>
        <param>
          <type>const std::vector&lt; Eigen::MatrixXd &gt; &amp;</type>
          <declname>tests</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/exputils.H" line="10" column="1" declfile="/home/weinberg/Projects/EXP/include/exputils.H" declline="10" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="exputils_8_h_1aa87990e534a511950e6182dbaa831ce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void orthoTest</definition>
        <argsstring>(const std::vector&lt; Eigen::MatrixXd &gt; &amp;tests, const std::string &amp;classname, const std::string &amp;indexname)</argsstring>
        <name>orthoTest</name>
        <param>
          <type>const std::vector&lt; Eigen::MatrixXd &gt; &amp;</type>
          <declname>tests</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>classname</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>indexname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/exputils.H" line="12" column="6" declfile="/home/weinberg/Projects/EXP/include/exputils.H" declline="12" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>exputils<sp/>signatures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_EXPUTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_EXPUTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Eigen&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">std::tuple&lt;bool,<sp/>double,<sp/>std::vector&lt;double&gt;&gt;</highlight></codeline>
<codeline lineno="10" refid="exputils_8_h_1a37b433809e32a3f1ca9c1752e94a7c07" refkind="member"><highlight class="normal"><ref refid="exputils_8_h_1a37b433809e32a3f1ca9c1752e94a7c07" kindref="member">orthoCompute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Eigen::MatrixXd&gt;&amp;<sp/>tests);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="exputils_8_h_1aa87990e534a511950e6182dbaa831ce1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="exputils_8_h_1aa87990e534a511950e6182dbaa831ce1" kindref="member">orthoTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Eigen::MatrixXd&gt;&amp;<sp/>tests,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>classname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>indexname);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/weinberg/Projects/EXP/include/exputils.H"/>
  </compounddef>
</doxygen>
