<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="faq" kind="page">
    <compoundname>faq</compoundname>
    <title>FAQ</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Q1. The code dies repetitively at the same time step while trying to write phase-space output. What is wrong?</title><para><verbatim>    Older distributions of GNU/Linux have a 2&lt;sup&gt;31&lt;/sup&gt; file-size
    limit.  Newer versions (e.g. on the buzzard cluster) do not
    have this limitation.  Either periodically rename your output file 
    or use the &quot;outpsn&quot; (see OutPSN) method, which writes each %dump 
    to its own file.  

    However, the standard production version of GNU C++ (v. 3.3)
    has an iostream bug that also limits C++ streams to the same
    2&lt;sup&gt;31&lt;/sup&gt; file-size. This has been fixed by the gcc folks
    and this problem will disappear in GNU C++ v 3.4.
</verbatim> </para>
</simplesect>
<simplesect kind="par"><title>Q2. My loadable modules don&apos;t load. What is wrong?</title><para><verbatim>    The global variable &lt;code&gt;ldlibdir&lt;/code&gt; defines the
    location of all the loadable libraries.  Make sure that
    you include this in your input file, e.g. a line like:

    &lt;code&gt; ldlibdir : /home/weinberg/lib/user &lt;/code&gt;

    The default value for &lt;code&gt;ldlibdir&lt;/code&gt; is the current
    directory, so if you want to test a particular module, you
    can put it in your run directory without specifying a library
    location.
</verbatim> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="faq.doc"/>
  </compounddef>
</doxygen>
