<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="foarray_8_h" kind="file" language="C++">
    <compoundname>foarray.H</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/utils/Analysis/foarray.H</label>
        <link refid="foarray_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classfoarray" prot="public">foarray</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maintain<sp/>an<sp/>array<sp/>of<sp/>pointers<sp/>to<sp/>ofstreams</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classfoarray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfoarray" kindref="compound">foarray</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13" refid="classfoarray_1aee0297dd51e58572455503a9a6425fd4" refkind="member"><highlight class="normal"><sp/><sp/>vector&lt;ofstream*&gt;<sp/><ref refid="classfoarray_1aee0297dd51e58572455503a9a6425fd4" kindref="member">fo</ref>;</highlight></codeline>
<codeline lineno="14" refid="classfoarray_1ab9fd4c149bd88dc82a0e0a6ae3e98533" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classfoarray_1ab9fd4c149bd88dc82a0e0a6ae3e98533" kindref="member">fnum</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classfoarray_1a00dbe5bc427c0cc59cdf36cba11c839c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classfoarray_1a00dbe5bc427c0cc59cdf36cba11c839c" kindref="member">foarray</ref>(vector&lt;string&gt;&amp;<sp/>names,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>append=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfoarray_1ab9fd4c149bd88dc82a0e0a6ae3e98533" kindref="member">fnum</ref><sp/>=<sp/>names.size();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfoarray_1aee0297dd51e58572455503a9a6425fd4" kindref="member">fo</ref><sp/>=<sp/>vector&lt;ofstream*&gt;(<ref refid="classfoarray_1ab9fd4c149bd88dc82a0e0a6ae3e98533" kindref="member">fnum</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n=0;<sp/>n&lt;<ref refid="classfoarray_1ab9fd4c149bd88dc82a0e0a6ae3e98533" kindref="member">fnum</ref>;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(append)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfoarray_1aee0297dd51e58572455503a9a6425fd4" kindref="member">fo</ref>[n]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ofstream(names[n].c_str(),<sp/>ios::app);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfoarray_1aee0297dd51e58572455503a9a6425fd4" kindref="member">fo</ref>[n]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ofstream(names[n].c_str());</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*<ref refid="classfoarray_1aee0297dd51e58572455503a9a6425fd4" kindref="member">fo</ref>[n])<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>&lt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>names[n]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;<sp/>for<sp/>output\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classfoarray_1aa628a8f891d5bbca52c2185df626d934" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classfoarray_1aa628a8f891d5bbca52c2185df626d934" kindref="member">~foarray</ref>()</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n=0;<sp/>n&lt;<ref refid="classfoarray_1ab9fd4c149bd88dc82a0e0a6ae3e98533" kindref="member">fnum</ref>;<sp/>n++)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classfoarray_1aee0297dd51e58572455503a9a6425fd4" kindref="member">fo</ref>[n];</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classfoarray_1a1aed6f4d1e0cda07e609f47e1ff2e8e1" refkind="member"><highlight class="normal"><sp/><sp/>ofstream&amp;<sp/><ref refid="classfoarray_1a1aed6f4d1e0cda07e609f47e1ff2e8e1" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>min&lt;int&gt;(max&lt;int&gt;(n,<sp/>0),<sp/>n);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(<ref refid="classfoarray_1aee0297dd51e58572455503a9a6425fd4" kindref="member">fo</ref>[n]);<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/weinberg/Projects/EXP/utils/Analysis/foarray.H"/>
  </compounddef>
</doxygen>
