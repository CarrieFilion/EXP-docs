<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="permutation_8_h" kind="file" language="C++">
    <compoundname>permutation.H</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">numeric</includes>
    <includes local="no">random</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/include/permutation.H</label>
        <link refid="permutation_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>numeric</label>
      </node>
      <node id="4">
        <label>random</label>
      </node>
    </incdepgraph>
    <innerclass refid="classpermutation" prot="public">permutation</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_PERMUTATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PERMUTATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classpermutation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpermutation" kindref="compound">permutation</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classpermutation_1abc5c92591820f37ba377b06f622f6cad" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classpermutation_1abc5c92591820f37ba377b06f622f6cad" kindref="member">permutation</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>full=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="classpermutation_1a72414b581a3bef4c01631129e26a9d0f" kindref="member">perm</ref>(n),<sp/><ref refid="classpermutation_1a44dc1dbc08633d19ab1e8eef0825b38f" kindref="member">g</ref>(std::random_device{}())</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(full)<sp/><ref refid="classpermutation_1aff5c189cdce245b00d11ecd9cd1e186d" kindref="member">seed19937</ref>();<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hard-core<sp/>mt19937<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>std::iota(<ref refid="classpermutation_1a72414b581a3bef4c01631129e26a9d0f" kindref="member">perm</ref>.begin(),<sp/><ref refid="classpermutation_1a72414b581a3bef4c01631129e26a9d0f" kindref="member">perm</ref>.end(),<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(0));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classpermutation_1a4d9c363b55084a0c60d0a3f2056dd171" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpermutation_1a4d9c363b55084a0c60d0a3f2056dd171" kindref="member">shuffle</ref>()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="localmpi_8_h_1a20705b4372a9940d34a164bae541be1f" kindref="member">myid</ref>==0)<sp/>std::shuffle(<ref refid="classpermutation_1a72414b581a3bef4c01631129e26a9d0f" kindref="member">perm</ref>.begin(),<sp/><ref refid="classpermutation_1a72414b581a3bef4c01631129e26a9d0f" kindref="member">perm</ref>.end(),<sp/><ref refid="classpermutation_1a44dc1dbc08633d19ab1e8eef0825b38f" kindref="member">g</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="localmpi_8_h_1a31bfe068640b411bea3df0d69177ded5" kindref="member">numprocs</ref>&gt;1)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Bcast(<ref refid="classpermutation_1a72414b581a3bef4c01631129e26a9d0f" kindref="member">perm</ref>.data(),<sp/><ref refid="classpermutation_1a72414b581a3bef4c01631129e26a9d0f" kindref="member">perm</ref>.size(),<sp/>MPI_UNSIGNED,<sp/>0,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classpermutation_1adbea72eabd3083c77ba494cc15900ad6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classpermutation_1adbea72eabd3083c77ba494cc15900ad6" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpermutation_1a72414b581a3bef4c01631129e26a9d0f" kindref="member">perm</ref>[n];<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44" refid="classpermutation_1a72414b581a3bef4c01631129e26a9d0f" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;size_t&gt;<sp/><ref refid="classpermutation_1a72414b581a3bef4c01631129e26a9d0f" kindref="member">perm</ref>;</highlight></codeline>
<codeline lineno="45" refid="classpermutation_1a44dc1dbc08633d19ab1e8eef0825b38f" refkind="member"><highlight class="normal"><sp/><sp/>std::mt19937<sp/><ref refid="classpermutation_1a44dc1dbc08633d19ab1e8eef0825b38f" kindref="member">g</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classpermutation_1aff5c189cdce245b00d11ecd9cd1e186d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpermutation_1aff5c189cdce245b00d11ecd9cd1e186d" kindref="member">seed19937</ref>()</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>hardware<sp/>random<sp/>#<sp/>generator,<sp/>hopefully</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::random_device<sp/>rdev;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>an<sp/>array<sp/>that<sp/>fills<sp/>the<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::seed_seq::result_type<sp/>data[std::mt19937::state_size];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>random<sp/>number<sp/>for<sp/>the<sp/>full<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>std::generate_n(data,<sp/>std::mt19937::state_size,<sp/>std::ref(rdev));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>the<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::seed_seq<sp/>prng_seed<sp/>(data,<sp/>data<sp/>+<sp/>std::mt19937::state_size);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finally,<sp/>seed<sp/>the<sp/>mt19937</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpermutation_1a44dc1dbc08633d19ab1e8eef0825b38f" kindref="member">g</ref>.seed(prng_seed);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/weinberg/Projects/EXP/include/permutation.H"/>
  </compounddef>
</doxygen>
