<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="psp__io_8py" kind="file" language="Python">
    <compoundname>psp_io.py</compoundname>
    <innerclass refid="classpsp__io_1_1_input" prot="public">psp_io::Input</innerclass>
    <innerclass refid="classpsp__io_1_1_o_u_t_input" prot="public">psp_io::OUTInput</innerclass>
    <innerclass refid="classpsp__io_1_1_s_p_l_input" prot="public">psp_io::SPLInput</innerclass>
    <innernamespace refid="namespacepsp__io">psp_io</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacepsp__io" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">psp_io.py</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral"><sp/><sp/><sp/>driver<sp/>for<sp/>input<sp/>classes<sp/>and<sp/>handling<sp/>particle<sp/>data<sp/>in<sp/>Python</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">MSP<sp/>25<sp/>Oct<sp/>2021<sp/>Overhauled<sp/>version</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">TODO</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>requires<sp/>yaml<sp/>support:<sp/>likely<sp/>needs<sp/>to<sp/>be<sp/>installed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>yaml</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ImportError(</highlight><highlight class="stringliteral">&quot;You<sp/>will<sp/>need<sp/>to<sp/>&apos;pip<sp/>install<sp/>pyyaml&apos;<sp/>to<sp/>use<sp/>this<sp/>reader.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classpsp__io_1_1_input" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpsp__io_1_1_input" kindref="compound">Input</ref>():</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Input<sp/>class<sp/>to<sp/>adaptively<sp/>handle<sp/>various<sp/>EXP<sp/>output<sp/>formats.</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>inputs</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>---------------</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>filename<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>input<sp/>filename<sp/>to<sp/>be<sp/>read</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>comp<sp/><sp/><sp/><sp/><sp/>:<sp/>str,<sp/>optional</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>name<sp/>of<sp/>the<sp/>component<sp/>for<sp/>which<sp/>to<sp/>extract<sp/>data.<sp/>If<sp/>None,<sp/>will<sp/>read<sp/>primary<sp/>header<sp/>and<sp/>exit.</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>legacy<sp/><sp/><sp/>:<sp/>bool,<sp/>default=True</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>True,<sp/>return<sp/>attributes<sp/>rather<sp/>than<sp/>a<sp/>dictionary<sp/>of<sp/>particle<sp/>data</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>verbose<sp/><sp/>:<sp/>int,<sp/>default<sp/>0</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verbosity<sp/>flag.</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>returns</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>---------------</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>self<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Input<sp/>instance</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.header<sp/><sp/><sp/>:<sp/>dict,<sp/>all<sp/>header<sp/>values<sp/>pulled<sp/>from<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>.keys()<sp/>are<sp/>the<sp/>names<sp/>of<sp/>each<sp/>component</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>each<sp/>component<sp/>has<sp/>a<sp/>dictionary<sp/>of<sp/>values,<sp/>including<sp/>&apos;parameters&apos;</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>details<sp/>of<sp/>the<sp/>force<sp/>calculation<sp/>are<sp/>in<sp/>&apos;force&apos;</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.filename<sp/>:<sp/>str,<sp/>the<sp/>filename<sp/>that<sp/>was<sp/>read</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.comp<sp/><sp/><sp/><sp/><sp/>:<sp/>str,<sp/>name<sp/>of<sp/>the<sp/>component</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.time<sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>time<sp/>in<sp/>the<sp/>output<sp/>file</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.data<sp/><sp/><sp/><sp/><sp/>:<sp/>dictionary,<sp/>with<sp/>keys:</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>x<sp/>position</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>y<sp/>position</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>z<sp/>position</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vx<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>x<sp/>velocity</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vy<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>y<sp/>velocity</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vz<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>z<sp/>velocity</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass<sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>mass<sp/>of<sp/>the<sp/>particle</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/><sp/><sp/>:<sp/>int,<sp/>the<sp/>integer<sp/>index<sp/>of<sp/>the<sp/>particle</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>potE<sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>potential<sp/>energy<sp/>value</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>---or,<sp/>if<sp/>legacy=True---</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.xpos<sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>x<sp/>position</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.ypos<sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>y<sp/>position</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.zpos<sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>z<sp/>position</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.xvel<sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>x<sp/>velocity</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.yvel<sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>y<sp/>velocity</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.zvel<sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>z<sp/>velocity</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.mass<sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>mass<sp/>of<sp/>the<sp/>particle</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.indx<sp/><sp/><sp/><sp/><sp/>:<sp/>int,<sp/>the<sp/>integer<sp/>index<sp/>of<sp/>the<sp/>particle</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.pote<sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>potential<sp/>energy<sp/>value</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>filename,comp=None,<sp/>legacy=True,verbose=0):</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;the<sp/>main<sp/>driver<sp/>for<sp/>the<sp/>class&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>auto-determine<sp/>the<sp/>file<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;SPL.&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>filename:</highlight></codeline>
<codeline lineno="75" refid="classpsp__io_1_1_input_1a612daae817083b0d798bedeaacf3ebd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1a612daae817083b0d798bedeaacf3ebd8" kindref="member">style</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;SPL&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;OUT.&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>filename:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1a612daae817083b0d798bedeaacf3ebd8" kindref="member">style</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;OUT&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1a612daae817083b0d798bedeaacf3ebd8" kindref="member">style</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;unknown&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classpsp__io_1_1_input_1a612daae817083b0d798bedeaacf3ebd8" kindref="member">style</ref>==</highlight><highlight class="stringliteral">&apos;SPL&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>=<sp/><ref refid="classpsp__io_1_1_s_p_l_input" kindref="compound">SPLInput</ref>(filename,comp=comp,verbose=verbose)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classpsp__io_1_1_input_1a612daae817083b0d798bedeaacf3ebd8" kindref="member">style</ref>==</highlight><highlight class="stringliteral">&apos;OUT&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>=<sp/><ref refid="classpsp__io_1_1_o_u_t_input" kindref="compound">OUTInput</ref>(filename,comp=comp,verbose=verbose)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;File<sp/>type<sp/>not<sp/>supported<sp/>for<sp/>file<sp/>&quot;{}&quot;&apos;</highlight><highlight class="normal">.format(filename))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>expose<sp/>the<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classpsp__io_1_1_input_1a92880b322dca5cadce8b27e678f32090" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1a92880b322dca5cadce8b27e678f32090" kindref="member">header</ref><sp/>=<sp/>I.header</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>what<sp/>is<sp/>the<sp/>ideal<sp/>legacy<sp/>error<sp/>handling?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>I.comp==</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>legacy:</highlight></codeline>
<codeline lineno="97" refid="classpsp__io_1_1_input_1a09a9118df7e32dee11698de1015a3192" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1a09a9118df7e32dee11698de1015a3192" kindref="member">mass</ref><sp/>=<sp/>I.data[</highlight><highlight class="stringliteral">&apos;m&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="98" refid="classpsp__io_1_1_input_1a1c914cc2a57a27ac1fdd5c7b842daf5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1a1c914cc2a57a27ac1fdd5c7b842daf5e" kindref="member">xpos</ref><sp/>=<sp/>I.data[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="99" refid="classpsp__io_1_1_input_1a7e53261206a3d544998a274d5b78d41d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1a7e53261206a3d544998a274d5b78d41d" kindref="member">ypos</ref><sp/>=<sp/>I.data[</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="100" refid="classpsp__io_1_1_input_1ac75cc7a1765d0fe26164949569c58cda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1ac75cc7a1765d0fe26164949569c58cda" kindref="member">zpos</ref><sp/>=<sp/>I.data[</highlight><highlight class="stringliteral">&apos;z&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="101" refid="classpsp__io_1_1_input_1ac00d6108aae29ed82c65e0ae799d770d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1ac00d6108aae29ed82c65e0ae799d770d" kindref="member">xvel</ref><sp/>=<sp/>I.data[</highlight><highlight class="stringliteral">&apos;vx&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="102" refid="classpsp__io_1_1_input_1afa010d016b3517b00e1199d7da61030d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1afa010d016b3517b00e1199d7da61030d" kindref="member">yvel</ref><sp/>=<sp/>I.data[</highlight><highlight class="stringliteral">&apos;vy&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="103" refid="classpsp__io_1_1_input_1a8dfca1f617b48d810c28a3db9e73d479" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1a8dfca1f617b48d810c28a3db9e73d479" kindref="member">zvel</ref><sp/>=<sp/>I.data[</highlight><highlight class="stringliteral">&apos;vz&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="104" refid="classpsp__io_1_1_input_1a16200776daffd3ae62574fd194b251c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1a16200776daffd3ae62574fd194b251c0" kindref="member">pote</ref><sp/>=<sp/>I.data[</highlight><highlight class="stringliteral">&apos;potE&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(I.header[I.comp][</highlight><highlight class="stringliteral">&apos;parameters&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;indexing&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="107" refid="classpsp__io_1_1_input_1a405a7236f68afcc6ba61298be4f31649" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1a405a7236f68afcc6ba61298be4f31649" kindref="member">indx</ref><sp/>=<sp/>I.data[</highlight><highlight class="stringliteral">&apos;index&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110" refid="classpsp__io_1_1_input_1a8f4918d190f529cbeee19f967cafeaff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1a8f4918d190f529cbeee19f967cafeaff" kindref="member">data</ref><sp/>=<sp/>I.data</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classpsp__io_1_1_input_1a143e2adc8f17ced297b8b288363c4e50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1a143e2adc8f17ced297b8b288363c4e50" kindref="member">filename</ref><sp/>=<sp/>I.filename</highlight></codeline>
<codeline lineno="113" refid="classpsp__io_1_1_input_1ab7dfbd32a505ab6ac7748cf4ce03a437" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1ab7dfbd32a505ab6ac7748cf4ce03a437" kindref="member">comp</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>I.comp</highlight></codeline>
<codeline lineno="114" refid="classpsp__io_1_1_input_1a7de120efbc4b559cd3f971594b4f140a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpsp__io_1_1_input_1a7de120efbc4b559cd3f971594b4f140a" kindref="member">time</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>I.time</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classpsp__io_1_1_o_u_t_input" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpsp__io_1_1_o_u_t_input" kindref="compound">OUTInput</ref>:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Input<sp/>class<sp/>to<sp/>adaptively<sp/>handle<sp/>OUT.<sp/>format<sp/>specifically</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>inputs</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>---------------</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>filename<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>input<sp/>filename<sp/>to<sp/>be<sp/>read</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>comp<sp/><sp/><sp/><sp/><sp/>:<sp/>str,<sp/>optional</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>name<sp/>of<sp/>the<sp/>component<sp/>for<sp/>which<sp/>to<sp/>extract<sp/>data.<sp/>If<sp/>None,<sp/>will<sp/>read<sp/>primary<sp/>header<sp/>and<sp/>exit.</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>verbose<sp/><sp/>:<sp/>int,<sp/>default<sp/>0</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verbosity<sp/>flag.</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>returns</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>---------------</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>self<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Input<sp/>instance</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.header<sp/><sp/><sp/>:<sp/>dict,<sp/>all<sp/>header<sp/>values<sp/>pulled<sp/>from<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>.keys()<sp/>are<sp/>the<sp/>names<sp/>of<sp/>each<sp/>component</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>each<sp/>component<sp/>has<sp/>a<sp/>dictionary<sp/>of<sp/>values,<sp/>including<sp/>&apos;parameters&apos;</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>details<sp/>of<sp/>the<sp/>force<sp/>calculation<sp/>are<sp/>in<sp/>&apos;force&apos;</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.filename<sp/>:<sp/>str,<sp/>the<sp/>filename<sp/>that<sp/>was<sp/>read</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.comp<sp/><sp/><sp/><sp/><sp/>:<sp/>str,<sp/>name<sp/>of<sp/>the<sp/>component</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.time<sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>time<sp/>in<sp/>the<sp/>output<sp/>file</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>.data<sp/><sp/><sp/><sp/><sp/>:<sp/>dictionary,<sp/>with<sp/>keys:</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>x<sp/>position</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>y<sp/>position</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>z<sp/>position</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vx<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>x<sp/>velocity</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vy<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>y<sp/>velocity</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vz<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>z<sp/>velocity</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass<sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>mass<sp/>of<sp/>the<sp/>particle</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/><sp/><sp/>:<sp/>int,<sp/>the<sp/>integer<sp/>index<sp/>of<sp/>the<sp/>particle</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>potE<sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>potential<sp/>energy<sp/>value</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>filename,comp=None,verbose=0):</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;the<sp/>main<sp/>driver&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="155" refid="classpsp__io_1_1_o_u_t_input_1aec8e695a2524f7e1e3f8e9fa0093ab2f" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.verbose<sp/><sp/>=<sp/>verbose<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156" refid="classpsp__io_1_1_o_u_t_input_1ae4cf0c2e1a54c37ada93f0de4bf4999c" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.filename<sp/>=<sp/>filename</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>initial<sp/>check<sp/>for<sp/>file<sp/>validity</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try:</highlight></codeline>
<codeline lineno="160" refid="classpsp__io_1_1_o_u_t_input_1a89347f30d47e1ad80ef8798b454dd86d" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.f<sp/>=<sp/>open(self.filename,<sp/>&apos;rb&apos;)</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>except<sp/>Exception:</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>IOError(&apos;Failed<sp/>to<sp/>open<sp/>&quot;{}&quot;&apos;.format(filename))</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>do<sp/>an<sp/>initial<sp/>read<sp/>of<sp/>the<sp/>header</highlight></codeline>
<codeline lineno="165" refid="classpsp__io_1_1_o_u_t_input_1ad70e6ee27675b5583a1b601617ca4717" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.primary_header<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>initialise<sp/>dictionaries</highlight></codeline>
<codeline lineno="168" refid="classpsp__io_1_1_o_u_t_input_1ae8017596b1481871b779e679cd75b1b9" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.comp_map<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="169" refid="classpsp__io_1_1_o_u_t_input_1aa9a627a1ad132a98dc9cc98c2a4ad466" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.header<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._read_primary_header()</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="173" refid="classpsp__io_1_1_o_u_t_input_1a4346b3f463ce615b2812ffd717cb01ff" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.comp<sp/>=<sp/>comp</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_comps<sp/>=<sp/>list(self.header.keys())</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>if<sp/>a<sp/>component<sp/>is<sp/>defined,<sp/>retrieve<sp/>data</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>comp<sp/>!=<sp/>None:</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>comp<sp/>not<sp/>in<sp/>_comps:</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>IOError(&apos;The<sp/>specified<sp/>component<sp/>does<sp/>not<sp/>exist.&apos;)</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.comp<sp/>=<sp/>comp</highlight></codeline>
<codeline lineno="183" refid="classpsp__io_1_1_o_u_t_input_1a1559e1818560efe1105b18907969b012" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.data<sp/>=<sp/>self._read_component_data(self.filename,</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.header[self.comp][&apos;nbodies&apos;],</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int(self.header[self.comp][&apos;data_start&apos;]))</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>wrapup</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.f.close()</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>def<sp/>_read_primary_header(self):</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal">read<sp/>the<sp/>primary<sp/>header<sp/>from<sp/>an<sp/>OUT.<sp/>file&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._check_magic_number()</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>reset<sp/>to<sp/>beginning<sp/>and<sp/>read<sp/>current<sp/>time</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.f.seek(0)</highlight></codeline>
<codeline lineno="196" refid="classpsp__io_1_1_o_u_t_input_1a95c0d00ca6862f66cb7abdf5e18f166a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.time,<sp/>=<sp/>np.fromfile(self.f,<sp/>dtype=&apos;&lt;f8&apos;,<sp/>count=1)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._nbodies_tot,<sp/>self._ncomp<sp/>=<sp/>np.fromfile(self.f,<sp/>dtype=np.uint32,count=2)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_start<sp/>=<sp/>16</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>comp<sp/>in<sp/>range(0,self._ncomp):</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.f.seek(data_start)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_comp<sp/>=<sp/>self._read_out_component_header()</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_start<sp/>=<sp/>next_comp</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>_summarise_primary_header(self):</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;a<sp/>short<sp/>summary<sp/>of<sp/>what<sp/>is<sp/>in<sp/>the<sp/>file&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncomponents<sp/>=<sp/>len(self.header.keys())</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp_list<sp/><sp/><sp/>=<sp/>list(self.header.keys())</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;Found<sp/>{}<sp/>components.&quot;.format(ncomponents))</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>n<sp/>in<sp/>range(0,ncomponents):</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;Component<sp/>{}:<sp/>{}&quot;.format(n,comp_list[n]))</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>_read_out_component_header(self):</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;read<sp/>in<sp/>the<sp/>header<sp/>for<sp/>a<sp/>single<sp/>component,<sp/>from<sp/>an<sp/>OUT.<sp/>file&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#_<sp/>=<sp/>f.tell()<sp/><sp/>#<sp/>byte<sp/>position<sp/>of<sp/>this<sp/>component</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self._float_len<sp/>==<sp/>4:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_1,_2,<sp/>nbodies,<sp/>nint_attr,<sp/>nfloat_attr,<sp/>infostringlen<sp/>=<sp/>np.fromfile(self.f,<sp/>dtype=np.uint32,<sp/>count=6)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbodies,<sp/>nint_attr,<sp/>nfloat_attr,<sp/>infostringlen<sp/>=<sp/>np.fromfile(self.f,<sp/>dtype=np.uint32,<sp/>count=4)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>information<sp/>string<sp/>from<sp/>the<sp/>header</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head<sp/>=<sp/>np.fromfile(self.f,<sp/>dtype=np.dtype((np.bytes_,<sp/>infostringlen)),count=1)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_normal<sp/>=<sp/>head[0].decode()</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_dict<sp/>=<sp/>yaml.safe_load(head_normal)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>deprecated<sp/>backward<sp/>compatibility<sp/>here:<sp/>see<sp/>frozen<sp/>versions<sp/>if<sp/>this<sp/>is<sp/>an<sp/>old<sp/>file</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp_data_pos<sp/>=<sp/>self.f.tell()<sp/><sp/>#<sp/>byte<sp/>position<sp/>where<sp/>component<sp/>data<sp/>begins</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>the<sp/>default<sp/>fields<sp/>are<sp/>(m,<sp/>x,<sp/>y,<sp/>z,<sp/>vx,<sp/>vy,<sp/>vz,<sp/>p)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfields<sp/>=<sp/>8</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp_length<sp/>=<sp/>nbodies<sp/>*<sp/>(8<sp/>*<sp/>int(head_dict[&apos;parameters&apos;][&apos;indexing&apos;])<sp/>+</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._float_len<sp/>*<sp/>nfields<sp/>+</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>*<sp/>nint_attr<sp/>+</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._float_len<sp/>*<sp/>nfloat_attr)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp_data_end<sp/>=<sp/>self.f.tell()<sp/>+<sp/>comp_length<sp/><sp/>#<sp/>byte<sp/>pos.<sp/>of<sp/>comp.<sp/>data<sp/>end</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_dict[&apos;nint_attr&apos;]<sp/><sp/><sp/>=<sp/>nint_attr</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_dict[&apos;nfloat_attr&apos;]<sp/>=<sp/>nfloat_attr</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_dict[&apos;nbodies&apos;]<sp/><sp/><sp/><sp/><sp/>=<sp/>nbodies</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_dict[&apos;data_start&apos;]<sp/><sp/>=<sp/>comp_data_pos</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_dict[&apos;data_end&apos;]<sp/><sp/><sp/><sp/>=<sp/>comp_data_end</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.header[head_dict[&apos;name&apos;]]<sp/>=<sp/>head_dict</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>specifically<sp/>look<sp/>for<sp/>indexing</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try:</highlight></codeline>
<codeline lineno="254" refid="classpsp__io_1_1_o_u_t_input_1a85889d3b0d3d9518c4abeb480ba0feb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.indexing<sp/>=<sp/>head_dict[&apos;parameters&apos;][&apos;indexing&apos;]</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>except:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.indexing<sp/>=<sp/>head_dict[&apos;indexing&apos;]==&apos;true&apos;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>comp_data_end</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>_check_magic_number(self):</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;check<sp/>the<sp/>magic<sp/>number<sp/>to<sp/>see<sp/>if<sp/>a<sp/>file<sp/>is<sp/>float<sp/>or<sp/>double&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.f.seek(16)<sp/><sp/>#<sp/>find<sp/>magic<sp/>number</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmagic,<sp/>=<sp/>np.fromfile(self.f,<sp/>dtype=np.uint32,<sp/>count=1)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>check<sp/>if<sp/>it<sp/>is<sp/>float<sp/>vs.<sp/>double</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>cmagic<sp/>==<sp/>2915019716:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._float_len<sp/>=<sp/>4</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._float_str<sp/>=<sp/>&apos;f&apos;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._float_len<sp/>=<sp/>8</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._float_str<sp/>=<sp/>&apos;d&apos;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>_read_component_data(self,filename,nbodies,offset):</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;read<sp/>in<sp/>all<sp/>data<sp/>for<sp/>component&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype_str<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colnames<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.header[self.comp][&apos;parameters&apos;][&apos;indexing&apos;]:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>if<sp/>indexing<sp/>is<sp/>on,<sp/>the<sp/>0th<sp/>column<sp/>is<sp/>Long</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype_str<sp/>=<sp/>dtype_str<sp/>+<sp/>[&apos;l&apos;]</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colnames<sp/><sp/>=<sp/>colnames<sp/>+<sp/>[&apos;index&apos;]</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype_str<sp/>=<sp/>dtype_str<sp/>+<sp/>[self._float_str]<sp/>*<sp/>8</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colnames<sp/>=<sp/>colnames<sp/>+<sp/>[&apos;m&apos;,<sp/>&apos;x&apos;,<sp/>&apos;y&apos;,<sp/>&apos;z&apos;,<sp/>&apos;vx&apos;,<sp/>&apos;vy&apos;,<sp/>&apos;vz&apos;,<sp/>&apos;potE&apos;]</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype_str<sp/>=<sp/>dtype_str<sp/>+<sp/>[&apos;i&apos;]<sp/>*<sp/>self.header[self.comp][&apos;nint_attr&apos;]</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colnames<sp/>=<sp/>colnames<sp/>+<sp/>[&apos;i_attr{}&apos;.format(i)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(self.header[self.comp][&apos;nint_attr&apos;])]</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype_str<sp/>=<sp/>dtype_str<sp/>+<sp/>[self._float_str]<sp/>*<sp/>self.header[self.comp][&apos;nfloat_attr&apos;]</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colnames<sp/>=<sp/>colnames<sp/>+<sp/>[&apos;f_attr{}&apos;.format(i)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(self.header[self.comp][&apos;nfloat_attr&apos;])]</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype<sp/>=<sp/>np.dtype(&apos;,&apos;.join(dtype_str))</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>np.memmap(filename,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=dtype,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape=(1,<sp/>nbodies),</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset=offset,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>order=&apos;F&apos;,<sp/>mode=&apos;r&apos;)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbl<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i,<sp/>name<sp/>in<sp/>enumerate(colnames):</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbl[name]<sp/>=<sp/>np.array(out[&apos;f{}&apos;.format(i)][0],<sp/>copy=True)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>out<sp/><sp/>#<sp/>close<sp/>the<sp/>memmap<sp/>instance</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>tbl</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="classpsp__io_1_1_s_p_l_input" refkind="compound"><highlight class="normal">class<sp/>SPLInput:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;Input<sp/>class<sp/>to<sp/>adaptively<sp/>handle<sp/>SPL.<sp/>format<sp/>specifically</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>inputs</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>---------------</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>filename<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>input<sp/>filename<sp/>to<sp/>be<sp/>read</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>comp<sp/><sp/><sp/><sp/><sp/>:<sp/>str,<sp/>optional</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>name<sp/>of<sp/>the<sp/>component<sp/>for<sp/>which<sp/>to<sp/>extract<sp/>data.<sp/>If<sp/>None,<sp/>will<sp/>read<sp/>primary<sp/>header<sp/>and<sp/>exit.</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose<sp/><sp/>:<sp/>int,<sp/>default<sp/>0</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verbosity<sp/>flag.</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>returns</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>---------------</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>self<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Input<sp/>instance</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.header<sp/><sp/><sp/>:<sp/>dict,<sp/>all<sp/>header<sp/>values<sp/>pulled<sp/>from<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>.keys()<sp/>are<sp/>the<sp/>names<sp/>of<sp/>each<sp/>component</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>each<sp/>component<sp/>has<sp/>a<sp/>dictionary<sp/>of<sp/>values,<sp/>including<sp/>&apos;parameters&apos;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>details<sp/>of<sp/>the<sp/>force<sp/>calculation<sp/>are<sp/>in<sp/>&apos;force&apos;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.filename<sp/>:<sp/>str,<sp/>the<sp/>filename<sp/>that<sp/>was<sp/>read</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.comp<sp/><sp/><sp/><sp/><sp/>:<sp/>str,<sp/>name<sp/>of<sp/>the<sp/>component</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.time<sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>time<sp/>in<sp/>the<sp/>output<sp/>file</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.data<sp/><sp/><sp/><sp/><sp/>:<sp/>dictionary,<sp/>with<sp/>keys:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>x<sp/>position</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>y<sp/>position</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>z<sp/>position</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vx<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>x<sp/>velocity</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vy<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>y<sp/>velocity</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vz<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>z<sp/>velocity</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass<sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>mass<sp/>of<sp/>the<sp/>particle</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/><sp/><sp/>:<sp/>int,<sp/>the<sp/>integer<sp/>index<sp/>of<sp/>the<sp/>particle</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>potE<sp/><sp/><sp/><sp/>:<sp/>float,<sp/>the<sp/>potential<sp/>energy<sp/>value</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>filename,comp=None,verbose=0):</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;the<sp/>main<sp/>driver,<sp/>see<sp/>above<sp/>for<sp/>parameters&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="353" refid="classpsp__io_1_1_s_p_l_input_1aead07550f440b255cde9d6c8c56ad3f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.verbose<sp/><sp/>=<sp/>verbose</highlight></codeline>
<codeline lineno="354" refid="classpsp__io_1_1_s_p_l_input_1a11993c9be21a0d2caa3335f4adfebfe2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.filename<sp/>=<sp/>filename</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>initial<sp/>check<sp/>for<sp/>file<sp/>validity</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try:</highlight></codeline>
<codeline lineno="358" refid="classpsp__io_1_1_s_p_l_input_1ab4d284d7d7b42406164fc3f5159a16a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.f<sp/>=<sp/>open(self.filename,<sp/>&apos;rb&apos;)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>except<sp/>Exception:</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>IOError(&apos;Failed<sp/>to<sp/>open<sp/>&quot;{}&quot;&apos;.format(filename))</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>do<sp/>an<sp/>initial<sp/>read<sp/>of<sp/>the<sp/>header</highlight></codeline>
<codeline lineno="363" refid="classpsp__io_1_1_s_p_l_input_1a1ae6ace7a044df1d843a7a61b6b03dc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.primary_header<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>initialise<sp/>dictionaries</highlight></codeline>
<codeline lineno="366" refid="classpsp__io_1_1_s_p_l_input_1a233fb6f3eb7d55329cb551f0987f21c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.component_map<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="367" refid="classpsp__io_1_1_s_p_l_input_1ac2486bcfe3063f96fbbaa3d1efc6ac14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.header<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._read_primary_header()</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="classpsp__io_1_1_s_p_l_input_1ab284825eb23923bcbcfd0085aa419de7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.comp<sp/>=<sp/>comp</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_comps<sp/>=<sp/>list(self.header.keys())</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>comp<sp/>==<sp/>None:</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._summarise_primary_header()</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>if<sp/>a<sp/>component<sp/>is<sp/>defined,<sp/>retrieve<sp/>data</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>comp<sp/>!=<sp/>None:</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>comp<sp/>not<sp/>in<sp/>_comps:</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>IOError(&apos;The<sp/>specified<sp/>component<sp/>does<sp/>not<sp/>exist.&apos;)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.comp<sp/>=<sp/>comp</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>set<sp/>up<sp/>assuming<sp/>the<sp/>directory<sp/>of<sp/>the<sp/>main<sp/>file<sp/>is<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>as<sp/>the<sp/>subfiles.<sp/>could<sp/>add<sp/>verbose<sp/>flag<sp/>to<sp/>warn?</highlight></codeline>
<codeline lineno="388" refid="classpsp__io_1_1_s_p_l_input_1a95f8948288d00d8f8e2df611ce1fe531" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.indir<sp/>=<sp/>filename.split(&apos;SPL&apos;)[0]</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>now<sp/>we<sp/>can<sp/>query<sp/>out<sp/>a<sp/>specific<sp/>component</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._make_spl_file_list(self.comp)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>given<sp/>the<sp/>comp,<sp/>pull<sp/>the<sp/>data.</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._read_spl_component_data()</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>wrapup</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.f.close()</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>_read_primary_header(self):</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;read<sp/>the<sp/>primary<sp/>header<sp/>from<sp/>an<sp/>SPL.<sp/>file&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._check_magic_number()</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.f.seek(0)</highlight></codeline>
<codeline lineno="406" refid="classpsp__io_1_1_s_p_l_input_1a3975708e66f040ed3469c2d92cecc0a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.time,<sp/>=<sp/>np.fromfile(self.f,<sp/>dtype=&apos;&lt;f8&apos;,<sp/>count=1)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._nbodies_tot,<sp/>self._ncomp<sp/>=<sp/>np.fromfile(self.f,<sp/>dtype=np.uint32,count=2)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_start<sp/>=<sp/>16<sp/>#<sp/>guaranteed<sp/>first<sp/>component<sp/>location...</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>now<sp/>read<sp/>the<sp/>component<sp/>headers</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>comp<sp/>in<sp/>range(0,self._ncomp):</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.f.seek(data_start)<sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_comp<sp/>=<sp/>self._read_spl_component_header()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_start<sp/>=<sp/>next_comp<sp/></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>_read_spl_component_header(self):</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;read<sp/>in<sp/>the<sp/>header<sp/>for<sp/>a<sp/>single<sp/>component,<sp/>from<sp/>an<sp/>SPL.<sp/>file&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_start<sp/>=<sp/>self.f.tell()</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>manually<sp/>do<sp/>headers</highlight></codeline>
<codeline lineno="423" refid="classpsp__io_1_1_s_p_l_input_1a52ef1d1ed9776c5b030db1356df9b4f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_1,_2,self.nprocs,<sp/>nbodies,<sp/>nint_attr,<sp/>nfloat_attr,<sp/>infostringlen<sp/>=<sp/>np.fromfile(self.f,<sp/>dtype=np.uint32,<sp/>count=7)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>need<sp/>to<sp/>figure<sp/>out<sp/>what<sp/>to<sp/>do<sp/>with<sp/>nprocs...it<sp/>has<sp/>to<sp/>always<sp/>be<sp/>the<sp/>same,<sp/>right?</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head<sp/>=<sp/>np.fromfile(self.f,<sp/>dtype=np.dtype((np.bytes_,<sp/>infostringlen)),count=1)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_normal<sp/>=<sp/>head[0].decode()</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_dict<sp/>=<sp/>yaml.safe_load(head_normal)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_dict[&apos;nint_attr&apos;]<sp/><sp/><sp/>=<sp/>nint_attr</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_dict[&apos;nfloat_attr&apos;]<sp/>=<sp/>nfloat_attr</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>data<sp/>starts<sp/>at<sp/>...</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_comp<sp/>=<sp/>4*7<sp/>+<sp/>infostringlen<sp/>+<sp/>data_start</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.component_map[head_dict[&apos;name&apos;]]<sp/><sp/>=<sp/>next_comp</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.header[head_dict[&apos;name&apos;]]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>head_dict</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_comp<sp/>+=<sp/><sp/>self.nprocs*1024</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>specifically<sp/>look<sp/>for<sp/>indexing</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try:</highlight></codeline>
<codeline lineno="443" refid="classpsp__io_1_1_s_p_l_input_1a9b161af89ccca6e0a707bf4e1d82b01d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.indexing<sp/>=<sp/>head_dict[&apos;parameters&apos;][&apos;indexing&apos;]</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>except:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.indexing<sp/>=<sp/>head_dict[&apos;indexing&apos;]==&apos;true&apos;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>next_comp</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>_make_spl_file_list(self,comp):</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.f.seek(self.component_map[comp])</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PBUF_SZ<sp/>=<sp/>1024</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PBUF_SM<sp/>=<sp/>32</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="classpsp__io_1_1_s_p_l_input_1a2c4f830d66d53dd3f195dcea6b55eb76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.subfiles<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>procnum<sp/>in<sp/>range(0,self.nprocs):</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PBUF<sp/>=<sp/>np.fromfile(self.f,<sp/>dtype=np.dtype((np.bytes_,<sp/>PBUF_SZ)),count=1)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subfile<sp/>=<sp/>PBUF[0].split(b&apos;\x00&apos;)[0].decode()</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.subfiles.append(subfile)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>_summarise_primary_header(self):</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;a<sp/>short<sp/>summary<sp/>of<sp/>what<sp/>is<sp/>in<sp/>the<sp/>file&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncomponents<sp/>=<sp/>len(self.header.keys())</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp_list<sp/><sp/><sp/>=<sp/>list(self.header.keys())</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;Found<sp/>{}<sp/>components.&quot;.format(ncomponents))</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>n<sp/>in<sp/>range(0,ncomponents):</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;Component<sp/>{}:<sp/>{}&quot;.format(n,comp_list[n]))</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>_read_spl_component_data(self):</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FullParticles<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>first<sp/>pass:<sp/>get<sp/>everything<sp/>into<sp/>memory</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>n<sp/>in<sp/>range(0,len(self.subfiles)):</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FullParticles[n]<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.verbose&gt;1:</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&apos;spl_io._read_spl_component_data:<sp/>On<sp/>file<sp/>{}<sp/>of<sp/>{}.&apos;.format(n,len(self.subfiles)))</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbl<sp/>=<sp/>self._handle_spl_subfile(self.subfiles[n])</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>k<sp/>in<sp/>tbl.keys():</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FullParticles[n][k]<sp/>=<sp/>tbl[k]</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>construct<sp/>a<sp/>single<sp/>dictionary<sp/>for<sp/>the<sp/>particles</highlight></codeline>
<codeline lineno="492" refid="classpsp__io_1_1_s_p_l_input_1a7f200daa7f28844e55a3353825498380" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.data<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>k<sp/>in<sp/>tbl.keys():</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.data[k]<sp/>=<sp/>np.concatenate([FullParticles[n][k]<sp/>for<sp/>n<sp/>in<sp/>range(0,len(self.subfiles))])</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>cleanup...</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>FullParticles</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>_check_magic_number(self):</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.f.seek(16)<sp/><sp/>#<sp/>find<sp/>magic<sp/>number</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmagic,<sp/>=<sp/>np.fromfile(self.f,<sp/>dtype=np.uint32,<sp/>count=1)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>check<sp/>if<sp/>it<sp/>is<sp/>float<sp/>vs.<sp/>double</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>cmagic<sp/>==<sp/>2915019716:</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._float_len<sp/>=<sp/>4</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._float_str<sp/>=<sp/>&apos;f&apos;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._float_len<sp/>=<sp/>8</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._float_str<sp/>=<sp/>&apos;d&apos;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>_handle_spl_subfile(self,subfilename):</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subfile<sp/>=<sp/>open(self.indir+subfilename,&apos;rb&apos;)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbodies,<sp/>=<sp/>np.fromfile(subfile,<sp/>dtype=np.uint32,<sp/>count=1)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subfile.close()<sp/>#<sp/>close<sp/>the<sp/>opened<sp/>file</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>read<sp/>the<sp/>data</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbl<sp/>=<sp/>self._read_component_data(self.indir+subfilename,nbodies,4)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>the<sp/>offset<sp/>is<sp/>always<sp/>fixed<sp/>in<sp/>SPL<sp/>subfiles</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>tbl</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>_read_component_data(self,filename,nbodies,offset):</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;read<sp/>in<sp/>all<sp/>data<sp/>for<sp/>component&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype_str<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colnames<sp/><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.header[self.comp][&apos;parameters&apos;][&apos;indexing&apos;]:</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>if<sp/>indexing<sp/>is<sp/>on,<sp/>the<sp/>0th<sp/>column<sp/>is<sp/>Long</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype_str<sp/>=<sp/>dtype_str<sp/>+<sp/>[&apos;l&apos;]</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colnames<sp/><sp/>=<sp/>colnames<sp/>+<sp/>[&apos;index&apos;]</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype_str<sp/>=<sp/>dtype_str<sp/>+<sp/>[self._float_str]<sp/>*<sp/>8</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colnames<sp/>=<sp/>colnames<sp/>+<sp/>[&apos;m&apos;,<sp/>&apos;x&apos;,<sp/>&apos;y&apos;,<sp/>&apos;z&apos;,<sp/>&apos;vx&apos;,<sp/>&apos;vy&apos;,<sp/>&apos;vz&apos;,<sp/>&apos;potE&apos;]</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype_str<sp/>=<sp/>dtype_str<sp/>+<sp/>[&apos;i&apos;]<sp/>*<sp/>self.header[self.comp][&apos;nint_attr&apos;]</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colnames<sp/>=<sp/>colnames<sp/>+<sp/>[&apos;i_attr{}&apos;.format(i)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(self.header[self.comp][&apos;nint_attr&apos;])]</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype_str<sp/>=<sp/>dtype_str<sp/>+<sp/>[self._float_str]<sp/>*<sp/>self.header[self.comp][&apos;nfloat_attr&apos;]</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colnames<sp/>=<sp/>colnames<sp/>+<sp/>[&apos;f_attr{}&apos;.format(i)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(self.header[self.comp][&apos;nfloat_attr&apos;])]</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype<sp/>=<sp/>np.dtype(&apos;,&apos;.join(dtype_str))</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>np.memmap(filename,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=dtype,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape=(1,<sp/>nbodies),</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset=offset,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>order=&apos;F&apos;,<sp/>mode=&apos;r&apos;)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbl<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i,<sp/>name<sp/>in<sp/>enumerate(colnames):</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbl[name]<sp/>=<sp/>np.array(out[&apos;f{}&apos;.format(i)][0],<sp/>copy=True)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>out<sp/><sp/>#<sp/>close<sp/>the<sp/>memmap<sp/>instance</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>tbl</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/weinberg/Projects/EXP/utils/Analysis/psp_io.py"/>
  </compounddef>
</doxygen>
