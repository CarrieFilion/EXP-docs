<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_iterator" kind="struct" language="C++" prot="public">
    <compoundname>Iterator</compoundname>
    <derivedcompoundref refid="class_iterable" prot="public" virt="non-virtual">Iterable&lt; T &gt;</derivedcompoundref>
    <includes refid="_iterable_8_h" local="no">Iterable.H</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_iterator_1a397e0a4d87f933bbfd566a3368aca34c" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using Iterator&lt; T &gt;::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>Iterator::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Iterable.H" line="11" column="5" bodyfile="/home/weinberg/Projects/EXP/include/Iterable.H" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_iterator_1acdd10e3cfe71d270663c73685c1b0791" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using Iterator&lt; T &gt;::iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <qualifiedname>Iterator::iterator_category</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Iterable.H" line="10" column="5" bodyfile="/home/weinberg/Projects/EXP/include/Iterable.H" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_iterator_1a37c4732ae0b73e9fdc3a585c01750d05" prot="public" static="no">
        <type>T *</type>
        <definition>using Iterator&lt; T &gt;::pointer =  T*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>Iterator::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Iterable.H" line="13" column="5" bodyfile="/home/weinberg/Projects/EXP/include/Iterable.H" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_iterator_1a104c7f213cd33d599aa25277176529d5" prot="public" static="no">
        <type>T &amp;</type>
        <definition>using Iterator&lt; T &gt;::reference =  T&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>Iterator::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Iterable.H" line="14" column="5" bodyfile="/home/weinberg/Projects/EXP/include/Iterable.H" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_iterator_1ab30ee4ae468e806a7897d6a0c7705c54" prot="public" static="no">
        <type>T</type>
        <definition>using Iterator&lt; T &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>Iterator::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/Iterable.H" line="12" column="5" bodyfile="/home/weinberg/Projects/EXP/include/Iterable.H" bodystart="12" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Iterable&lt; T &gt;</label>
        <link refid="class_iterable"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Iterator&lt; T &gt;</label>
        <link refid="struct_iterator"/>
      </node>
    </inheritancegraph>
    <location file="/home/weinberg/Projects/EXP/include/Iterable.H" line="8" column="1" bodyfile="/home/weinberg/Projects/EXP/include/Iterable.H" bodystart="9" bodyend="15"/>
    <listofallmembers>
      <member refid="struct_iterator_1a397e0a4d87f933bbfd566a3368aca34c" prot="public" virt="non-virtual"><scope>Iterator</scope><name>difference_type</name></member>
      <member refid="struct_iterator_1acdd10e3cfe71d270663c73685c1b0791" prot="public" virt="non-virtual"><scope>Iterator</scope><name>iterator_category</name></member>
      <member refid="struct_iterator_1a37c4732ae0b73e9fdc3a585c01750d05" prot="public" virt="non-virtual"><scope>Iterator</scope><name>pointer</name></member>
      <member refid="struct_iterator_1a104c7f213cd33d599aa25277176529d5" prot="public" virt="non-virtual"><scope>Iterator</scope><name>reference</name></member>
      <member refid="struct_iterator_1ab30ee4ae468e806a7897d6a0c7705c54" prot="public" virt="non-virtual"><scope>Iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
